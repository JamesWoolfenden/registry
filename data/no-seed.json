[
  {
    "name": "io.github.21st-dev/magic-mcp",
    "description": "It's like v0 but in your Cursor/WindSurf/Cline. 21st dev Magic MCP server for working with your frontend like Magic",
    "status": "active",
    "repository": {
      "url": "https://github.com/21st-dev/magic-mcp",
      "source": "github",
      "id": "935450522"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.46",
        "environmentVariables": [
          {
            "description": "${input:apiKey}",
            "name": "API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@21st-dev/magic",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4e9cf4cf-71f6-4aca-bae8-2d10a29ca2e0",
        "versionId": "4e9cf4cf-71f6-4aca-bae8-2d10a29ca2e0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z"
      }
    }
  },
  {
    "name": "io.github.adfin-engineering/mcp-server-adfin",
    "description": "A Model Context Protocol Server for connecting with Adfin APIs ",
    "status": "active",
    "repository": {
      "url": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "source": "github",
      "id": "951338147"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Directory to run the project from",
            "isRequired": true,
            "format": "string",
            "value": "<absolute_path_to_adfin_mcp_folder>",
            "default": "<absolute_path_to_adfin_mcp_folder>",
            "type": "named",
            "name": "--directory",
            "valueHint": "<absolute_path_to_adfin_mcp_folder>"
          },
          {
            "description": "Script to execute",
            "isRequired": true,
            "format": "string",
            "value": "main_adfin_mcp.py",
            "default": "main_adfin_mcp.py",
            "type": "positional",
            "valueHint": "main_adfin_mcp.py"
          }
        ],
        "environmentVariables": [
          {
            "description": "<email>",
            "name": "ADFIN_EMAIL"
          },
          {
            "description": "<password>",
            "name": "ADFIN_PASSWORD"
          }
        ],
        "registryType": "pypi",
        "identifier": "adfinmcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d3669201-252f-403c-944b-c3ec0845782b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d3669201-252f-403c-944b-c3ec0845782b"
      }
    }
  },
  {
    "name": "io.github.tinyfish-io/agentql-mcp",
    "description": "Model Context Protocol server that integrates AgentQL's data extraction capabilities.",
    "status": "active",
    "repository": {
      "url": "https://github.com/tinyfish-io/agentql-mcp",
      "source": "github",
      "id": "906462272"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "YOUR_API_KEY",
            "name": "AGENTQL_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "agentql-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d86f2098-0be9-4b52-b32e-9d0f17333197",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d86f2098-0be9-4b52-b32e-9d0f17333197"
      }
    }
  },
  {
    "name": "io.github.agentrpc/agentrpc",
    "description": "A universal RPC layer for AI agents. Connect to any function, any language, any framework, in minutes.",
    "status": "active",
    "repository": {
      "url": "https://github.com/agentrpc/agentrpc",
      "source": "github",
      "id": "949728461"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.16",
        "packageArguments": [
          {
            "description": "Positional argument",
            "isRequired": true,
            "format": "string",
            "value": "mcp",
            "default": "mcp",
            "type": "positional",
            "valueHint": "mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "<YOUR_API_SECRET>",
            "name": "AGENTRPC_API_SECRET"
          }
        ],
        "registryType": "npm",
        "identifier": "agentrpc",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c296f683-5578-474a-bbef-00cfc2716fbc",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c296f683-5578-474a-bbef-00cfc2716fbc"
      }
    }
  },
  {
    "name": "io.github.aliyun/alibabacloud-adb-mysql-mcp-server",
    "description": "AnalyticDB for MySQL MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server",
      "source": "github",
      "id": "956503834"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "With flag and value",
            "isRequired": true,
            "format": "string",
            "value": "adb-mysql-mcp-server",
            "default": "adb-mysql-mcp-server",
            "type": "named",
            "name": "--with",
            "valueHint": "adb-mysql-mcp-server"
          },
          {
            "description": "Script/module to run",
            "isRequired": true,
            "format": "string",
            "value": "adb-mysql-mcp-server",
            "default": "adb-mysql-mcp-server",
            "type": "positional",
            "valueHint": "adb-mysql-mcp-server"
          }
        ],
        "environmentVariables": [
          {
            "description": "host",
            "name": "ADB_MYSQL_HOST"
          },
          {
            "description": "port",
            "name": "ADB_MYSQL_PORT"
          },
          {
            "description": "database_user",
            "name": "ADB_MYSQL_USER"
          },
          {
            "description": "database_password",
            "name": "ADB_MYSQL_PASSWORD"
          },
          {
            "description": "database",
            "name": "ADB_MYSQL_DATABASE"
          }
        ],
        "registryType": "pypi",
        "identifier": "adb-mysql-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7f6e6610-4df3-490e-95e3-03ec954eb2ab",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7f6e6610-4df3-490e-95e3-03ec954eb2ab"
      }
    }
  },
  {
    "name": "io.github.aliyun/alibaba-cloud-ops-mcp-server",
    "description": "AlibabaCloud CloudOps MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/aliyun/alibaba-cloud-ops-mcp-server",
      "source": "github",
      "id": "967873415"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.8.6",
        "environmentVariables": [
          {
            "description": "Your Access Key ID",
            "name": "ALIBABA_CLOUD_ACCESS_KEY_ID"
          },
          {
            "description": "Your Access Key SECRET",
            "name": "ALIBABA_CLOUD_ACCESS_KEY_SECRET"
          }
        ],
        "registryType": "pypi",
        "identifier": "alibaba-cloud-ops-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "24303d73-1ee0-4119-b2f1-3a57c17de967",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "24303d73-1ee0-4119-b2f1-3a57c17de967"
      }
    }
  },
  {
    "name": "io.github.apache/iotdb-mcp-server",
    "description": "Apache IoTDB MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/apache/iotdb-mcp-server",
      "source": "github",
      "id": "959057712"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "The working directory for the command",
            "isRequired": true,
            "format": "string",
            "value": "YOUR_REPO_PATH/src/iotdb_mcp_server",
            "default": "YOUR_REPO_PATH/src/iotdb_mcp_server",
            "type": "named",
            "name": "--directory",
            "valueHint": "YOUR_REPO_PATH/src/iotdb_mcp_server"
          },
          {
            "description": "Python script to run",
            "isRequired": true,
            "format": "string",
            "value": "server.py",
            "default": "server.py",
            "type": "positional",
            "valueHint": "server.py"
          }
        ],
        "environmentVariables": [
          {
            "description": "127.0.0.1",
            "name": "IOTDB_HOST"
          },
          {
            "description": "6667",
            "name": "IOTDB_PORT"
          },
          {
            "description": "root",
            "name": "IOTDB_USER"
          },
          {
            "description": "root",
            "name": "IOTDB_PASSWORD"
          },
          {
            "description": "test",
            "name": "IOTDB_DATABASE"
          },
          {
            "description": "table",
            "name": "IOTDB_SQL_DIALECT"
          }
        ],
        "registryType": "pypi",
        "identifier": "iotdb-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "31d9b130-4676-45d9-930f-a8bc2d5a3b9e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "31d9b130-4676-45d9-930f-a8bc2d5a3b9e"
      }
    }
  },
  {
    "name": "io.github.apache/iotdb",
    "description": "Apache IoTDB",
    "status": "active",
    "repository": {
      "url": "https://github.com/apache/iotdb",
      "source": "github",
      "id": "158975124"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "2.0.5",
        "registryType": "oci",
        "identifier": "apache/iotdb",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "330047d1-f8c2-4931-9347-d133f1717de3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "330047d1-f8c2-4931-9347-d133f1717de3"
      }
    }
  },
  {
    "name": "io.github.apify/actors-mcp-server",
    "description": "Model Context Protocol (MCP) Server for Apify's Actors",
    "status": "active",
    "repository": {
      "url": "https://github.com/apify/actors-mcp-server",
      "source": "github",
      "id": "911256711"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.31",
        "packageArguments": [
          {
            "description": "--actors lukaskrivka/google-maps-with-contact-details,apify/instagram-scraper",
            "isRequired": true,
            "format": "string",
            "value": "lukaskrivka/google-maps-with-contact-details,apify/instagram-scraper",
            "default": "lukaskrivka/google-maps-with-contact-details,apify/instagram-scraper",
            "type": "named",
            "name": "--actors",
            "valueHint": "lukaskrivka/google-maps-with-contact-details,apify/instagram-scraper"
          }
        ],
        "environmentVariables": [
          {
            "description": "${input:apify_token}",
            "name": "APIFY_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "@apify/actors-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "195dfdbd-bb15-4752-80b6-abc9212cd80f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "195dfdbd-bb15-4752-80b6-abc9212cd80f"
      }
    }
  },
  {
    "name": "io.github.apimatic/apimatic-validator-mcp",
    "description": "APIMatic Validator MCP Server for validating OpenAPI specs via APIMatic's API with MCP",
    "status": "active",
    "repository": {
      "url": "https://github.com/apimatic/apimatic-validator-mcp",
      "source": "github",
      "id": "951214203"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "<Add your APIMatic token here>",
            "name": "APIMATIC_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "apimatic-validator---mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5c95a170-d394-4b21-a100-bb953b872922",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5c95a170-d394-4b21-a100-bb953b872922"
      }
    }
  },
  {
    "name": "io.github.arize-ai/phoenix",
    "description": "AI Observability & Evaluation",
    "status": "active",
    "repository": {
      "url": "https://github.com/Arize-ai/phoenix",
      "source": "github",
      "id": "564072810"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "11.32.1",
        "registryType": "pypi",
        "identifier": "arize-phoenix",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "de2d7f51-ca20-4fac-abdb-85a912d26375",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "de2d7f51-ca20-4fac-abdb-85a912d26375"
      }
    }
  },
  {
    "name": "io.github.datastax/astra-db-mcp",
    "description": "An MCP server for Astra DB workloads",
    "status": "active",
    "repository": {
      "url": "https://github.com/datastax/astra-db-mcp",
      "source": "github",
      "id": "943241240"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.2.0",
        "registryType": "npm",
        "identifier": "@datastax/astra-db-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "50f15d97-7d84-49f7-9232-f797e006358d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "50f15d97-7d84-49f7-9232-f797e006358d"
      }
    }
  },
  {
    "name": "io.github.audienseco/mcp-audiense-insights",
    "description": "Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Claude and other MCP-compatible clients to interact with your Audiense Insights account",
    "status": "active",
    "repository": {
      "url": "https://github.com/AudienseCo/mcp-audiense-insights",
      "source": "github",
      "id": "925304505"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "environmentVariables": [
          {
            "description": "your_client_id_here",
            "name": "AUDIENSE_CLIENT_ID"
          },
          {
            "description": "your_client_secret_here",
            "name": "AUDIENSE_CLIENT_SECRET"
          },
          {
            "description": "your_token_here",
            "name": "TWITTER_BEARER_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-audiense-insights",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d85fa87b-48e1-4b81-8408-9d0c446f7de3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d85fa87b-48e1-4b81-8408-9d0c446f7de3"
      }
    }
  },
  {
    "name": "io.github.bankless/onchain-mcp",
    "description": "Bringing the bankless onchain API to MCP",
    "status": "active",
    "repository": {
      "url": "https://github.com/Bankless/onchain-mcp",
      "source": "github",
      "id": "946011336"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.6",
        "environmentVariables": [
          {
            "description": "your_api_token_here",
            "name": "BANKLESS_API_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "@bankless/onchain-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2535daf3-637b-40d1-a4c2-41ef60a726b8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2535daf3-637b-40d1-a4c2-41ef60a726b8"
      }
    }
  },
  {
    "name": "io.github.ahnlabio/bicscan-mcp",
    "description": "BICScan MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/ahnlabio/bicscan-mcp",
      "source": "github",
      "id": "954410951"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "use repo url",
            "isRequired": true,
            "format": "string",
            "value": "git+https://github.com/ahnlabio/bicscan-mcp",
            "default": "git+https://github.com/ahnlabio/bicscan-mcp",
            "type": "named",
            "name": "--from",
            "valueHint": "git+https://github.com/ahnlabio/bicscan-mcp"
          },
          {
            "description": "subcommand or positional argument",
            "isRequired": true,
            "format": "string",
            "value": "bicscan-mcp",
            "default": "bicscan-mcp",
            "type": "positional",
            "valueHint": "bicscan-mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "YOUR_BICSCAN_API_KEY_HERE",
            "name": "BICSCAN_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "bicscan-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "36e14e79-6228-442f-b3c7-c7080b6282f0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "36e14e79-6228-442f-b3c7-c7080b6282f0"
      }
    }
  },
  {
    "name": "io.github.bitrise-io/bitrise-mcp",
    "description": "MCP Server for the Bitrise API, enabling app management, build operations, artifact management and more.",
    "status": "active",
    "repository": {
      "url": "https://github.com/bitrise-io/bitrise-mcp",
      "source": "github",
      "id": "958502546"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "source package location",
            "isRequired": true,
            "format": "string",
            "value": "git+https://github.com/bitrise-io/bitrise-mcp@v1.1.0",
            "default": "git+https://github.com/bitrise-io/bitrise-mcp@v1.1.0",
            "type": "named",
            "name": "--from",
            "valueHint": "git+https://github.com/bitrise-io/bitrise-mcp@v1.1.0"
          },
          {
            "description": "local entrypoint command",
            "isRequired": true,
            "format": "string",
            "value": "bitrise-mcp",
            "default": "bitrise-mcp",
            "type": "positional",
            "valueHint": "bitrise-mcp"
          },
          {
            "description": "list of enabled API groups",
            "isRequired": true,
            "format": "string",
            "value": "cache-items,pipelines",
            "default": "cache-items,pipelines",
            "type": "named",
            "name": "--enabled-api-groups",
            "valueHint": "cache-items,pipelines"
          }
        ],
        "environmentVariables": [
          {
            "description": "<YOUR_PAT>",
            "name": "BITRISE_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "bitrise-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9e07df79-22e2-464d-a842-06f08b875196",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9e07df79-22e2-464d-a842-06f08b875196"
      }
    }
  },
  {
    "name": "io.github.box-community/mcp-server-box",
    "description": "An MCP server capable of interacting with the Box API",
    "status": "active",
    "repository": {
      "url": "https://github.com/box-community/mcp-server-box",
      "source": "github",
      "id": "938387717"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "src/mcp_server_box.py",
            "default": "src/mcp_server_box.py",
            "type": "positional",
            "valueHint": "src/mcp_server_box.py"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server-box",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "46bcb36f-ede9-412e-8181-7c7ece41fa04",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "46bcb36f-ede9-412e-8181-7c7ece41fa04"
      }
    }
  },
  {
    "name": "io.github.chroma-core/chroma-mcp",
    "description": "A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma",
    "status": "active",
    "repository": {
      "url": "https://github.com/chroma-core/chroma-mcp",
      "source": "github",
      "id": "930632525"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.2",
        "registryType": "pypi",
        "identifier": "chroma-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "97de67c4-a78f-4ea7-9233-4da9fe6752cf",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "97de67c4-a78f-4ea7-9233-4da9fe6752cf"
      }
    }
  },
  {
    "name": "io.github.circleci-public/mcp-server-circleci",
    "description": "A specialized server implementation for the Model Context Protocol (MCP) designed to integrate with CircleCI's development workflow. This project serves as a bridge between CircleCI's infrastructure and the Model Context Protocol, enabling enhanced AI-powered development experiences.",
    "status": "active",
    "repository": {
      "url": "https://github.com/CircleCI-Public/mcp-server-circleci",
      "source": "github",
      "id": "955501958"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.7.1",
        "environmentVariables": [
          {
            "description": "your-circleci-token",
            "name": "CIRCLECI_TOKEN"
          },
          {
            "description": "https://circleci.com",
            "name": "CIRCLECI_BASE_URL"
          }
        ],
        "registryType": "npm",
        "identifier": "@circleci/mcp-server-circleci",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a48ff624-6d95-4b8e-a0ed-498c4d838411",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a48ff624-6d95-4b8e-a0ed-498c4d838411"
      }
    }
  },
  {
    "name": "io.github.clickhouse/mcp-clickhouse",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/ClickHouse/mcp-clickhouse",
      "source": "github",
      "id": "908231244"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.7",
        "packageArguments": [
          {
            "description": "Use the specified runtime feature",
            "isRequired": true,
            "format": "string",
            "value": "mcp-clickhouse",
            "default": "mcp-clickhouse",
            "type": "named",
            "name": "--with",
            "valueHint": "mcp-clickhouse"
          },
          {
            "description": "Specify Python version",
            "isRequired": true,
            "format": "string",
            "value": "3.13",
            "default": "3.13",
            "type": "named",
            "name": "--python",
            "valueHint": "3.13"
          },
          {
            "description": "Positional argument to run (script or module)",
            "isRequired": true,
            "format": "string",
            "value": "mcp-clickhouse",
            "default": "mcp-clickhouse",
            "type": "positional",
            "valueHint": "mcp-clickhouse"
          }
        ],
        "environmentVariables": [
          {
            "description": "<clickhouse-host>",
            "name": "CLICKHOUSE_HOST"
          },
          {
            "description": "<clickhouse-user>",
            "name": "CLICKHOUSE_USER"
          },
          {
            "description": "<clickhouse-password>",
            "name": "CLICKHOUSE_PASSWORD"
          },
          {
            "description": "<optional-database>",
            "name": "CLICKHOUSE_DATABASE"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-clickhouse",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "98259539-3c6f-4462-b2b6-9a2567ff0545",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "98259539-3c6f-4462-b2b6-9a2567ff0545"
      }
    }
  },
  {
    "name": "com.cloudflare/mcp-server-cloudflare",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/cloudflare/mcp-server-cloudflare",
      "source": "github",
      "id": "895268756"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "URL to SSE endpoint for observability",
            "isRequired": true,
            "format": "string",
            "value": "https://observability.mcp.cloudflare.com/sse",
            "default": "https://observability.mcp.cloudflare.com/sse",
            "type": "positional",
            "valueHint": "https://observability.mcp.cloudflare.com/sse"
          }
        ],
        "registryType": "npm",
        "identifier": "@cloudflare/mcp-server-cloudflare",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "remotes": [
      {
        "type": "sse",
        "url": "https://observability.mcp.cloudflare.com/sse"
      },
      {
        "type": "sse",
        "url": "https://bindings.mcp.cloudflare.com/sse"
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2ad7c503-7daa-46c8-9295-8a1ed53271a6",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2ad7c503-7daa-46c8-9295-8a1ed53271a6"
      }
    }
  },
  {
    "name": "io.github.codacy/codacy-mcp-server",
    "description": "Codacy's MCP Server implementation",
    "status": "active",
    "repository": {
      "url": "https://github.com/codacy/codacy-mcp-server",
      "source": "github",
      "id": "954645052"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "environmentVariables": [
          {
            "description": "<YOUR_TOKEN>",
            "name": "CODACY_ACCOUNT_TOKEN"
          },
          {
            "description": "<VERSION>",
            "name": "CODACY_CLI_VERSION"
          }
        ],
        "registryType": "npm",
        "identifier": "@codacy/codacy-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c746fe90-e3f6-4328-82c1-aeef49a2b6d9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c746fe90-e3f6-4328-82c1-aeef49a2b6d9"
      }
    }
  },
  {
    "name": "io.github.codelogicincengineering/codelogic-mcp-server",
    "description": "An MCP Server to utilize Codelogic's rich software dependency data in your AI programming assistant.",
    "status": "active",
    "repository": {
      "url": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server",
      "source": "github",
      "id": "959229901"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.2",
        "registryType": "pypi",
        "identifier": "codelogic-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6e6e3083-47bf-47da-9d0f-14805de093a9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6e6e3083-47bf-47da-9d0f-14805de093a9"
      }
    }
  },
  {
    "name": "io.github.comet-ml/opik-mcp",
    "description": "Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unified access to prompts, projects, traces, and metrics. ",
    "status": "active",
    "repository": {
      "url": "https://github.com/comet-ml/opik-mcp",
      "source": "github",
      "id": "946763772"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "packageArguments": [
          {
            "description": "API URL for the opik MCP server",
            "isRequired": true,
            "format": "string",
            "value": "https://www.comet.com/opik/api",
            "default": "https://www.comet.com/opik/api",
            "type": "named",
            "name": "--apiUrl",
            "valueHint": "https://www.comet.com/opik/api"
          },
          {
            "description": "API Key for authentication",
            "isRequired": true,
            "format": "string",
            "value": "YOUR_API_KEY",
            "default": "YOUR_API_KEY",
            "type": "named",
            "name": "--apiKey",
            "valueHint": "YOUR_API_KEY"
          },
          {
            "description": "Workspace name",
            "isRequired": true,
            "format": "string",
            "value": "default",
            "default": "default",
            "type": "named",
            "name": "--workspace",
            "valueHint": "default"
          },
          {
            "description": "Enable debug mode",
            "isRequired": true,
            "format": "string",
            "value": "true",
            "default": "true",
            "type": "named",
            "name": "--debug",
            "valueHint": "true"
          }
        ],
        "environmentVariables": [
          {
            "description": "https://www.comet.com/opik/api",
            "name": "OPIK_API_BASE_URL"
          },
          {
            "description": "YOUR_API_KEY",
            "name": "OPIK_API_KEY"
          },
          {
            "description": "default",
            "name": "OPIK_WORKSPACE_NAME"
          }
        ],
        "registryType": "oci",
        "identifier": "test-opik-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "61b3cbd8-8eee-4bef-a0ef-5fcaf6449201",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "61b3cbd8-8eee-4bef-a0ef-5fcaf6449201"
      }
    }
  },
  {
    "name": "io.github.couchbase-ecosystem/mcp-server-couchbase",
    "description": "MCP Server to interact with data in Couchbase Clusters",
    "status": "active",
    "repository": {
      "url": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
      "source": "github",
      "id": "955488295"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "packageArguments": [
          {
            "description": "Specify directory to work in.",
            "isRequired": true,
            "format": "string",
            "value": "path/to/cloned/repo/mcp-server-couchbase/",
            "default": "path/to/cloned/repo/mcp-server-couchbase/",
            "type": "named",
            "name": "--directory",
            "valueHint": "path/to/cloned/repo/mcp-server-couchbase/"
          },
          {
            "description": "Positional argument for Python script to execute.",
            "isRequired": true,
            "format": "string",
            "value": "src/mcp_server.py",
            "default": "src/mcp_server.py",
            "type": "positional",
            "valueHint": "src/mcp_server.py"
          }
        ],
        "environmentVariables": [
          {
            "description": "couchbases://connection-string",
            "name": "CB_CONNECTION_STRING"
          },
          {
            "description": "username",
            "name": "CB_USERNAME"
          },
          {
            "description": "password",
            "name": "CB_PASSWORD"
          },
          {
            "description": "bucket_name",
            "name": "CB_BUCKET_NAME"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-couchbase",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3f49614c-5424-4875-92ef-9697923375cf",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3f49614c-5424-4875-92ef-9697923375cf"
      }
    }
  },
  {
    "name": "io.github.its-dart/dart-mcp-server",
    "description": "Dart AI Model Context Protocol (MCP) server",
    "status": "active",
    "repository": {
      "url": "https://github.com/its-dart/dart-mcp-server",
      "source": "github",
      "id": "936960342"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.13",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "-i",
            "default": "-i",
            "type": "positional",
            "valueHint": "-i"
          },
          {
            "description": "--rm",
            "isRequired": true,
            "format": "string",
            "value": "--rm",
            "default": "--rm",
            "type": "positional",
            "valueHint": "--rm"
          },
          {
            "description": "-e",
            "isRequired": true,
            "format": "string",
            "value": "DART_TOKEN",
            "default": "DART_TOKEN",
            "type": "named",
            "name": "-e",
            "valueHint": "DART_TOKEN"
          },
          {
            "description": "mcp/dart",
            "isRequired": true,
            "format": "string",
            "value": "mcp/dart",
            "default": "mcp/dart",
            "type": "positional",
            "valueHint": "mcp/dart"
          }
        ],
        "environmentVariables": [
          {
            "description": "dsa_...",
            "name": "DART_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "dart-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9c2d91f0-76c4-4292-a19f-e81e962954b5",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9c2d91f0-76c4-4292-a19f-e81e962954b5"
      }
    }
  },
  {
    "name": "io.github.devhub/devhub-cms-mcp",
    "description": "DevHub CMS LLM integration through the Model Context Protocol",
    "status": "active",
    "repository": {
      "url": "https://github.com/devhub/devhub-cms-mcp",
      "source": "github",
      "id": "950064178"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.3.0",
        "registryType": "pypi",
        "identifier": "devhub-cms-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1743c861-7e1a-42b2-a300-6059fcd82cb9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1743c861-7e1a-42b2-a300-6059fcd82cb9"
      }
    }
  },
  {
    "name": "io.github.dynatrace-oss/dynatrace-mcp",
    "description": "MCP server for Dynatrace Observability",
    "status": "active",
    "repository": {
      "url": "https://github.com/dynatrace-oss/dynatrace-mcp",
      "source": "github",
      "id": "971357826"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "registryType": "npm",
        "identifier": "@dynatrace-oss/dynatrace-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3afff2d4-d77f-42c2-bf39-ce786ecb0ecf",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3afff2d4-d77f-42c2-bf39-ce786ecb0ecf"
      }
    }
  },
  {
    "name": "io.github.edgee-cloud/mcp-server-edgee",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/edgee-cloud/mcp-server-edgee",
      "source": "github",
      "id": "957822597"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "environmentVariables": [
          {
            "description": "<YOUR_TOKEN>",
            "name": "EDGEE_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "@edgee/mcp-server-edgee",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7c870985-c457-4221-8088-977680764f70",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7c870985-c457-4221-8088-977680764f70"
      }
    }
  },
  {
    "name": "io.github.edubase/mcp",
    "description": "The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-learning platform through the Model Context Protocol (MCP).",
    "status": "active",
    "repository": {
      "url": "https://github.com/EduBase/MCP",
      "source": "github",
      "id": "940803959"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.10",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "--rm",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "-e EDUBASE_API_URL",
            "isRequired": true,
            "format": "string",
            "value": "EDUBASE_API_URL",
            "default": "EDUBASE_API_URL",
            "type": "named",
            "name": "-e",
            "valueHint": "EDUBASE_API_URL"
          },
          {
            "description": "-e EDUBASE_API_APP",
            "isRequired": true,
            "format": "string",
            "value": "EDUBASE_API_APP",
            "default": "EDUBASE_API_APP",
            "type": "named",
            "name": "-e",
            "valueHint": "EDUBASE_API_APP"
          },
          {
            "description": "-e EDUBASE_API_KEY",
            "isRequired": true,
            "format": "string",
            "value": "EDUBASE_API_KEY",
            "default": "EDUBASE_API_KEY",
            "type": "named",
            "name": "-e",
            "valueHint": "EDUBASE_API_KEY"
          },
          {
            "description": "edubase/mcp",
            "isRequired": true,
            "format": "string",
            "value": "edubase/mcp",
            "default": "edubase/mcp",
            "type": "positional",
            "valueHint": "edubase/mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "https://domain.edubase.net/api",
            "name": "EDUBASE_API_URL"
          },
          {
            "description": "your_integration_app_id",
            "name": "EDUBASE_API_APP"
          },
          {
            "description": "your_integration_secret_key",
            "name": "EDUBASE_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "@edubase/mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "33102362-9e44-442f-8aa9-4443ce50c396",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "33102362-9e44-442f-8aa9-4443ce50c396"
      }
    }
  },
  {
    "name": "io.github.elastic/mcp-server-elasticsearch",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/elastic/mcp-server-elasticsearch",
      "source": "github",
      "id": "953992846"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "packageArguments": [
          {
            "description": "/path/to/your/project/dist/index.js",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/your/project/dist/index.js",
            "default": "/path/to/your/project/dist/index.js",
            "type": "positional",
            "valueHint": "/path/to/your/project/dist/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-elasticsearch-url",
            "name": "ES_URL"
          },
          {
            "description": "your-api-key",
            "name": "ES_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@elastic/mcp-server-elasticsearch",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1b8a16d9-0648-4790-b853-d919a6be16e9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1b8a16d9-0648-4790-b853-d919a6be16e9"
      }
    }
  },
  {
    "name": "io.github.esignaturescom/mcp-server-esignatures",
    "description": "MCP server for eSignatures (https://esignatures.com)",
    "status": "active",
    "repository": {
      "url": "https://github.com/esignaturescom/mcp-server-esignatures",
      "source": "github",
      "id": "922105354"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "mcp-server-esignatures",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d689b152-64e8-4f5d-a937-91331fa3a771",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d689b152-64e8-4f5d-a937-91331fa3a771"
      }
    }
  },
  {
    "name": "io.github.exa-labs/exa-mcp-server",
    "description": "Claude can perform Web Search | Exa with MCP (Model Context Protocol)",
    "status": "active",
    "repository": {
      "url": "https://github.com/exa-labs/exa-mcp-server",
      "source": "github",
      "id": "895291604"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.3.10",
        "packageArguments": [
          {
            "description": "Comma-separated list of tools",
            "isRequired": true,
            "format": "string",
            "value": "web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search",
            "default": "web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search",
            "type": "named",
            "name": "--tools",
            "valueHint": "web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-api-key-here",
            "name": "EXA_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "exa-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2a2aa283-57c8-474f-8a27-27954214cb6b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2a2aa283-57c8-474f-8a27-27954214cb6b"
      }
    }
  },
  {
    "name": "io.github.fewsats/fewsats-mcp",
    "description": "Fewsats MCP server",
    "status": "active",
    "repository": {
      "url": "https://github.com/Fewsats/fewsats-mcp",
      "source": "github",
      "id": "947211439"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.4",
        "environmentVariables": [
          {
            "description": "YOUR_FEWSATS_API_KEY",
            "name": "FEWSATS_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "fewsats-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0e7533d0-5925-4e06-a6bf-5da4e4e21aec",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0e7533d0-5925-4e06-a6bf-5da4e4e21aec"
      }
    }
  },
  {
    "name": "io.github.fibery-inc/fibery-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/Fibery-inc/fibery-mcp-server",
      "source": "github",
      "id": "947810349"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "packageArguments": [
          {
            "description": "directory to run from",
            "isRequired": true,
            "format": "string",
            "value": "path/to/cloned/fibery-mcp-server",
            "default": "path/to/cloned/fibery-mcp-server",
            "type": "named",
            "name": "--directory",
            "valueHint": "path/to/cloned/fibery-mcp-server"
          },
          {
            "description": "server entry point",
            "isRequired": true,
            "format": "string",
            "value": "fibery-mcp-server",
            "default": "fibery-mcp-server",
            "type": "positional",
            "valueHint": "fibery-mcp-server"
          },
          {
            "description": "Fibery host domain",
            "isRequired": true,
            "format": "string",
            "value": "your-domain.fibery.io",
            "default": "your-domain.fibery.io",
            "type": "named",
            "name": "--fibery-host",
            "valueHint": "your-domain.fibery.io"
          },
          {
            "description": "Fibery API Token",
            "isRequired": true,
            "format": "string",
            "value": "your-api-token",
            "default": "your-api-token",
            "type": "named",
            "name": "--fibery-api-token",
            "valueHint": "your-api-token"
          }
        ],
        "registryType": "pypi",
        "identifier": "fibery-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "78c126ff-906a-4596-9bf4-db2cf61796b8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "78c126ff-906a-4596-9bf4-db2cf61796b8"
      }
    }
  },
  {
    "name": "io.github.financial-datasets/mcp-server",
    "description": "An MCP server for interacting with the Financial Datasets stock market API.",
    "status": "active",
    "repository": {
      "url": "https://github.com/financial-datasets/mcp-server",
      "source": "github",
      "id": "944516885"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "server.py",
            "default": "server.py",
            "type": "positional",
            "valueHint": "server.py"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2d870a4e-d521-4d66-a471-abce884ea07b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2d870a4e-d521-4d66-a471-abce884ea07b"
      }
    }
  },
  {
    "name": "io.github.mendableai/firecrawl-mcp-server",
    "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
    "status": "active",
    "repository": {
      "url": "https://github.com/mendableai/firecrawl-mcp-server",
      "source": "github",
      "id": "899407931"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.9.0",
        "registryType": "npm",
        "identifier": "firecrawl-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "13b91785-9041-468d-a136-e6c9e9dd7be9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "13b91785-9041-468d-a136-e6c9e9dd7be9"
      }
    }
  },
  {
    "name": "io.github.fireproof-storage/mcp-database-server",
    "description": "Store and load JSON documents from LLM tool use",
    "status": "active",
    "repository": {
      "url": "https://github.com/fireproof-storage/mcp-database-server",
      "source": "github",
      "id": "904432283"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "todos",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0bee6074-d16a-4482-a315-5b8f0f1abcf1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0bee6074-d16a-4482-a315-5b8f0f1abcf1"
      }
    }
  },
  {
    "name": "io.github.gleanwork/mcp-server",
    "description": "MCP server for Glean API integration",
    "status": "active",
    "repository": {
      "url": "https://github.com/gleanwork/mcp-server",
      "source": "github",
      "id": "946754858"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.6.1",
        "environmentVariables": [
          {
            "description": "<glean instance name>",
            "name": "GLEAN_INSTANCE"
          },
          {
            "description": "<glean api token>",
            "name": "GLEAN_API_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "@gleanwork/mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3e50df21-8223-440d-bad9-dfc9ce117af4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3e50df21-8223-440d-bad9-dfc9ce117af4"
      }
    }
  },
  {
    "name": "io.github.nota/gyazo-mcp-server",
    "description": "Official Model Context Protocol server for Gyazo",
    "status": "active",
    "repository": {
      "url": "https://github.com/nota/gyazo-mcp-server",
      "source": "github",
      "id": "922406701"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "docker named argument for stdin",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i",
            "valueHint": "-i"
          },
          {
            "description": "docker named argument for removing the container after exit",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "docker named argument to set environment variable",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-e",
            "valueHint": "-e"
          },
          {
            "description": "docker positional argument indicating the image name",
            "isRequired": true,
            "format": "string",
            "value": "GYAZO_ACCESS_TOKEN",
            "default": "GYAZO_ACCESS_TOKEN",
            "type": "positional",
            "valueHint": "GYAZO_ACCESS_TOKEN"
          },
          {
            "description": "docker positional argument indicating the package to run",
            "isRequired": true,
            "format": "string",
            "value": "gyazo-mcp-server",
            "default": "gyazo-mcp-server",
            "type": "positional",
            "valueHint": "gyazo-mcp-server"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-access-token-here",
            "name": "GYAZO_ACCESS_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "@notainc/gyazo-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "11e3a5f5-867c-4f1e-ba79-1b803550fb1a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "11e3a5f5-867c-4f1e-ba79-1b803550fb1a"
      }
    }
  },
  {
    "name": "io.github.gotohuman/gotohuman-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/gotohuman/gotohuman-mcp-server",
      "source": "github",
      "id": "952612861"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "GOTOHUMAN_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@gotohuman/mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0f970fc6-418a-45c7-a665-00e725e8338d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0f970fc6-418a-45c7-a665-00e725e8338d"
      }
    }
  },
  {
    "name": "io.github.grafana/mcp-grafana",
    "description": "MCP server for Grafana",
    "status": "active",
    "repository": {
      "url": "https://github.com/grafana/mcp-grafana",
      "source": "github",
      "id": "907869862"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.6.5",
        "packageArguments": [
          {
            "description": "Remove container after exit",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "Publish a container's port(s) to the host",
            "isRequired": true,
            "format": "string",
            "value": "8000:8000",
            "default": "8000:8000",
            "type": "named",
            "name": "-p",
            "valueHint": "8000:8000"
          },
          {
            "description": "Set environment variable GRAFANA_URL",
            "isRequired": true,
            "format": "string",
            "value": "GRAFANA_URL",
            "default": "GRAFANA_URL",
            "type": "named",
            "name": "-e",
            "valueHint": "GRAFANA_URL"
          },
          {
            "description": "Set environment variable GRAFANA_API_KEY",
            "isRequired": true,
            "format": "string",
            "value": "GRAFANA_API_KEY",
            "default": "GRAFANA_API_KEY",
            "type": "named",
            "name": "-e",
            "valueHint": "GRAFANA_API_KEY"
          },
          {
            "description": "Container image to run",
            "isRequired": true,
            "format": "string",
            "value": "mcp/grafana",
            "default": "mcp/grafana",
            "type": "positional",
            "valueHint": "mcp/grafana"
          },
          {
            "description": "Enable debug mode",
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-debug"
          }
        ],
        "environmentVariables": [
          {
            "description": "http://localhost:3000",
            "name": "GRAFANA_URL"
          },
          {
            "description": "<your service account token>",
            "name": "GRAFANA_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "grafana/mcp-grafana",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1329d108-67d0-488a-85a1-cc65b58cf5cd",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1329d108-67d0-488a-85a1-cc65b58cf5cd"
      }
    }
  },
  {
    "name": "io.github.graphlit/graphlit-mcp-server",
    "description": "Model Context Protocol (MCP) Server for Graphlit Platform",
    "status": "active",
    "repository": {
      "url": "https://github.com/graphlit/graphlit-mcp-server",
      "source": "github",
      "id": "940989522"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "${input:organization_id}",
            "name": "GRAPHLIT_ORGANIZATION_ID"
          },
          {
            "description": "${input:environment_id}",
            "name": "GRAPHLIT_ENVIRONMENT_ID"
          },
          {
            "description": "${input:jwt_secret}",
            "name": "GRAPHLIT_JWT_SECRET"
          }
        ],
        "registryType": "npm",
        "identifier": "graphlit-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e44b5cad-3801-4403-b8ee-67f3ea1cd909",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e44b5cad-3801-4403-b8ee-67f3ea1cd909"
      }
    }
  },
  {
    "name": "io.github.greptimeteam/greptimedb-mcp-server",
    "description": "A Model Context Protocol (MCP) server implementation for GreptimeDB",
    "status": "active",
    "repository": {
      "url": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
      "source": "github",
      "id": "947171153"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "localhost",
            "name": "GREPTIMEDB_HOST"
          },
          {
            "description": "4002",
            "name": "GREPTIMEDB_PORT"
          },
          {
            "description": "root",
            "name": "GREPTIMEDB_USER"
          },
          {
            "description": "public",
            "name": "GREPTIMEDB_DATABASE"
          }
        ],
        "registryType": "pypi",
        "identifier": "greptimedb-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7974b19d-8030-428b-a016-168c65058b41",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7974b19d-8030-428b-a016-168c65058b41"
      }
    }
  },
  {
    "name": "io.github.heroku/heroku-mcp-server",
    "description": "Heroku Platform MCP Server using the Heroku CLI",
    "status": "active",
    "repository": {
      "url": "https://github.com/heroku/heroku-mcp-server",
      "source": "github",
      "id": "955359601"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.4",
        "registryType": "npm",
        "identifier": "@heroku/mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "cb1a844b-0145-433b-9a6f-f8ef19b2b3f4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "cb1a844b-0145-433b-9a6f-f8ef19b2b3f4"
      }
    }
  },
  {
    "name": "io.github.aliyun/alibabacloud-hologres-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/aliyun/alibabacloud-hologres-mcp-server",
      "source": "github",
      "id": "951662313"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.9",
        "environmentVariables": [
          {
            "description": "host",
            "name": "HOLOGRES_HOST"
          },
          {
            "description": "port",
            "name": "HOLOGRES_PORT"
          },
          {
            "description": "access_id",
            "name": "HOLOGRES_USER"
          },
          {
            "description": "access_key",
            "name": "HOLOGRES_PASSWORD"
          },
          {
            "description": "database",
            "name": "HOLOGRES_DATABASE"
          }
        ],
        "registryType": "pypi",
        "identifier": "hologres-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e67dda78-7d99-43e5-9e98-c80267f34940",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e67dda78-7d99-43e5-9e98-c80267f34940"
      }
    }
  },
  {
    "name": "io.github.hyperbrowserai/mcp",
    "description": "A MCP server implementation for hyperbrowser",
    "status": "active",
    "repository": {
      "url": "https://github.com/hyperbrowserai/mcp",
      "source": "github",
      "id": "938957096"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.25",
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "HYPERBROWSER_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "hyperbrowser-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "feb2b365-5fab-461e-a8d3-89e9349ee743",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "feb2b365-5fab-461e-a8d3-89e9349ee743"
      }
    }
  },
  {
    "name": "io.github.elie222/inbox-zero",
    "description": "The world's best AI personal assistant for email. Open source app to help you reach inbox zero fast.",
    "status": "active",
    "repository": {
      "url": "https://github.com/elie222/inbox-zero",
      "source": "github",
      "id": "665613753"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1-security",
        "registryType": "npm",
        "identifier": "inbox-zero",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "afd9f984-ea69-4a8c-86ac-fdb58f3ab37c",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "afd9f984-ea69-4a8c-86ac-fdb58f3ab37c"
      }
    }
  },
  {
    "name": "io.github.integration-app/mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/integration-app/mcp-server",
      "source": "github",
      "id": "916850434"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.3",
        "environmentVariables": [
          {
            "description": "<your-integration-app-token>",
            "name": "INTEGRATION_APP_TOKEN"
          },
          {
            "description": "hubspot",
            "name": "INTEGRATION_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@integration-app/mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "584b368d-b659-4bac-9036-dc319cf8d88d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "584b368d-b659-4bac-9036-dc319cf8d88d"
      }
    }
  },
  {
    "name": "io.github.jetbrains/mcp-jetbrains",
    "description": "A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio",
    "status": "active",
    "repository": {
      "url": "https://github.com/JetBrains/mcp-jetbrains",
      "source": "github",
      "id": "900744587"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.8.0",
        "environmentVariables": [
          {
            "description": "true",
            "name": "LOG_ENABLED"
          }
        ],
        "registryType": "npm",
        "identifier": "@jetbrains/mcp-proxy",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a51c6dec-56ed-403e-831b-fa5f155f8696",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a51c6dec-56ed-403e-831b-fa5f155f8696"
      }
    }
  },
  {
    "name": "io.github.kagisearch/kagimcp",
    "description": "A Model Context Protocol (MCP) server for Kagi search & other tools.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kagisearch/kagimcp",
      "source": "github",
      "id": "902662933"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "packageArguments": [
          {
            "description": "Specifies the working directory",
            "isRequired": true,
            "format": "string",
            "value": "/ABSOLUTE/PATH/TO/PARENT/FOLDER/kagimcp",
            "default": "/ABSOLUTE/PATH/TO/PARENT/FOLDER/kagimcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "/ABSOLUTE/PATH/TO/PARENT/FOLDER/kagimcp"
          },
          {
            "description": "Name of the package or executable to run",
            "isRequired": true,
            "format": "string",
            "value": "kagimcp",
            "default": "kagimcp",
            "type": "positional",
            "valueHint": "kagimcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "YOUR_API_KEY_HERE",
            "name": "KAGI_API_KEY"
          },
          {
            "description": "YOUR_ENGINE_CHOICE_HERE",
            "name": "KAGI_SUMMARIZER_ENGINE"
          }
        ],
        "registryType": "pypi",
        "identifier": "kagimcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "77963df5-3dc8-4961-ae0c-03e448b8713c",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "77963df5-3dc8-4961-ae0c-03e448b8713c"
      }
    }
  },
  {
    "name": "io.github.keboola/keboola-mcp-server",
    "description": "Model Context Protocol (MCP) Server for the Keboola Platform",
    "status": "active",
    "repository": {
      "url": "https://github.com/keboola/mcp-server",
      "source": "github",
      "id": "915789942"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.17.4",
        "packageArguments": [
          {
            "description": "Module to run",
            "isRequired": true,
            "format": "string",
            "value": "-m keboola_mcp_server.cli",
            "default": "-m keboola_mcp_server.cli",
            "type": "positional",
            "valueHint": "keboola_mcp_server.cli"
          },
          {
            "description": "Specify the transport type",
            "isRequired": true,
            "format": "string",
            "value": "stdio",
            "default": "stdio",
            "type": "named",
            "name": "--transport",
            "valueHint": "stdio"
          },
          {
            "description": "API URL for Keboola Connection",
            "isRequired": true,
            "format": "string",
            "value": "https://connection.YOUR_REGION.keboola.com",
            "default": "https://connection.YOUR_REGION.keboola.com",
            "type": "named",
            "name": "--api-url",
            "valueHint": "https://connection.YOUR_REGION.keboola.com"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_keboola_storage_token",
            "name": "KBC_STORAGE_TOKEN"
          },
          {
            "description": "your_workspace_schema",
            "name": "KBC_WORKSPACE_SCHEMA"
          }
        ],
        "registryType": "pypi",
        "identifier": "keboola-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "eba4813b-2591-4264-b7bc-c485b7652e92",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "eba4813b-2591-4264-b7bc-c485b7652e92"
      }
    }
  },
  {
    "name": "io.github.translated/lara-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/translated/lara-mcp",
      "source": "github",
      "id": "957768661"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.10",
        "packageArguments": [
          {
            "description": "Run the docker container in interactive mode",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "Automatically remove the container when it exits",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "Set environment variable LARA_ACCESS_KEY_ID in the container",
            "isRequired": true,
            "format": "string",
            "value": "LARA_ACCESS_KEY_ID",
            "default": "LARA_ACCESS_KEY_ID",
            "type": "named",
            "name": "-e",
            "valueHint": "LARA_ACCESS_KEY_ID"
          },
          {
            "description": "Set environment variable LARA_ACCESS_KEY_SECRET in the container",
            "isRequired": true,
            "format": "string",
            "value": "LARA_ACCESS_KEY_SECRET",
            "default": "LARA_ACCESS_KEY_SECRET",
            "type": "named",
            "name": "-e",
            "valueHint": "LARA_ACCESS_KEY_SECRET"
          }
        ],
        "environmentVariables": [
          {
            "description": "<YOUR_ACCESS_KEY_ID>",
            "name": "LARA_ACCESS_KEY_ID"
          },
          {
            "description": "<YOUR_ACCESS_KEY_SECRET>",
            "name": "LARA_ACCESS_KEY_SECRET"
          }
        ],
        "registryType": "oci",
        "identifier": "@translated/lara-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5026f1b0-0426-4ea2-8ec2-fab1fabb0a7e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5026f1b0-0426-4ea2-8ec2-fab1fabb0a7e"
      }
    }
  },
  {
    "name": "io.github.pydantic/logfire-mcp",
    "description": "The Logfire MCP Server is here! :tada:",
    "status": "active",
    "repository": {
      "url": "https://github.com/pydantic/logfire-mcp",
      "source": "github",
      "id": "943883428"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.5.1",
        "packageArguments": [
          {
            "description": "SELECT trace_id, message, created_at, attributes->>'service.name' as service FROM records WHERE severity_text = 'ERROR' ORDER BY created_at DESC LIMIT 10",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "SELECT",
            "valueHint": "SELECT trace_id, message, created_at, attributes->>'service.name' as service FROM records WHERE severity_text = 'ERROR' ORDER BY created_at DESC LIMIT 10"
          },
          {
            "description": "1440",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "1440",
            "valueHint": "1440"
          }
        ],
        "registryType": "pypi",
        "identifier": "logfire-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6e66e04c-86cc-43ec-90ed-1a91a0e4eb76",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6e66e04c-86cc-43ec-90ed-1a91a0e4eb76"
      }
    }
  },
  {
    "name": "io.github.langfuse/mcp-server-langfuse",
    "description": "Model Context Protocol (MCP) Server for Langfuse Prompt Management. This server allows you to access and manage your Langfuse prompts through the Model Context Protocol.",
    "status": "active",
    "repository": {
      "url": "https://github.com/langfuse/mcp-server-langfuse",
      "source": "github",
      "id": "933201974"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "environmentVariables": [
          {
            "description": "your-public-key",
            "name": "LANGFUSE_PUBLIC_KEY"
          },
          {
            "description": "your-secret-key",
            "name": "LANGFUSE_SECRET_KEY"
          },
          {
            "description": "https://cloud.langfuse.com",
            "name": "LANGFUSE_BASEURL"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-langfuse",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f88b50da-f452-452b-9f22-1c7da7542b36",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f88b50da-f452-452b-9f22-1c7da7542b36"
      }
    }
  },
  {
    "name": "io.github.lingodotdev/lingo.dev",
    "description": "\u26a1\ufe0f Open-source AI-powered CLI for web & mobile localization. Bring your own LLM or use Lingo.dev-managed localization engine.",
    "status": "active",
    "repository": {
      "url": "https://github.com/lingodotdev/lingo.dev",
      "source": "github",
      "id": "771479895"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "lingo.dev@0.111.4",
        "registryType": "oci",
        "identifier": "@lingo.dev",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1e2d718a-95b0-460b-8e57-86feec5356ce",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1e2d718a-95b0-460b-8e57-86feec5356ce"
      }
    }
  },
  {
    "name": "io.github.integromat/make-mcp-server",
    "description": "Make MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/integromat/make-mcp-server",
      "source": "github",
      "id": "946079810"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.5.0",
        "environmentVariables": [
          {
            "description": "<your-api-key>",
            "name": "MAKE_API_KEY"
          },
          {
            "description": "<your-zone>",
            "name": "MAKE_ZONE"
          },
          {
            "description": "<your-team-id>",
            "name": "MAKE_TEAM"
          }
        ],
        "registryType": "npm",
        "identifier": "@makehq/mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f4fca7d7-fbab-4174-ba76-1396c3451cf1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f4fca7d7-fbab-4174-ba76-1396c3451cf1"
      }
    }
  },
  {
    "name": "io.github.meilisearch/meilisearch-mcp",
    "description": "A Model Context Protocol (MCP) server for interacting with Meilisearch through LLM interfaces.",
    "status": "active",
    "repository": {
      "url": "https://github.com/meilisearch/meilisearch-mcp",
      "source": "github",
      "id": "907425333"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.0",
        "registryType": "pypi",
        "identifier": "meilisearch-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "11d467e3-6001-4e60-ba90-494ad9eb7ad2",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "11d467e3-6001-4e60-ba90-494ad9eb7ad2"
      }
    }
  },
  {
    "name": "io.github.memgraph/mcp-memgraph",
    "description": "Memgraph MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/memgraph/mcp-memgraph",
      "source": "github",
      "id": "946087272"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "mcp-memgraph",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "dd730dba-107c-40f0-b172-85500a22b5c2",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "dd730dba-107c-40f0-b172-85500a22b5c2"
      }
    }
  },
  {
    "name": "io.github.zilliztech/mcp-server-milvus",
    "description": "Model Context Protocol Servers for Milvus",
    "status": "active",
    "repository": {
      "url": "https://github.com/zilliztech/mcp-server-milvus",
      "source": "github",
      "id": "943619628"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "packageArguments": [
          {
            "description": "Directory argument",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/mcp-server-milvus/src/mcp_server_milvus",
            "default": "/path/to/mcp-server-milvus/src/mcp_server_milvus",
            "type": "named",
            "name": "--directory",
            "valueHint": "/path/to/mcp-server-milvus/src/mcp_server_milvus"
          },
          {
            "description": "Python server entry file",
            "isRequired": true,
            "format": "string",
            "value": "server.py",
            "default": "server.py",
            "type": "positional",
            "valueHint": "server.py"
          },
          {
            "description": "Milvus URI",
            "isRequired": true,
            "format": "string",
            "value": "http://127.0.0.1:19530",
            "default": "http://127.0.0.1:19530",
            "type": "named",
            "name": "--milvus-uri",
            "valueHint": "http://127.0.0.1:19530"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server-milvus",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e458676a-2727-4daf-84c5-d607932fa000",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e458676a-2727-4daf-84c5-d607932fa000"
      }
    }
  },
  {
    "name": "io.github.momentohq/mcp-momento",
    "description": "A model context protocol server for Momento",
    "status": "active",
    "repository": {
      "url": "https://github.com/momentohq/mcp-momento",
      "source": "github",
      "id": "960008375"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "MOMENTO_API_KEY"
          },
          {
            "description": "your-cache-name",
            "name": "MOMENTO_CACHE_NAME"
          },
          {
            "description": "60",
            "name": "DEFAULT_TTL_SECONDS"
          }
        ],
        "registryType": "npm",
        "identifier": "@gomomento/mcp-momento",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b99e5603-6346-4b2c-bae8-876c9b71e18b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b99e5603-6346-4b2c-bae8-876c9b71e18b"
      }
    }
  },
  {
    "name": "io.github.mongodb-js/mongodb-mcp-server",
    "description": "A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.",
    "status": "active",
    "repository": {
      "url": "https://github.com/mongodb-js/mongodb-mcp-server",
      "source": "github",
      "id": "960484071"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "packageArguments": [
          {
            "description": "your-atlas-service-accounts-client-id",
            "isRequired": true,
            "format": "string",
            "value": "your-atlas-service-accounts-client-id",
            "default": "your-atlas-service-accounts-client-id",
            "type": "named",
            "name": "--apiClientId",
            "valueHint": "your-atlas-service-accounts-client-id"
          },
          {
            "description": "your-atlas-service-accounts-client-secret",
            "isRequired": true,
            "format": "string",
            "value": "your-atlas-service-accounts-client-secret",
            "default": "your-atlas-service-accounts-client-secret",
            "type": "named",
            "name": "--apiClientSecret",
            "valueHint": "your-atlas-service-accounts-client-secret"
          }
        ],
        "registryType": "npm",
        "identifier": "mongodb-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9fd2c1fb-b8a6-4411-89cf-d4612cc3a539",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9fd2c1fb-b8a6-4411-89cf-d4612cc3a539"
      }
    }
  },
  {
    "name": "io.github.motherduckdb/mcp-server-motherduck",
    "description": "MCP server for DuckDB and MotherDuck",
    "status": "active",
    "repository": {
      "url": "https://github.com/motherduckdb/mcp-server-motherduck",
      "source": "github",
      "id": "902619224"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.2",
        "packageArguments": [
          {
            "description": "--directory /path/to/your/local/mcp-server-motherduck",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/your/local/mcp-server-motherduck",
            "default": "/path/to/your/local/mcp-server-motherduck",
            "type": "named",
            "name": "--directory",
            "valueHint": "/path/to/your/local/mcp-server-motherduck"
          },
          {
            "description": "mcp-server-motherduck",
            "isRequired": true,
            "format": "string",
            "value": "mcp-server-motherduck",
            "default": "mcp-server-motherduck",
            "type": "positional",
            "valueHint": "mcp-server-motherduck"
          },
          {
            "description": "--db-path md:",
            "isRequired": true,
            "format": "string",
            "value": "md:",
            "default": "md:",
            "type": "named",
            "name": "--db-path",
            "valueHint": "md:"
          },
          {
            "description": "--motherduck-token <YOUR_MOTHERDUCK_TOKEN_HERE>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_MOTHERDUCK_TOKEN_HERE>",
            "default": "<YOUR_MOTHERDUCK_TOKEN_HERE>",
            "type": "named",
            "name": "--motherduck-token",
            "valueHint": "<YOUR_MOTHERDUCK_TOKEN_HERE>"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server-motherduck",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b3fa3fa4-901d-4584-82cf-d027dbdf290b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b3fa3fa4-901d-4584-82cf-d027dbdf290b"
      }
    }
  },
  {
    "name": "io.github.neondatabase/mcp-server-neon",
    "description": "MCP server for interacting with Neon Management API and databases",
    "status": "active",
    "repository": {
      "url": "https://github.com/neondatabase-labs/mcp-server-neon",
      "source": "github",
      "id": "896203400"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.0",
        "packageArguments": [
          {
            "description": "Start the Neon MCP server",
            "isRequired": true,
            "format": "string",
            "value": "start",
            "default": "start",
            "type": "positional",
            "valueHint": "start"
          },
          {
            "description": "Your Neon API key",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_NEON_API_KEY>",
            "default": "<YOUR_NEON_API_KEY>",
            "type": "positional",
            "valueHint": "<YOUR_NEON_API_KEY>"
          }
        ],
        "registryType": "npm",
        "identifier": "@neondatabase/mcp-server-neon",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9a6bd437-fe20-4f40-b776-5507f2871441",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9a6bd437-fe20-4f40-b776-5507f2871441"
      }
    }
  },
  {
    "name": "io.github.oceanbase/mcp-oceanbase",
    "description": "MCP Server for OceanBase database and its tools",
    "status": "active",
    "repository": {
      "url": "https://github.com/oceanbase/mcp-oceanbase",
      "source": "github",
      "id": "951176417"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "mcp-oceanbase",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "afe07206-691c-4bfb-bf17-8a39014cf4a7",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "afe07206-691c-4bfb-bf17-8a39014cf4a7"
      }
    }
  },
  {
    "name": "io.github.octagonai/octagon-mcp-server",
    "description": "A free MCP server to analyze and extract insights from public filings, earnings transcripts, financial metrics, stock market data, private market transactions, and deep web-based research within Claude Desktop and other popular MCP clients.",
    "status": "active",
    "repository": {
      "url": "https://github.com/OctagonAI/octagon-mcp-server",
      "source": "github",
      "id": "947569884"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.18",
        "environmentVariables": [
          {
            "description": "YOUR_API_KEY_HERE",
            "name": "OCTAGON_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "octagon-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2d53cc39-27e0-446f-96b5-1324bab9eb21",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2d53cc39-27e0-446f-96b5-1324bab9eb21"
      }
    }
  },
  {
    "name": "io.github.oxylabs/oxylabs-mcp",
    "description": "Official Oxylabs MCP integration",
    "status": "active",
    "repository": {
      "url": "https://github.com/oxylabs/oxylabs-mcp",
      "source": "github",
      "id": "918221533"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "packageArguments": [
          {
            "description": "Set the working directory",
            "isRequired": true,
            "format": "string",
            "value": "/<Absolute-path-to-folder>/oxylabs-mcp",
            "default": "/<Absolute-path-to-folder>/oxylabs-mcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "/<Absolute-path-to-folder>/oxylabs-mcp"
          },
          {
            "description": "Python application/module to run",
            "isRequired": true,
            "format": "string",
            "value": "oxylabs-mcp",
            "default": "oxylabs-mcp",
            "type": "positional",
            "valueHint": "oxylabs-mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "OXYLABS_USERNAME",
            "name": "OXYLABS_USERNAME"
          },
          {
            "description": "OXYLABS_PASSWORD",
            "name": "OXYLABS_PASSWORD"
          }
        ],
        "registryType": "pypi",
        "identifier": "oxylabs-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4632fbcb-d313-4e26-ad1d-aea8f57524f7",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4632fbcb-d313-4e26-ad1d-aea8f57524f7"
      }
    }
  },
  {
    "name": "io.github.paddlehq/paddle-mcp-server",
    "description": "Interact with the Paddle API using AI assistants like Claude, or in AI-powered IDEs like Cursor. Manage product catalog, billing and subscriptions, and reports.",
    "status": "active",
    "repository": {
      "url": "https://github.com/PaddleHQ/paddle-mcp-server",
      "source": "github",
      "id": "955461567"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "packageArguments": [
          {
            "description": "Path to the mcp server entry point",
            "isRequired": true,
            "format": "string",
            "value": "path/to/paddle-mcp-server/build/index.js",
            "default": "path/to/paddle-mcp-server/build/index.js",
            "type": "positional",
            "valueHint": "path/to/paddle-mcp-server/build/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_api_key",
            "name": "PADDLE_API_KEY"
          },
          {
            "description": "sandbox",
            "name": "PADDLE_ENVIRONMENT"
          }
        ],
        "registryType": "npm",
        "identifier": "@paddle/paddle-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "be79836b-8a99-4e4e-9487-c81c02833f4a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "be79836b-8a99-4e4e-9487-c81c02833f4a"
      }
    }
  },
  {
    "name": "io.github.pinecone-io/pinecone-mcp",
    "description": "Connect your Pinecone projects to Cursor, Claude, and other AI assistants",
    "status": "active",
    "repository": {
      "url": "https://github.com/pinecone-io/pinecone-mcp",
      "source": "github",
      "id": "963450460"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.14",
        "registryType": "npm",
        "identifier": "@pinecone-database/mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ed4c9613-5046-4570-8d15-209f7294ba75",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ed4c9613-5046-4570-8d15-209f7294ba75"
      }
    }
  },
  {
    "name": "io.github.pinecone-io/assistant-mcp",
    "description": "Pinecone Assistant MCP server",
    "status": "active",
    "repository": {
      "url": "https://github.com/pinecone-io/assistant-mcp",
      "source": "github",
      "id": "940446625"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "--rm",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "-e PINECONE_API_KEY",
            "isRequired": true,
            "format": "string",
            "value": "PINECONE_API_KEY",
            "default": "PINECONE_API_KEY",
            "type": "named",
            "name": "-e",
            "valueHint": "PINECONE_API_KEY"
          },
          {
            "description": "-e PINECONE_ASSISTANT_HOST",
            "isRequired": true,
            "format": "string",
            "value": "PINECONE_ASSISTANT_HOST",
            "default": "PINECONE_ASSISTANT_HOST",
            "type": "named",
            "name": "-e",
            "valueHint": "PINECONE_ASSISTANT_HOST"
          },
          {
            "description": "pinecone/assistant-mcp",
            "isRequired": true,
            "format": "string",
            "value": "pinecone/assistant-mcp",
            "default": "pinecone/assistant-mcp",
            "type": "positional",
            "valueHint": "pinecone/assistant-mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "<YOUR_PINECONE_API_KEY_HERE>",
            "name": "PINECONE_API_KEY"
          },
          {
            "description": "<YOUR_PINECONE_ASSISTANT_HOST_HERE>",
            "name": "PINECONE_ASSISTANT_HOST"
          }
        ],
        "registryType": "oci",
        "identifier": "pinecone-io/assistant-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "08668c6a-c2f6-47b0-a4e0-75a8ee9bcf10",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "08668c6a-c2f6-47b0-a4e0-75a8ee9bcf10"
      }
    }
  },
  {
    "name": "io.github.ragieai/ragie-mcp-server",
    "description": "Ragie Model Context Protocol Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/ragieai/ragie-mcp-server",
      "source": "github",
      "id": "940305209"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.7",
        "packageArguments": [
          {
            "description": "Partition identifier (optional)",
            "isRequired": true,
            "format": "string",
            "value": "optional_partition_id",
            "default": "optional_partition_id",
            "type": "named",
            "name": "--partition",
            "valueHint": "optional_partition_id"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_api_key",
            "name": "RAGIE_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@ragieai/mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "324d6879-eb6f-4565-bdeb-6c4b00d91384",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "324d6879-eb6f-4565-bdeb-6c4b00d91384"
      }
    }
  },
  {
    "name": "io.github.redis/mcp-redis-cloud",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/redis/mcp-redis-cloud",
      "source": "github",
      "id": "956477944"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i",
            "valueHint": "-i"
          },
          {
            "description": "--rm",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "-e API_KEY=<your_redis_cloud_api_key>",
            "isRequired": true,
            "format": "string",
            "value": "API_KEY=<your_redis_cloud_api_key>",
            "default": "API_KEY=<your_redis_cloud_api_key>",
            "type": "named",
            "name": "-e",
            "valueHint": "API_KEY=<your_redis_cloud_api_key>"
          },
          {
            "description": "-e SECRET_KEY=<your_redis_cloud_api_secret_key>",
            "isRequired": true,
            "format": "string",
            "value": "SECRET_KEY=<your_redis_cloud_api_secret_key>",
            "default": "SECRET_KEY=<your_redis_cloud_api_secret_key>",
            "type": "named",
            "name": "-e",
            "valueHint": "SECRET_KEY=<your_redis_cloud_api_secret_key>"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-redis-cloud",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b8c0e12b-0c04-486d-95a7-caa33b9eefeb",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b8c0e12b-0c04-486d-95a7-caa33b9eefeb"
      }
    }
  },
  {
    "name": "io.github.qdrant/mcp-server-qdrant",
    "description": "An official Qdrant Model Context Protocol (MCP) server implementation",
    "status": "active",
    "repository": {
      "url": "https://github.com/qdrant/mcp-server-qdrant",
      "source": "github",
      "id": "897308110"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.7.1",
        "packageArguments": [
          {
            "description": "Publish port 8000:8000",
            "isRequired": true,
            "format": "string",
            "value": "8000:8000",
            "default": "8000:8000",
            "type": "named",
            "name": "-p",
            "valueHint": "8000:8000"
          },
          {
            "description": "Run in interactive mode",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "Remove container after exit",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "Set environment variable QDRANT_URL",
            "isRequired": true,
            "format": "string",
            "value": "QDRANT_URL",
            "default": "QDRANT_URL",
            "type": "named",
            "name": "-e",
            "valueHint": "QDRANT_URL"
          },
          {
            "description": "Set environment variable QDRANT_API_KEY",
            "isRequired": true,
            "format": "string",
            "value": "QDRANT_API_KEY",
            "default": "QDRANT_API_KEY",
            "type": "named",
            "name": "-e",
            "valueHint": "QDRANT_API_KEY"
          },
          {
            "description": "Set environment variable COLLECTION_NAME",
            "isRequired": true,
            "format": "string",
            "value": "COLLECTION_NAME",
            "default": "COLLECTION_NAME",
            "type": "named",
            "name": "-e",
            "valueHint": "COLLECTION_NAME"
          },
          {
            "description": "Docker image to run",
            "isRequired": true,
            "format": "string",
            "value": "mcp-server-qdrant",
            "default": "mcp-server-qdrant",
            "type": "positional",
            "valueHint": "mcp-server-qdrant"
          }
        ],
        "environmentVariables": [
          {
            "description": "${input:qdrantUrl}",
            "name": "QDRANT_URL"
          },
          {
            "description": "${input:qdrantApiKey}",
            "name": "QDRANT_API_KEY"
          },
          {
            "description": "${input:collectionName}",
            "name": "COLLECTION_NAME"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-qdrant",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "823afe6f-4494-4fc1-a2ab-2ca989e59d21",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "823afe6f-4494-4fc1-a2ab-2ca989e59d21"
      }
    }
  },
  {
    "name": "io.github.ramp-public/ramp-mcp",
    "description": "ramp_mcp",
    "status": "active",
    "repository": {
      "url": "https://github.com/ramp-public/ramp_mcp",
      "source": "github",
      "id": "951969645"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "packageArguments": [
          {
            "description": "Specify the directory to use",
            "isRequired": true,
            "format": "string",
            "value": "/<ABSOLUTE-PATH-TO>/ramp-mcp",
            "default": "/<ABSOLUTE-PATH-TO>/ramp-mcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "/<ABSOLUTE-PATH-TO>/ramp-mcp"
          },
          {
            "description": "Application name",
            "isRequired": true,
            "format": "string",
            "value": "ramp-mcp",
            "default": "ramp-mcp",
            "type": "positional",
            "valueHint": "ramp-mcp"
          },
          {
            "description": "Run in silent mode",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-s"
          },
          {
            "description": "Specify resource permissions",
            "isRequired": true,
            "format": "string",
            "value": "transactions:read,reimbursements:read",
            "default": "transactions:read,reimbursements:read",
            "type": "positional",
            "valueHint": "transactions:read,reimbursements:read"
          }
        ],
        "environmentVariables": [
          {
            "description": "<CLIENT_ID>",
            "name": "RAMP_CLIENT_ID"
          },
          {
            "description": "<CLIENT_SECRET>",
            "name": "RAMP_CLIENT_SECRET"
          },
          {
            "description": "<demo|qa|prd>",
            "name": "RAMP_ENV"
          }
        ],
        "registryType": "pypi",
        "identifier": "ramp-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "687591a4-a5da-44df-8d55-f32e19d5658a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "687591a4-a5da-44df-8d55-f32e19d5658a"
      }
    }
  },
  {
    "name": "io.github.mindscapehq/mcp-server-raygun",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/MindscapeHQ/mcp-server-raygun",
      "source": "github",
      "id": "895741231"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "your-pat-token-ken",
            "name": "RAYGUN_PAT_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "@raygun.io/mcp-server-raygun",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f6ee7600-c27a-4210-9a94-29a35c41c274",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f6ee7600-c27a-4210-9a94-29a35c41c274"
      }
    }
  },
  {
    "name": "io.github.rember/rember-mcp",
    "description": "A Model Context Protocol (MCP) server for Rember.",
    "status": "active",
    "repository": {
      "url": "https://github.com/rember/rember-mcp",
      "source": "github",
      "id": "940533374"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.3",
        "packageArguments": [
          {
            "description": "Rember API Key",
            "isRequired": true,
            "format": "string",
            "value": "YOUR_REMBER_API_KEY",
            "default": "YOUR_REMBER_API_KEY",
            "type": "named",
            "name": "--api-key",
            "valueHint": "YOUR_REMBER_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@getrember/mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5e354d7f-e19e-40ba-a760-342d5c93e9aa",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5e354d7f-e19e-40ba-a760-342d5c93e9aa"
      }
    }
  },
  {
    "name": "io.github.fatwang2/search1api-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/fatwang2/search1api-mcp",
      "source": "github",
      "id": "894382523"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "environmentVariables": [
          {
            "description": "YOUR_SEARCH1API_KEY",
            "name": "SEARCH1API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "search1api-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "cb1647e0-2df7-4f2a-b63b-cfaea1e5e98a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "cb1647e0-2df7-4f2a-b63b-cfaea1e5e98a"
      }
    }
  },
  {
    "name": "io.github.screenshotone/mcp",
    "description": "A simple implementation of an MCP server for the ScreenshotOne API",
    "status": "active",
    "repository": {
      "url": "https://github.com/screenshotone/mcp",
      "source": "github",
      "id": "934098377"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Positional argument for 'path/to/screenshotone/mcp/build/index.js'",
            "isRequired": true,
            "format": "string",
            "value": "path/to/screenshotone/mcp/build/index.js",
            "default": "path/to/screenshotone/mcp/build/index.js",
            "type": "positional",
            "valueHint": "path/to/screenshotone/mcp/build/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "<your api key>",
            "name": "SCREENSHOTONE_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "screenshotone-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "87c7dec1-1b0c-414b-9f7b-7a113e67989d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "87c7dec1-1b0c-414b-9f7b-7a113e67989d"
      }
    }
  },
  {
    "name": "io.github.semgrep/mcp",
    "description": "A MCP server for using Semgrep to scan code for security vulnerabilities.",
    "status": "active",
    "repository": {
      "url": "https://github.com/semgrep/mcp",
      "source": "github",
      "id": "950213855"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "registryType": "pypi",
        "identifier": "semgrep-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d012ea8c-2f32-43e4-9583-7418d750193e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d012ea8c-2f32-43e4-9583-7418d750193e"
      }
    }
  },
  {
    "name": "io.github.singlestore-labs/mcp-server-singlestore",
    "description": "MCP server for interacting with SingleStore Management API and services",
    "status": "active",
    "repository": {
      "url": "https://github.com/singlestore-labs/mcp-server-singlestore",
      "source": "github",
      "id": "941979361"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.12",
        "packageArguments": [
          {
            "description": "Start the single store MCP server",
            "isRequired": true,
            "format": "string",
            "value": "start",
            "default": "start",
            "type": "positional",
            "valueHint": "start"
          },
          {
            "description": "SingleStore API Key",
            "isRequired": true,
            "format": "string",
            "value": "<SINGLESTORE_API_KEY>",
            "default": "<SINGLESTORE_API_KEY>",
            "type": "positional",
            "valueHint": "<SINGLESTORE_API_KEY>"
          }
        ],
        "registryType": "pypi",
        "identifier": "singlestore_mcp_server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "901e1b1c-7414-4240-89b8-1def9aca4708",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "901e1b1c-7414-4240-89b8-1def9aca4708"
      }
    }
  },
  {
    "name": "io.github.tavily-ai/tavily-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/tavily-ai/tavily-mcp",
      "source": "github",
      "id": "923109265"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "environmentVariables": [
          {
            "description": "your-api-key-here",
            "name": "TAVILY_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "tavily-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ba8028f7-73e6-4d3d-9974-790d438a1446",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ba8028f7-73e6-4d3d-9974-790d438a1446"
      }
    }
  },
  {
    "name": "io.github.msgbyte/tianji",
    "description": "Tianji: Insight into everything, Website Analytics + Uptime Monitor + Server Status. not only another GA alternatives",
    "status": "active",
    "repository": {
      "url": "https://github.com/msgbyte/tianji",
      "source": "github",
      "id": "685392779"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.20.9",
        "registryType": "npm",
        "identifier": "tianji",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9dd7f908-4c1b-4ba3-a33f-86be881cc8b6",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9dd7f908-4c1b-4ba3-a33f-86be881cc8b6"
      }
    }
  },
  {
    "name": "io.github.tinybirdco/mcp-tinybird",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/tinybirdco/mcp-tinybird",
      "source": "github",
      "id": "894960290"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.2",
        "registryType": "pypi",
        "identifier": "mcp-tinybird",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "adb9a058-774f-4505-aa80-1afa9bab8cb9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "adb9a058-774f-4505-aa80-1afa9bab8cb9"
      }
    }
  },
  {
    "name": "io.github.unstructured-io/uns-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/Unstructured-IO/UNS-MCP",
      "source": "github",
      "id": "947454003"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.6",
        "packageArguments": [
          {
            "description": "Directory to use",
            "isRequired": true,
            "format": "string",
            "value": "ABSOLUTE/PATH/TO/YOUR-UNS-MCP-REPO/uns_mcp",
            "default": "ABSOLUTE/PATH/TO/YOUR-UNS-MCP-REPO/uns_mcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "ABSOLUTE/PATH/TO/YOUR-UNS-MCP-REPO/uns_mcp"
          },
          {
            "description": "Python script file",
            "isRequired": true,
            "format": "string",
            "value": "server.py",
            "default": "server.py",
            "type": "positional",
            "valueHint": "server.py"
          }
        ],
        "registryType": "pypi",
        "identifier": "uns_mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "8b01f838-0cb6-4c17-b381-108713321d6d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "8b01f838-0cb6-4c17-b381-108713321d6d"
      }
    }
  },
  {
    "name": "io.github.vectorize-io/vectorize-mcp-server",
    "description": "Official Vectorize MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/vectorize-io/vectorize-mcp-server",
      "source": "github",
      "id": "946057362"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.3",
        "packageArguments": [
          {
            "description": "Generate a financial status report about the company",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "Generate",
            "valueHint": "Generate a financial status report about the company"
          },
          {
            "description": "true",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "true",
            "valueHint": "true"
          }
        ],
        "registryType": "npm",
        "identifier": "@vectorize-io/vectorize-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c1b727f7-1570-465f-8153-585840de260a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c1b727f7-1570-465f-8153-585840de260a"
      }
    }
  },
  {
    "name": "io.github.verodat/verodat-mcp-server",
    "description": "Verodat MCP Server Implementation",
    "status": "active",
    "repository": {
      "url": "https://github.com/Verodat/verodat-mcp-server",
      "source": "github",
      "id": "924683561"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Path to script file to run",
            "isRequired": true,
            "format": "string",
            "value": "path/to/verodat-mcp-server/build/src/consume.js",
            "default": "path/to/verodat-mcp-server/build/src/consume.js",
            "type": "positional",
            "valueHint": "path/to/verodat-mcp-server/build/src/consume.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "VERODAT_AI_API_KEY"
          },
          {
            "description": "https://verodat.io/api/v3",
            "name": "VERODAT_API_BASE_URL"
          }
        ],
        "registryType": "npm",
        "identifier": "verodat-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c0c30db1-cc08-426e-886f-0bdbcd31d101",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c0c30db1-cc08-426e-886f-0bdbcd31d101"
      }
    }
  },
  {
    "name": "io.github.veyrax/veyrax-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/VeyraX/veyrax-mcp",
      "source": "github",
      "id": "942928935"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "oci",
        "identifier": "veyrax-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2cc83e0a-3ca5-4e21-b346-83254cc72e1f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2cc83e0a-3ca5-4e21-b346-83254cc72e1f"
      }
    }
  },
  {
    "name": "io.github.xeroapi/xero-mcp-server",
    "description": "An MCP server that integrates with the MCP protocol. https://modelcontextprotocol.io/introduction",
    "status": "active",
    "repository": {
      "url": "https://github.com/XeroAPI/xero-mcp-server",
      "source": "github",
      "id": "949710667"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.12",
        "packageArguments": [
          {
            "description": "Path to MCP server entry file",
            "isRequired": true,
            "format": "string",
            "value": "insert-your-file-path-here/xero-mcp-server/dist/index.js",
            "default": "insert-your-file-path-here/xero-mcp-server/dist/index.js",
            "type": "positional",
            "valueHint": "insert-your-file-path-here/xero-mcp-server/dist/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_client_id_here",
            "name": "XERO_CLIENT_ID"
          },
          {
            "description": "your_client_secret_here",
            "name": "XERO_CLIENT_SECRET"
          }
        ],
        "registryType": "npm",
        "identifier": "@xeroapi/xero-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4bc3b6d3-666e-4bb7-8ad7-6b38bc9c5ab8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4bc3b6d3-666e-4bb7-8ad7-6b38bc9c5ab8"
      }
    }
  },
  {
    "name": "io.github.simon-kansara/ableton-live-mcp-server",
    "description": "MCP Server implementation for Ableton Live OSC control",
    "status": "active",
    "repository": {
      "url": "https://github.com/Simon-Kansara/ableton-live-mcp-server",
      "source": "github",
      "id": "938133354"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "ableton-live-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "60b95692-579f-4de4-8095-1efdca5d8591",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "60b95692-579f-4de4-8095-1efdca5d8591"
      }
    }
  },
  {
    "name": "io.github.ahujasid/ableton-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/ahujasid/ableton-mcp",
      "source": "github",
      "id": "951429064"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "pypi",
        "identifier": "ableton-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "98b8992b-77cc-43a5-825e-d14270fd9ca5",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "98b8992b-77cc-43a5-825e-d14270fd9ca5"
      }
    }
  },
  {
    "name": "io.github.openbnb-org/mcp-server-airbnb",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/openbnb-org/mcp-server-airbnb",
      "source": "github",
      "id": "945678498"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "packageArguments": [
          {
            "description": "Ignore robots.txt directives",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--ignore-robots-txt"
          }
        ],
        "registryType": "npm",
        "identifier": "@openbnb/mcp-server-airbnb",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1101c394-e912-42b6-85be-d2479b72d27f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1101c394-e912-42b6-85be-d2479b72d27f"
      }
    }
  },
  {
    "name": "io.github.goplausible/algorand-mcp",
    "description": "Algorand Model Context Protocol (Server & Client)",
    "status": "active",
    "repository": {
      "url": "https://github.com/GoPlausible/algorand-mcp",
      "source": "github",
      "id": "946072706"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "2.7.7",
        "registryType": "npm",
        "identifier": "algorand-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4813a35a-7d43-42fa-999d-86e68b2aca1a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4813a35a-7d43-42fa-999d-86e68b2aca1a"
      }
    }
  },
  {
    "name": "io.github.yangkyeongmo/mcp-server-apache-airflow",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/yangkyeongmo/mcp-server-apache-airflow",
      "source": "github",
      "id": "931916510"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.2",
        "packageArguments": [
          {
            "description": "Directory to run the server from",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/mcp-server-apache-airflow",
            "default": "/path/to/mcp-server-apache-airflow",
            "type": "named",
            "name": "--directory",
            "valueHint": "/path/to/mcp-server-apache-airflow"
          },
          {
            "description": "Name of the Airflow MCP server",
            "isRequired": true,
            "format": "string",
            "value": "mcp-server-apache-airflow",
            "default": "mcp-server-apache-airflow",
            "type": "positional",
            "valueHint": "mcp-server-apache-airflow"
          }
        ],
        "environmentVariables": [
          {
            "description": "https://your-airflow-host",
            "name": "AIRFLOW_HOST"
          },
          {
            "description": "your-username",
            "name": "AIRFLOW_USERNAME"
          },
          {
            "description": "your-password",
            "name": "AIRFLOW_PASSWORD"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server-apache-airflow",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ae6d4cd8-c930-4737-9aba-93609f53cde1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ae6d4cd8-c930-4737-9aba-93609f53cde1"
      }
    }
  },
  {
    "name": "io.github.domdomegg/airtable-mcp-server",
    "description": "\ud83d\uddc2\ufe0f\ud83e\udd16 Airtable Model Context Protocol Server, for allowing AI systems to interact with your Airtable bases",
    "status": "active",
    "repository": {
      "url": "https://github.com/domdomegg/airtable-mcp-server",
      "source": "github",
      "id": "902495626"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.4.1",
        "environmentVariables": [
          {
            "description": "pat123.abc123",
            "name": "AIRTABLE_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "airtable-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a4902ee8-060c-47d1-9dfc-ec6af1a9c398",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a4902ee8-060c-47d1-9dfc-ec6af1a9c398"
      }
    }
  },
  {
    "name": "io.github.felores/airtable-mcp",
    "description": "Search, create and update Airtable bases, tables, fields, and records using Claude Desktop and MCP (Model Context Protocol) clients",
    "status": "active",
    "repository": {
      "url": "https://github.com/felores/airtable-mcp",
      "source": "github",
      "id": "904238387"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.3.0",
        "packageArguments": [
          {
            "description": "Positional argument for the package entry point",
            "isRequired": true,
            "format": "string",
            "value": "path/to/airtable-mcp/build/index.js",
            "default": "path/to/airtable-mcp/build/index.js",
            "type": "positional",
            "valueHint": "path/to/airtable-mcp/build/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "AIRTABLE_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@felores/airtable-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "04216a87-0760-4f25-b809-42ffbfbb8962",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "04216a87-0760-4f25-b809-42ffbfbb8962"
      }
    }
  },
  {
    "name": "io.github.calvernaz/alphavantage",
    "description": "A MCP server for the stock market data API, Alphavantage API.",
    "status": "active",
    "repository": {
      "url": "https://github.com/calvernaz/alphavantage",
      "source": "github",
      "id": "899668514"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.3.10",
        "registryType": "pypi",
        "identifier": "alphavantage",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "cac9fd2a-2c08-441f-a94d-16c67821221f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "cac9fd2a-2c08-441f-a94d-16c67821221f"
      }
    }
  },
  {
    "name": "io.github.donghyun-chae/mcp-amadeus",
    "description": "Amadeus MCP(Model Context Protocol) Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/donghyun-chae/mcp-amadeus",
      "source": "github",
      "id": "963136865"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "mcp-amadeus",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ad6e04de-5f80-4274-9464-c6bbff533ad3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ad6e04de-5f80-4274-9464-c6bbff533ad3"
      }
    }
  },
  {
    "name": "io.github.diegobit/aranet4-mcp-server",
    "description": "SImple MCP server to manage your aranet4 device and local db.",
    "status": "active",
    "repository": {
      "url": "https://github.com/diegobit/aranet4-mcp-server",
      "source": "github",
      "id": "965063885"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Directory flag and its value",
            "isRequired": true,
            "format": "string",
            "value": "{{PATH_TO_SRC}}/aranet4-mcp-server/",
            "default": "{{PATH_TO_SRC}}/aranet4-mcp-server/",
            "type": "named",
            "name": "--directory",
            "valueHint": "{{PATH_TO_SRC}}/aranet4-mcp-server/"
          },
          {
            "description": "Python server file",
            "isRequired": true,
            "format": "string",
            "value": "src/server.py",
            "default": "src/server.py",
            "type": "positional",
            "valueHint": "src/server.py"
          }
        ],
        "registryType": "oci",
        "identifier": "aranet4-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "775bd83c-b33a-471c-9deb-8a444fb4ac79",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "775bd83c-b33a-471c-9deb-8a444fb4ac79"
      }
    }
  },
  {
    "name": "io.github.ravenwits/mcp-server-arangodb",
    "description": "This is a TypeScript-based MCP server that provides database interaction capabilities through ArangoDB. It implements core database operations and allows seamless integration with ArangoDB through MCP tools. You can use it wih Claude app and also extension for VSCode that works with mcp like Cline!",
    "status": "active",
    "repository": {
      "url": "https://github.com/ravenwits/mcp-server-arangodb",
      "source": "github",
      "id": "909459279"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.4",
        "environmentVariables": [
          {
            "description": "your_database_url",
            "name": "ARANGO_URL"
          },
          {
            "description": "your_database_name",
            "name": "ARANGO_DB"
          },
          {
            "description": "your_username",
            "name": "ARANGO_USERNAME"
          },
          {
            "description": "your_password",
            "name": "ARANGO_PASSWORD"
          }
        ],
        "registryType": "npm",
        "identifier": "arango-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1e97b930-031a-47b6-afb1-8af61dd81ec0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1e97b930-031a-47b6-afb1-8af61dd81ec0"
      }
    }
  },
  {
    "name": "io.github.vishalmysore/choturobo",
    "description": "Integrate Arduino-based robotics (using the NodeMCU ESP32 or Arduino Nano 368 board) with AI using the MCP (Model Context Protocol) framework from Claude Anthropic",
    "status": "active",
    "repository": {
      "url": "https://github.com/vishalmysore/choturobo",
      "source": "github",
      "id": "947567270"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "choturoboserver",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "466926d1-72a6-42be-b2c1-ef94d44e5a67",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "466926d1-72a6-42be-b2c1-ef94d44e5a67"
      }
    }
  },
  {
    "name": "io.github.sooperset/mcp-atlassian",
    "description": "MCP server for Atlassian tools (Confluence, Jira)",
    "status": "active",
    "repository": {
      "url": "https://github.com/sooperset/mcp-atlassian",
      "source": "github",
      "id": "897809208"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.10.6",
        "registryType": "pypi",
        "identifier": "mcp-atlassian",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4df1406c-1bb1-4495-96e8-8c25de454b5d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4df1406c-1bb1-4495-96e8-8c25de454b5d"
      }
    }
  },
  {
    "name": "io.github.co-browser/attestable-mcp-server",
    "description": "Verify that any MCP server is running the intended and untampered code via hardware attestation.",
    "status": "active",
    "repository": {
      "url": "https://github.com/co-browser/attestable-mcp-server",
      "source": "github",
      "id": "955641588"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "attestable-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "05ca6ccc-d6e1-47ab-ab8d-25949db9ada7",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "05ca6ccc-d6e1-47ab-ab8d-25949db9ada7"
      }
    }
  },
  {
    "name": "io.github.rishikavikondala/mcp-server-aws",
    "description": "A Model Context Protocol server implementation for operations on AWS resources",
    "status": "active",
    "repository": {
      "url": "https://github.com/rishikavikondala/mcp-server-aws",
      "source": "github",
      "id": "898207013"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "mcp-server-aws",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e9799403-3917-4c38-9638-c69aebf1ac08",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e9799403-3917-4c38-9638-c69aebf1ac08"
      }
    }
  },
  {
    "name": "io.github.lishenxydlgzs/aws-athena-mcp",
    "description": "MCP server to run AWS Athena queries",
    "status": "active",
    "repository": {
      "url": "https://github.com/lishenxydlgzs/aws-athena-mcp",
      "source": "github",
      "id": "938923691"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Named argument for query identifier",
            "isRequired": true,
            "format": "string",
            "value": "abcd-1234-efgh-5678",
            "default": "abcd-1234-efgh-5678",
            "type": "named",
            "name": "--namedQueryId",
            "valueHint": "abcd-1234-efgh-5678"
          },
          {
            "description": "Named argument for maximum rows",
            "isRequired": true,
            "format": "string",
            "value": "100",
            "default": "100",
            "type": "named",
            "name": "--maxRows",
            "valueHint": "100"
          }
        ],
        "registryType": "npm",
        "identifier": "@lishenxydlgzs/aws-athena-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d3139564-f4c3-44f9-902a-8d172038af01",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d3139564-f4c3-44f9-902a-8d172038af01"
      }
    }
  },
  {
    "name": "io.github.baryhuang/mcp-server-aws-resources-python",
    "description": "A Python-based MCP server that lets Claude run boto3 code to query and manage AWS resources. Execute powerful AWS operations directly through Claude with proper sandboxing and containerization. No need for complex setups - just pass your AWS credentials and start interacting with all AWS services.",
    "status": "active",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-server-aws-resources-python",
      "source": "github",
      "id": "916512524"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Keep STDIN open even if not attached",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "Automatically remove the container when it exits",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "Set environment variables in the container",
            "isRequired": true,
            "format": "string",
            "value": "AWS_PROFILE=default",
            "default": "AWS_PROFILE=default",
            "type": "named",
            "name": "-e",
            "valueHint": "AWS_PROFILE=default"
          },
          {
            "description": "Bind mount a volume",
            "isRequired": true,
            "format": "string",
            "value": "~/.aws:/root/.aws",
            "default": "~/.aws:/root/.aws",
            "type": "named",
            "name": "-v",
            "valueHint": "~/.aws:/root/.aws"
          },
          {
            "description": "Docker image name with tag",
            "isRequired": true,
            "format": "string",
            "value": "buryhuang/mcp-server-aws-resources:latest",
            "default": "buryhuang/mcp-server-aws-resources:latest",
            "type": "positional",
            "valueHint": "buryhuang/mcp-server-aws-resources:latest"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-aws-resources",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6dd26dd7-d5c3-4aa8-bb9a-3aba328790ad",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6dd26dd7-d5c3-4aa8-bb9a-3aba328790ad"
      }
    }
  },
  {
    "name": "io.github.aws-samples/sample-mcp-server-s3",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/aws-samples/sample-mcp-server-s3",
      "source": "github",
      "id": "907453245"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "npm",
        "identifier": "s3-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f7f8acea-8725-48ec-a2f8-08ee16c738db",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f7f8acea-8725-48ec-a2f8-08ee16c738db"
      }
    }
  },
  {
    "name": "io.github.pab1it0/adx-mcp-server",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Azure Data Explorer databases through standardized interfaces.",
    "status": "active",
    "repository": {
      "url": "https://github.com/pab1it0/adx-mcp-server",
      "source": "github",
      "id": "945904536"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.9",
        "packageArguments": [
          {
            "description": "Remove container after exit",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "Keep STDIN open even if not attached",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i",
            "valueHint": "-i"
          },
          {
            "description": "Set environment variable in container: ADX_CLUSTER_URL",
            "isRequired": true,
            "format": "string",
            "value": "ADX_CLUSTER_URL",
            "default": "ADX_CLUSTER_URL",
            "type": "named",
            "name": "-e",
            "valueHint": "ADX_CLUSTER_URL"
          },
          {
            "description": "Set environment variable in container: ADX_DATABASE",
            "isRequired": true,
            "format": "string",
            "value": "ADX_DATABASE",
            "default": "ADX_DATABASE",
            "type": "named",
            "name": "-e",
            "valueHint": "ADX_DATABASE"
          },
          {
            "description": "Set environment variable in container: AZURE_TENANT_ID",
            "isRequired": true,
            "format": "string",
            "value": "AZURE_TENANT_ID",
            "default": "AZURE_TENANT_ID",
            "type": "named",
            "name": "-e",
            "valueHint": "AZURE_TENANT_ID"
          },
          {
            "description": "Set environment variable in container: AZURE_CLIENT_ID",
            "isRequired": true,
            "format": "string",
            "value": "AZURE_CLIENT_ID",
            "default": "AZURE_CLIENT_ID",
            "type": "named",
            "name": "-e",
            "valueHint": "AZURE_CLIENT_ID"
          },
          {
            "description": "Set environment variable in container: ADX_TOKEN_FILE_PATH",
            "isRequired": true,
            "format": "string",
            "value": "ADX_TOKEN_FILE_PATH",
            "default": "ADX_TOKEN_FILE_PATH",
            "type": "named",
            "name": "-e",
            "valueHint": "ADX_TOKEN_FILE_PATH"
          },
          {
            "description": "Container image to run",
            "isRequired": true,
            "format": "string",
            "value": "adx-mcp-server",
            "default": "adx-mcp-server",
            "type": "positional",
            "valueHint": "adx-mcp-server"
          }
        ],
        "environmentVariables": [
          {
            "description": "https://yourcluster.region.kusto.windows.net",
            "name": "ADX_CLUSTER_URL"
          },
          {
            "description": "your_database",
            "name": "ADX_DATABASE"
          },
          {
            "description": "your_tenant_id",
            "name": "AZURE_TENANT_ID"
          },
          {
            "description": "your_client_id",
            "name": "AZURE_CLIENT_ID"
          },
          {
            "description": "/var/run/secrets/azure/tokens/azure-identity-token",
            "name": "ADX_TOKEN_FILE_PATH"
          }
        ],
        "registryType": "oci",
        "identifier": "adx_mcp_server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "bb734a22-a274-48ee-9740-d4a6a9a0a367",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "bb734a22-a274-48ee-9740-d4a6a9a0a367"
      }
    }
  },
  {
    "name": "io.github.vortiago/mcp-azure-devops",
    "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Azure DevOps services via Python SDK.",
    "status": "active",
    "repository": {
      "url": "https://github.com/Vortiago/mcp-azure-devops",
      "source": "github",
      "id": "948085438"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.6.0",
        "registryType": "pypi",
        "identifier": "mcp-azure-devops",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4502246b-f419-4879-a179-149c6d87a871",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4502246b-f419-4879-a179-149c6d87a871"
      }
    }
  },
  {
    "name": "io.github.magnetai/mcp-free-usdc-transfer",
    "description": "MCP (Model Context Protocol) server - free usdc transfer powered by Coinbase CDP",
    "status": "active",
    "repository": {
      "url": "https://github.com/magnetai/mcp-free-usdc-transfer",
      "source": "github",
      "id": "914708046"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.5",
        "environmentVariables": [
          {
            "description": "YOUR_COINBASE_CDP_API_KEY_NAME",
            "name": "COINBASE_CDP_API_KEY_NAME"
          },
          {
            "description": "YOUR_COINBASE_CDP_PRIVATE_KEY",
            "name": "COINBASE_CDP_PRIVATE_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@magnetai/free-usdc-transfer",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c3123664-33b3-4f29-bc08-40b88300f57c",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c3123664-33b3-4f29-bc08-40b88300f57c"
      }
    }
  },
  {
    "name": "io.github.basicmachines-co/basic-memory",
    "description": "Basic Memory is a knowledge management system that allows you to build a persistent semantic graph from conversations with AI assistants, stored in standard Markdown files on your computer. Integrates directly with Obsidan.md",
    "status": "active",
    "repository": {
      "url": "https://github.com/basicmachines-co/basic-memory",
      "source": "github",
      "id": "897595329"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.12.3",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "mcp",
            "default": "mcp",
            "type": "positional",
            "valueHint": "mcp"
          }
        ],
        "registryType": "pypi",
        "identifier": "basic-memory",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "377dba9b-63cc-4ca9-bb39-97f5e12497b4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "377dba9b-63cc-4ca9-bb39-97f5e12497b4"
      }
    }
  },
  {
    "name": "io.github.lucashild/mcp-server-bigquery",
    "description": "A Model Context Protocol server that provides access to BigQuery",
    "status": "active",
    "repository": {
      "url": "https://github.com/LucasHild/mcp-server-bigquery",
      "source": "github",
      "id": "898062517"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "registryType": "pypi",
        "identifier": "mcp-server-bigquery",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0e517488-6e73-41c3-a297-7602f5937079",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0e517488-6e73-41c3-a297-7602f5937079"
      }
    }
  },
  {
    "name": "io.github.ergut/mcp-bigquery-server",
    "description": "A Model Context Protocol (MCP) server that provides secure, read-only access to BigQuery datasets. Enables Large Language Models (LLMs) to safely query and analyze data through a standardized interface.",
    "status": "active",
    "repository": {
      "url": "https://github.com/ergut/mcp-bigquery-server",
      "source": "github",
      "id": "898108083"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.3",
        "packageArguments": [
          {
            "description": "--project-id your-project-id",
            "isRequired": true,
            "format": "string",
            "value": "your-project-id",
            "default": "your-project-id",
            "type": "named",
            "name": "--project-id",
            "valueHint": "your-project-id"
          },
          {
            "description": "--location us-central1",
            "isRequired": true,
            "format": "string",
            "value": "us-central1",
            "default": "us-central1",
            "type": "named",
            "name": "--location",
            "valueHint": "us-central1"
          },
          {
            "description": "--key-file /path/to/service-account-key.json",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/service-account-key.json",
            "default": "/path/to/service-account-key.json",
            "type": "named",
            "name": "--key-file",
            "valueHint": "/path/to/service-account-key.json"
          }
        ],
        "registryType": "npm",
        "identifier": "@ergut/mcp-bigquery-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e3053bd5-1a4d-473c-a41b-f83ab1a46174",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e3053bd5-1a4d-473c-a41b-f83ab1a46174"
      }
    }
  },
  {
    "name": "io.github.leehanchung/bing-search-mcp",
    "description": "MCP Server for Bing Search API",
    "status": "active",
    "repository": {
      "url": "https://github.com/leehanchung/bing-search-mcp",
      "source": "github",
      "id": "949213032"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "your-bing-api-key",
            "name": "BING_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp_server_bing",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a0db598f-81d1-44d6-9008-e9a71e742cd3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a0db598f-81d1-44d6-9008-e9a71e742cd3"
      }
    }
  },
  {
    "name": "io.github.lloydzhou/bitable-mcp",
    "description": "This MCP server provides access to Lark Bitable through the Model Context Protocol. It allows users to interact with Bitable tables using predefined tools.",
    "status": "active",
    "repository": {
      "url": "https://github.com/lloydzhou/bitable-mcp",
      "source": "github",
      "id": "951621343"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.1",
        "packageArguments": [
          {
            "description": "-m bitable_mcp",
            "isRequired": true,
            "format": "string",
            "value": "bitable_mcp",
            "default": "bitable_mcp",
            "type": "named",
            "name": "-m",
            "valueHint": "bitable_mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-personal-base-token",
            "name": "PERSONAL_BASE_TOKEN"
          },
          {
            "description": "your-app-token",
            "name": "APP_TOKEN"
          }
        ],
        "registryType": "pypi",
        "identifier": "bitable-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4a33ebab-f5cf-48b3-adb3-3f7094ea706c",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4a33ebab-f5cf-48b3-adb3-3f7094ea706c"
      }
    }
  },
  {
    "name": "io.github.ahujasid/blender-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/ahujasid/blender-mcp",
      "source": "github",
      "id": "944414751"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.3",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "uvx",
            "default": "uvx",
            "type": "positional",
            "valueHint": "uvx"
          },
          {
            "isRequired": true,
            "format": "string",
            "value": "blender-mcp",
            "default": "blender-mcp",
            "type": "positional",
            "valueHint": "blender-mcp"
          }
        ],
        "registryType": "pypi",
        "identifier": "blender-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "fd341719-247e-45e8-a911-ad7c336eb163",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "fd341719-247e-45e8-a911-ad7c336eb163"
      }
    }
  },
  {
    "name": "io.github.agree-able/room-mcp",
    "description": "Allow MCP clients like claude-desktop to use rooms to coordinate with other agents",
    "status": "active",
    "repository": {
      "url": "https://github.com/agree-able/room-mcp",
      "source": "github",
      "id": "939073414"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.3",
        "registryType": "npm",
        "identifier": "@agree-able/room-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b9bf1c69-4a64-47ec-a781-fb81d1922695",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b9bf1c69-4a64-47ec-a781-fb81d1922695"
      }
    }
  },
  {
    "name": "io.github.co-browser/browser-use-mcp-server",
    "description": "Browse the web, directly from Cursor etc.",
    "status": "active",
    "repository": {
      "url": "https://github.com/co-browser/browser-use-mcp-server",
      "source": "github",
      "id": "943806192"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.3",
        "packageArguments": [
          {
            "description": "server",
            "isRequired": true,
            "format": "string",
            "value": "server",
            "default": "server",
            "type": "positional",
            "valueHint": "server"
          },
          {
            "description": "--port 8000",
            "isRequired": true,
            "format": "string",
            "value": "8000",
            "default": "8000",
            "type": "named",
            "name": "--port",
            "valueHint": "8000"
          },
          {
            "description": "--stdio",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--stdio"
          },
          {
            "description": "--proxy-port 9000",
            "isRequired": true,
            "format": "string",
            "value": "9000",
            "default": "9000",
            "type": "named",
            "name": "--proxy-port",
            "valueHint": "9000"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "OPENAI_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "browser-use-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "27b05d20-fd9c-437d-a86c-923629491ff5",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "27b05d20-fd9c-437d-a86c-923629491ff5"
      }
    }
  },
  {
    "name": "io.github.termix-official/bsc-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/TermiX-official/bsc-mcp",
      "source": "github",
      "id": "949735444"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.12",
        "registryType": "npm",
        "identifier": "bnbchain-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "36156772-6775-4b79-b560-b72ccaaca085",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "36156772-6775-4b79-b560-b72ccaaca085"
      }
    }
  },
  {
    "name": "io.github.githejie/mcp-server-calculator",
    "description": "A Model Context Protocol server for calculating.",
    "status": "active",
    "repository": {
      "url": "https://github.com/githejie/mcp-server-calculator",
      "source": "github",
      "id": "951246115"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "registryType": "pypi",
        "identifier": "mcp-server-calculator",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "87cf029b-441f-439a-aae9-9ef27ddd4322",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "87cf029b-441f-439a-aae9-9ef27ddd4322"
      }
    }
  },
  {
    "name": "io.github.ai-ql/chat-mcp",
    "description": "A Desktop Chat App that leverages MCP(Model Context Protocol) to interface with other LLMs.",
    "status": "active",
    "repository": {
      "url": "https://github.com/AI-QL/chat-mcp",
      "source": "github",
      "id": "896905855"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Path to the working directory",
            "isRequired": true,
            "format": "string",
            "value": "D:/Github/mcp-test",
            "default": "D:/Github/mcp-test",
            "type": "positional",
            "valueHint": "D:/Github/mcp-test"
          }
        ],
        "registryType": "oci",
        "identifier": "aiql-desktop",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "16fc441d-0d72-4b14-afd7-d5c9dd25c909",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "16fc441d-0d72-4b14-afd7-d5c9dd25c909"
      }
    }
  },
  {
    "name": "io.github.mcpso/mcp-server-chatsum",
    "description": "Query and Summarize your chat messages.",
    "status": "active",
    "repository": {
      "url": "https://github.com/chatmcp/mcp-server-chatsum",
      "source": "github",
      "id": "898004429"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "path-to/mcp-server-chatsum/chatbot/data/chat.db",
            "name": "CHAT_DB_PATH"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-chatsum",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "196a8cbd-8234-4336-a4d7-f6dda870bcfb",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "196a8cbd-8234-4336-a4d7-f6dda870bcfb"
      }
    }
  },
  {
    "name": "io.github.privetin/chroma",
    "description": "MCP server for Chroma",
    "status": "active",
    "repository": {
      "url": "https://github.com/privetin/chroma",
      "source": "github",
      "id": "909977348"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Named argument",
            "isRequired": true,
            "format": "string",
            "value": "C:/MCP/server/community/chroma",
            "default": "C:/MCP/server/community/chroma",
            "type": "named",
            "name": "--directory",
            "valueHint": "C:/MCP/server/community/chroma"
          },
          {
            "description": "Positional argument",
            "isRequired": true,
            "format": "string",
            "value": "chroma",
            "default": "chroma",
            "type": "positional",
            "valueHint": "chroma"
          }
        ],
        "registryType": "pypi",
        "identifier": "chroma",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4b637a92-c1af-463d-afc1-e0ce65d7c057",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4b637a92-c1af-463d-afc1-e0ce65d7c057"
      }
    }
  },
  {
    "name": "io.github.zilongxue/claude-post",
    "description": "ClaudePost enables seamless email management through natural language conversations with Claude, offering secure features like email search, reading, and sending.",
    "status": "active",
    "repository": {
      "url": "https://github.com/ZilongXue/claude-post",
      "source": "github",
      "id": "913146173"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Directory to execute the command in",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/claude-post/src/email_client",
            "default": "/path/to/claude-post/src/email_client",
            "type": "named",
            "name": "--directory",
            "valueHint": "/path/to/claude-post/src/email_client"
          },
          {
            "description": "Name of the email client script",
            "isRequired": true,
            "format": "string",
            "value": "email-client",
            "default": "email-client",
            "type": "positional",
            "valueHint": "email-client"
          }
        ],
        "registryType": "pypi",
        "identifier": "email_client",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3b404956-9bad-4bd9-89a9-17534b4bd22e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3b404956-9bad-4bd9-89a9-17534b4bd22e"
      }
    }
  },
  {
    "name": "io.github.taazkareem/clickup-mcp-server",
    "description": "ClickUp MCP Server - Integrate ClickUp task management with AI through Model Context Protocol",
    "status": "active",
    "repository": {
      "url": "https://github.com/taazkareem/clickup-mcp-server",
      "source": "github",
      "id": "930539984"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.7.2",
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "CLICKUP_API_KEY"
          },
          {
            "description": "your-team-id",
            "name": "CLICKUP_TEAM_ID"
          },
          {
            "description": "true",
            "name": "ENABLE_SSE"
          },
          {
            "description": "8000",
            "name": "PORT"
          }
        ],
        "registryType": "npm",
        "identifier": "@taazkareem/clickup-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "34b93e72-0fa8-4dbe-ae9b-82a9e40de735",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "34b93e72-0fa8-4dbe-ae9b-82a9e40de735"
      }
    }
  },
  {
    "name": "io.github.felores/cloudinary-mcp-server",
    "description": "MCP (Model Context Protocol) server for uploading media to Cloudinary using Claude Desktop",
    "status": "active",
    "repository": {
      "url": "https://github.com/felores/cloudinary-mcp-server",
      "source": "github",
      "id": "913564273"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.3",
        "packageArguments": [
          {
            "description": "Path to the package entrypoint",
            "isRequired": true,
            "format": "string",
            "value": "c:/path/to/cloudinary-mcp-server/dist/index.js",
            "default": "c:/path/to/cloudinary-mcp-server/dist/index.js",
            "type": "positional",
            "valueHint": "c:/path/to/cloudinary-mcp-server/dist/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_cloud_name",
            "name": "CLOUDINARY_CLOUD_NAME"
          },
          {
            "description": "your_api_key",
            "name": "CLOUDINARY_API_KEY"
          },
          {
            "description": "your_api_secret",
            "name": "CLOUDINARY_API_SECRET"
          }
        ],
        "registryType": "npm",
        "identifier": "@felores/cloudinary-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7baddfbe-3618-41d8-befe-40fc2aabcd8e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7baddfbe-3618-41d8-befe-40fc2aabcd8e"
      }
    }
  },
  {
    "name": "io.github.bazinga012/mcp_code_executor",
    "description": "The MCP Code Executor is an MCP server that allows LLMs to execute Python code within a specified Conda environment.",
    "status": "active",
    "repository": {
      "url": "https://github.com/bazinga012/mcp_code_executor",
      "source": "github",
      "id": "928420039"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "packageArguments": [
          {
            "description": "file_path positional argument for the code file to be read",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/code/storage/my_script_abc123.py",
            "default": "/path/to/code/storage/my_script_abc123.py",
            "type": "positional",
            "valueHint": "/path/to/code/storage/my_script_abc123.py"
          }
        ],
        "registryType": "oci",
        "identifier": "code_execution_server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0cdfed38-6495-42a3-a837-3788f35aadd3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0cdfed38-6495-42a3-a837-3788f35aadd3"
      }
    }
  },
  {
    "name": "io.github.kocierik/consul-mcp-server",
    "description": "A consul MCP Server (modelcontextprotocol) ",
    "status": "active",
    "repository": {
      "url": "https://github.com/kocierik/consul-mcp-server",
      "source": "github",
      "id": "969129017"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "oci",
        "identifier": "consul-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a9fe34f1-7c82-4f7d-8fbe-20bb8ca29e7b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a9fe34f1-7c82-4f7d-8fbe-20bb8ca29e7b"
      }
    }
  },
  {
    "name": "io.github.topoteretes/cognee",
    "description": "Memory for AI Agents in 5 lines of code",
    "status": "active",
    "repository": {
      "url": "https://github.com/topoteretes/cognee",
      "source": "github",
      "id": "679343504"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.40",
        "registryType": "pypi",
        "identifier": "cognee",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ae9ce022-800d-4a10-a452-5bc396d25430",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ae9ce022-800d-4a10-a452-5bc396d25430"
      }
    }
  },
  {
    "name": "io.github.longmans/coin_api_mcp",
    "description": "A Model Context Protocol server that provides access to CoinMarketCap's cryptocurrency data. This server enables AI-powered applications to retrieve cryptocurrency listings, quotes, and detailed information about various coins.",
    "status": "active",
    "repository": {
      "url": "https://github.com/longmans/coin_api_mcp",
      "source": "github",
      "id": "903449956"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "-m coin_api_mcp",
            "isRequired": true,
            "format": "string",
            "value": "coin_api_mcp",
            "default": "coin_api_mcp",
            "type": "named",
            "name": "-m",
            "valueHint": "coin_api_mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "COINMARKETCAP_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "coin-api-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "28fc08e1-1afc-42cb-8eca-0b500e23c73e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "28fc08e1-1afc-42cb-8eca-0b500e23c73e"
      }
    }
  },
  {
    "name": "io.github.shinzo-labs/coinmarketcap-mcp",
    "description": "MCP Implementation for CoinMarketCap",
    "status": "active",
    "repository": {
      "url": "https://github.com/shinzo-labs/coinmarketcap-mcp",
      "source": "github",
      "id": "952163210"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.3.7",
        "registryType": "npm",
        "identifier": "@shinzolabs/coinmarketcap-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7e3a17ce-fbbd-48cb-b29f-34a4b8c6ca55",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7e3a17ce-fbbd-48cb-b29f-34a4b8c6ca55"
      }
    }
  },
  {
    "name": "io.github.baryhuang/mcp-remote-macos-use",
    "description": "The only general AI agent that does NOT requires extra API key, giving you full control on your local and remote MacOs from Claude Desktop App",
    "status": "active",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-remote-macos-use",
      "source": "github",
      "id": "952732612"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Pass environment variable MACOS_USERNAME",
            "isRequired": true,
            "format": "string",
            "value": "MACOS_USERNAME=your_macos_username",
            "default": "MACOS_USERNAME=your_macos_username",
            "type": "named",
            "name": "-e",
            "valueHint": "MACOS_USERNAME=your_macos_username"
          },
          {
            "description": "Pass environment variable MACOS_PASSWORD",
            "isRequired": true,
            "format": "string",
            "value": "MACOS_PASSWORD=your_macos_password",
            "default": "MACOS_PASSWORD=your_macos_password",
            "type": "named",
            "name": "-e",
            "valueHint": "MACOS_PASSWORD=your_macos_password"
          },
          {
            "description": "Pass environment variable MACOS_HOST",
            "isRequired": true,
            "format": "string",
            "value": "MACOS_HOST=your_macos_hostname_or_ip",
            "default": "MACOS_HOST=your_macos_hostname_or_ip",
            "type": "named",
            "name": "-e",
            "valueHint": "MACOS_HOST=your_macos_hostname_or_ip"
          },
          {
            "description": "Remove container when it exits",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "Docker image to use",
            "isRequired": true,
            "format": "string",
            "value": "buryhuang/mcp-remote-macos-use:latest",
            "default": "buryhuang/mcp-remote-macos-use:latest",
            "type": "positional",
            "valueHint": "buryhuang/mcp-remote-macos-use:latest"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp_remote_macos_use",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5e32ec37-7a46-4e84-9f19-845cd6b151f4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5e32ec37-7a46-4e84-9f19-845cd6b151f4"
      }
    }
  },
  {
    "name": "io.github.ivo-toby/contentful-mcp",
    "description": "MCP (Model Context Protocol) server for the Contentful Management API",
    "status": "active",
    "repository": {
      "url": "https://github.com/ivo-toby/contentful-mcp",
      "source": "github",
      "id": "898628964"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.14.0",
        "packageArguments": [
          {
            "description": "Management token for Contentful",
            "isRequired": true,
            "format": "string",
            "value": "<your token>",
            "default": "<your token>",
            "type": "named",
            "name": "--management-token",
            "valueHint": "<your token>"
          },
          {
            "description": "Contentful API host address",
            "isRequired": true,
            "format": "string",
            "value": "http://api.contentful.com",
            "default": "http://api.contentful.com",
            "type": "named",
            "name": "--host",
            "valueHint": "http://api.contentful.com"
          }
        ],
        "registryType": "npm",
        "identifier": "@ivotoby/contentful-management-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "347d6881-c509-4dca-9ece-95e25098436b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "347d6881-c509-4dca-9ece-95e25098436b"
      }
    }
  },
  {
    "name": "io.github.kukapay/crypto-feargreed-mcp",
    "description": "Providing real-time and historical Crypto Fear & Greed Index data",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/crypto-feargreed-mcp",
      "source": "github",
      "id": "948974664"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "crypto-feargreed-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "45ee52ba-1e4c-48a5-9eef-de7a234997db",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "45ee52ba-1e4c-48a5-9eef-de7a234997db"
      }
    }
  },
  {
    "name": "io.github.kukapay/crypto-indicators-mcp",
    "description": "An MCP server providing a range of cryptocurrency technical analysis indicators and strategies.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/crypto-indicators-mcp",
      "source": "github",
      "id": "953321792"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "packageArguments": [
          {
            "description": "Positional argument: path/to/crypto-indicators-mcp/index.js",
            "isRequired": true,
            "format": "string",
            "value": "path/to/crypto-indicators-mcp/index.js",
            "default": "path/to/crypto-indicators-mcp/index.js",
            "type": "positional",
            "valueHint": "path/to/crypto-indicators-mcp/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "binance",
            "name": "EXCHANGE_NAME"
          }
        ],
        "registryType": "npm",
        "identifier": "crypto-indicators-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0852caec-a861-4f9c-9e94-a7c8b67a1641",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0852caec-a861-4f9c-9e94-a7c8b67a1641"
      }
    }
  },
  {
    "name": "io.github.kukapay/cryptopanic-mcp-server",
    "description": "Provide latest cryptocurrency news to AI agents.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/cryptopanic-mcp-server",
      "source": "github",
      "id": "946301386"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "cryptopanic-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "91f75500-0051-4d05-a5b2-9a87aa52ec3a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "91f75500-0051-4d05-a5b2-9a87aa52ec3a"
      }
    }
  },
  {
    "name": "io.github.dappierai/dappier-mcp",
    "description": "Enable fast, free real-time web search and access premium data from trusted media brands\u2014news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.",
    "status": "active",
    "repository": {
      "url": "https://github.com/DappierAI/dappier-mcp",
      "source": "github",
      "id": "923666627"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.3.2",
        "environmentVariables": [
          {
            "description": "YOUR_API_KEY_HERE",
            "name": "DAPPIER_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "dappier-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "58b5f6c8-1ad7-4378-9921-7b9b7982c84c",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "58b5f6c8-1ad7-4378-9921-7b9b7982c84c"
      }
    }
  },
  {
    "name": "io.github.geli2001/datadog-mcp-server",
    "description": "MCP server interacts with the official Datadog API",
    "status": "active",
    "repository": {
      "url": "https://github.com/GeLi2001/datadog-mcp-server",
      "source": "github",
      "id": "960104719"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.8",
        "packageArguments": [
          {
            "description": "<YOUR_API_KEY>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_API_KEY>",
            "default": "<YOUR_API_KEY>",
            "type": "named",
            "name": "--apiKey",
            "valueHint": "<YOUR_API_KEY>"
          },
          {
            "description": "<YOUR_APP_KEY>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_APP_KEY>",
            "default": "<YOUR_APP_KEY>",
            "type": "named",
            "name": "--appKey",
            "valueHint": "<YOUR_APP_KEY>"
          },
          {
            "description": "<YOUR_DD_SITE>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_DD_SITE>",
            "default": "<YOUR_DD_SITE>",
            "type": "named",
            "name": "--site",
            "valueHint": "<YOUR_DD_SITE>"
          },
          {
            "description": "<YOUR_LOGS_SITE>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_LOGS_SITE>",
            "default": "<YOUR_LOGS_SITE>",
            "type": "named",
            "name": "--logsSite",
            "valueHint": "<YOUR_LOGS_SITE>"
          },
          {
            "description": "<YOUR_METRICS_SITE>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_METRICS_SITE>",
            "default": "<YOUR_METRICS_SITE>",
            "type": "named",
            "name": "--metricsSite",
            "valueHint": "<YOUR_METRICS_SITE>"
          }
        ],
        "registryType": "npm",
        "identifier": "datadog-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "24f2d280-583d-4511-af0c-47910fc52c4d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "24f2d280-583d-4511-af0c-47910fc52c4d"
      }
    }
  },
  {
    "name": "io.github.reading-plus-ai/mcp-server-data-exploration",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/reading-plus-ai/mcp-server-data-exploration",
      "source": "github",
      "id": "899661027"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.6",
        "registryType": "pypi",
        "identifier": "mcp-server-ds",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "14074b80-f3a7-4b45-97ba-7204c92c5f6e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "14074b80-f3a7-4b45-97ba-7204c92c5f6e"
      }
    }
  },
  {
    "name": "io.github.privetin/dataset-viewer",
    "description": "MCP server for Hugging Face dataset viewer",
    "status": "active",
    "repository": {
      "url": "https://github.com/privetin/dataset-viewer",
      "source": "github",
      "id": "911084198"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "dataset-viewer",
            "default": "dataset-viewer",
            "type": "positional",
            "valueHint": "dataset-viewer"
          }
        ],
        "registryType": "pypi",
        "identifier": "dataset-viewer",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "200d7310-6d18-4b22-98b3-68ae63ea985a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "200d7310-6d18-4b22-98b3-68ae63ea985a"
      }
    }
  },
  {
    "name": "io.github.snagasuri/deebo-prototype",
    "description": "Autonomous debugging agent MCP server",
    "status": "active",
    "repository": {
      "url": "https://github.com/snagasuri/deebo-prototype",
      "source": "github",
      "id": "954456943"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "--experimental-specifier-resolution=node",
            "isRequired": true,
            "format": "string",
            "value": "node",
            "default": "node",
            "type": "named",
            "name": "--experimental-specifier-resolution",
            "valueHint": "node"
          },
          {
            "description": "--experimental-modules",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--experimental-modules"
          },
          {
            "description": "--max-old-space-size=4096",
            "isRequired": true,
            "format": "string",
            "value": "4096",
            "default": "4096",
            "type": "named",
            "name": "--max-old-space-size",
            "valueHint": "4096"
          },
          {
            "description": "/Users/[your-name]/.deebo/build/index.js",
            "isRequired": true,
            "format": "string",
            "value": "/Users/[your-name]/.deebo/build/index.js",
            "default": "/Users/[your-name]/.deebo/build/index.js",
            "type": "positional"
          }
        ],
        "environmentVariables": [
          {
            "description": "development",
            "name": "NODE_ENV"
          },
          {
            "description": "true",
            "name": "USE_MEMORY_BANK"
          },
          {
            "description": "openrouter",
            "name": "MOTHER_HOST"
          },
          {
            "description": "anthropic/claude-3.5-sonnet",
            "name": "MOTHER_MODEL"
          },
          {
            "description": "openrouter",
            "name": "SCENARIO_HOST"
          },
          {
            "description": "deepseek/deepseek-chat",
            "name": "SCENARIO_MODEL"
          },
          {
            "description": "your-openrouter-api-key",
            "name": "OPENROUTER_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "deebo-prototype",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ec2849c6-e8ed-46b1-8e57-646fd2e8be93",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ec2849c6-e8ed-46b1-8e57-646fd2e8be93"
      }
    }
  },
  {
    "name": "io.github.reading-plus-ai/mcp-server-deep-research",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/reading-plus-ai/mcp-server-deep-research",
      "source": "github",
      "id": "953282616"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "registryType": "oci",
        "identifier": "mcp-server-deep-research",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "79f72036-83ee-4420-9767-980e27590e6f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "79f72036-83ee-4420-9767-980e27590e6f"
      }
    }
  },
  {
    "name": "io.github.dmontgomery40/deepseek-mcp-server",
    "description": "Model Context Protocol server for DeepSeek's advanced language models",
    "status": "active",
    "repository": {
      "url": "https://github.com/DMontgomery40/deepseek-mcp-server",
      "source": "github",
      "id": "920179950"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.1",
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "DEEPSEEK_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "deepseek-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "345bf964-02ce-4814-b37f-52c2e73ab395",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "345bf964-02ce-4814-b37f-52c2e73ab395"
      }
    }
  },
  {
    "name": "io.github.66julienmartin/mcp-server-deepseek_r1",
    "description": "A Model Context Protocol (MCP) server implementation connecting Claude Desktop with DeepSeek's language models (R1/V3)",
    "status": "active",
    "repository": {
      "url": "https://github.com/66julienmartin/MCP-server-Deepseek_R1",
      "source": "github",
      "id": "927737184"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "DEEPSEEK_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "deepseek_r1",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a2015046-780d-421a-999f-c52c808236fa",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a2015046-780d-421a-999f-c52c808236fa"
      }
    }
  },
  {
    "name": "io.github.ruixingshi/deepseek-thinker-mcp",
    "description": "A MCP provider Deepseek reasoning content to MCP-enabled AI Clients, like Claude Desktop. Supports access to Deepseek's CoT from the Deepseek API service or a local Ollama server.",
    "status": "active",
    "repository": {
      "url": "https://github.com/ruixingshi/deepseek-thinker-mcp",
      "source": "github",
      "id": "931883120"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.2",
        "environmentVariables": [
          {
            "description": "<Your API Key>",
            "name": "API_KEY"
          },
          {
            "description": "<Your Base URL>",
            "name": "BASE_URL"
          }
        ],
        "registryType": "npm",
        "identifier": "deepseek-thinker-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "883a7c72-e6ca-41cb-91e9-e65436a58729",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "883a7c72-e6ca-41cb-91e9-e65436a58729"
      }
    }
  },
  {
    "name": "io.github.descope-sample-apps/descope-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/descope-sample-apps/descope-mcp-server-stdio",
      "source": "github",
      "id": "921929368"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "your-descope-project-id-here",
            "name": "DESCOPE_PROJECT_ID"
          },
          {
            "description": "your-descope-management-key-here",
            "name": "DESCOPE_MANAGEMENT_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "descope-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "bac14e5d-08c4-4b69-8e40-b845632d26ed",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "bac14e5d-08c4-4b69-8e40-b845632d26ed"
      }
    }
  },
  {
    "name": "io.github.kpsunil97/devrev-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/kpsunil97/devrev-mcp-server",
      "source": "github",
      "id": "906414289"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "registryType": "pypi",
        "identifier": "devrev-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "8b17658e-2a1b-4ca7-a1ae-583e7b190bce",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "8b17658e-2a1b-4ca7-a1ae-583e7b190bce"
      }
    }
  },
  {
    "name": "io.github.christianhinge/dicom-mcp",
    "description": "Model Context Protocol (MCP) for interacting with dicom servers (PACS etc.)",
    "status": "active",
    "repository": {
      "url": "https://github.com/ChristianHinge/dicom-mcp",
      "source": "github",
      "id": "946779028"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "packageArguments": [
          {
            "description": "Specify the directory to operate in",
            "isRequired": true,
            "format": "string",
            "value": "path/to/cloned/dicom-mcp",
            "default": "path/to/cloned/dicom-mcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "path/to/cloned/dicom-mcp"
          },
          {
            "description": "Script or module to execute",
            "isRequired": true,
            "format": "string",
            "value": "dicom-mcp",
            "default": "dicom-mcp",
            "type": "positional",
            "valueHint": "dicom-mcp"
          },
          {
            "description": "Path to the configuration YAML file",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/your_config.yaml",
            "default": "/path/to/your_config.yaml",
            "type": "positional",
            "valueHint": "/path/to/your_config.yaml"
          }
        ],
        "registryType": "pypi",
        "identifier": "dicom-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c83f2ca0-ca97-43cf-8288-5ff4a0771e29",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c83f2ca0-ca97-43cf-8288-5ff4a0771e29"
      }
    }
  },
  {
    "name": "io.github.v-3/discordmcp",
    "description": "Discord MCP Server for Claude Integration",
    "status": "active",
    "repository": {
      "url": "https://github.com/v-3/discordmcp",
      "source": "github",
      "id": "919856605"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "pypi",
        "identifier": "discord-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "361ed7f4-8df4-4a8e-931f-edfb380e0019",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "361ed7f4-8df4-4a8e-931f-edfb380e0019"
      }
    }
  },
  {
    "name": "io.github.ashdevfr/discourse-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/AshDevFr/discourse-mcp-server",
      "source": "github",
      "id": "946264788"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.2",
        "environmentVariables": [
          {
            "description": "https://try.discourse.org",
            "name": "DISCOURSE_API_URL"
          },
          {
            "description": "1234",
            "name": "DISCOURSE_API_KEY"
          },
          {
            "description": "ash",
            "name": "DISCOURSE_API_USERNAME"
          }
        ],
        "registryType": "npm",
        "identifier": "@ashdev/discourse-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "dedc68af-03ef-49ce-a331-e4717b96f693",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "dedc68af-03ef-49ce-a331-e4717b96f693"
      }
    }
  },
  {
    "name": "io.github.ckreiling/mcp-server-docker",
    "description": "MCP server for Docker",
    "status": "active",
    "repository": {
      "url": "https://github.com/ckreiling/mcp-server-docker",
      "source": "github",
      "id": "899787279"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "registryType": "pypi",
        "identifier": "mcp-server-docker",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d2aacd5b-0642-4832-8629-58272a922e4b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d2aacd5b-0642-4832-8629-58272a922e4b"
      }
    }
  },
  {
    "name": "io.github.szeider/mcp-dblp",
    "description": "A Model Context Protocol (MCP) server that provides access to the DBLP computer science bibliography database for Large Language Models.",
    "status": "active",
    "repository": {
      "url": "https://github.com/szeider/mcp-dblp",
      "source": "github",
      "id": "940314682"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.0",
        "registryType": "oci",
        "identifier": "mcp-dblp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5a9955bc-6c28-4ebd-974e-73226eb3e58f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5a9955bc-6c28-4ebd-974e-73226eb3e58f"
      }
    }
  },
  {
    "name": "io.github.omedia/mcp-server-drupal",
    "description": "TS based companion MCP server for the Drupal MCP module that works with the STDIO transport.",
    "status": "active",
    "repository": {
      "url": "https://github.com/Omedia/mcp-server-drupal",
      "source": "github",
      "id": "900629184"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "oci",
        "identifier": "Omedia/mcp-server-drupal",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7902d399-3080-4926-afb8-4f98c3a7d870",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7902d399-3080-4926-afb8-4f98c3a7d870"
      }
    }
  },
  {
    "name": "io.github.kukapay/dune-analytics-mcp",
    "description": "A mcp server that bridges Dune Analytics data to AI agents.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/dune-analytics-mcp",
      "source": "github",
      "id": "949262442"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "dune-analytics-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2d851046-40f2-4088-95df-d6c0f93c2f0a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2d851046-40f2-4088-95df-d6c0f93c2f0a"
      }
    }
  },
  {
    "name": "io.github.tencentedgeone/edgeone-pages-mcp",
    "description": "An MCP service designed for deploying HTML content to EdgeOne Pages and obtaining an accessible public URL.",
    "status": "active",
    "repository": {
      "url": "https://github.com/TencentEdgeOne/edgeone-pages-mcp",
      "source": "github",
      "id": "954390434"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.9",
        "registryType": "npm",
        "identifier": "edgeone-pages-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f97607ba-eb50-4258-b46c-ce9fc6587fa9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f97607ba-eb50-4258-b46c-ce9fc6587fa9"
      }
    }
  },
  {
    "name": "io.github.edwin-finance/edwin",
    "description": "Empowering AI agents to dominate DeFAI",
    "status": "active",
    "repository": {
      "url": "https://github.com/edwin-finance/edwin",
      "source": "github",
      "id": "918664127"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.8.29",
        "registryType": "npm",
        "identifier": "edwin-sdk",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "995ac56a-5ec7-4411-a86c-4ebfef9c9605",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "995ac56a-5ec7-4411-a86c-4ebfef9c9605"
      }
    }
  },
  {
    "name": "io.github.mamertofabian/elevenlabs-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/mamertofabian/elevenlabs-mcp-server",
      "source": "github",
      "id": "906473152"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "packageArguments": [
          {
            "description": "Flag to specify a directory for the server",
            "isRequired": true,
            "format": "string",
            "value": "path/to/elevenlabs-mcp-server",
            "default": "path/to/elevenlabs-mcp-server",
            "type": "named",
            "name": "--directory",
            "valueHint": "path/to/elevenlabs-mcp-server"
          },
          {
            "description": "Positional argument specifying the target server to run",
            "isRequired": true,
            "format": "string",
            "value": "elevenlabs-mcp-server",
            "default": "elevenlabs-mcp-server",
            "type": "positional",
            "valueHint": "elevenlabs-mcp-server"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-api-key",
            "name": "ELEVENLABS_API_KEY"
          },
          {
            "description": "your-voice-id",
            "name": "ELEVENLABS_VOICE_ID"
          },
          {
            "description": "eleven_flash_v2",
            "name": "ELEVENLABS_MODEL_ID"
          },
          {
            "description": "0.5",
            "name": "ELEVENLABS_STABILITY"
          },
          {
            "description": "0.75",
            "name": "ELEVENLABS_SIMILARITY_BOOST"
          },
          {
            "description": "0.1",
            "name": "ELEVENLABS_STYLE"
          },
          {
            "description": "output",
            "name": "ELEVENLABS_OUTPUT_DIR"
          }
        ],
        "registryType": "pypi",
        "identifier": "elevenlabs-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1d89482a-a7de-4d3b-a7cb-1b7be49939ec",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1d89482a-a7de-4d3b-a7cb-1b7be49939ec"
      }
    }
  },
  {
    "name": "io.github.shy2593666979/mcp-server-email",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/Shy2593666979/mcp-server-email",
      "source": "github",
      "id": "953349763"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "mcp-server-email",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c0a64e6c-2ff2-4a2f-afe6-f52119a020a0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c0a64e6c-2ff2-4a2f-afe6-f52119a020a0"
      }
    }
  },
  {
    "name": "io.github.whataboutyou-ai/eunomia-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/whataboutyou-ai/eunomia-mcp-server",
      "source": "github",
      "id": "915645627"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.2",
        "registryType": "oci",
        "identifier": "eunomia-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "35e1e1a0-30c9-4857-a9e0-5c64f7e29fa9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "35e1e1a0-30c9-4857-a9e0-5c64f7e29fa9"
      }
    }
  },
  {
    "name": "io.github.mcpdotdirect/evm-mcp-server",
    "description": "MCP server that provides LLM with tools for interacting with EVM networks",
    "status": "active",
    "repository": {
      "url": "https://github.com/mcpdotdirect/evm-mcp-server",
      "source": "github",
      "id": "945212492"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.3",
        "registryType": "npm",
        "identifier": "@mcpdotdirect/evm-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e944c7a9-9eb0-495a-8bee-d8da751240e7",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e944c7a9-9eb0-495a-8bee-d8da751240e7"
      }
    }
  },
  {
    "name": "io.github.mamertofabian/mcp-everything-search",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/mamertofabian/mcp-everything-search",
      "source": "github",
      "id": "903415597"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.1",
        "packageArguments": [
          {
            "description": "Sets the directory to operate from.",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/mcp-everything-search/src/mcp_server_everything_search",
            "default": "/path/to/mcp-everything-search/src/mcp_server_everything_search",
            "type": "named",
            "name": "--directory",
            "valueHint": "/path/to/mcp-everything-search/src/mcp_server_everything_search"
          },
          {
            "description": "Server name to execute (positional argument)",
            "isRequired": true,
            "format": "string",
            "value": "mcp-server-everything-search",
            "default": "mcp-server-everything-search",
            "type": "positional",
            "valueHint": "mcp-server-everything-search"
          }
        ],
        "environmentVariables": [
          {
            "description": "path/to/Everything-SDK/dll/Everything64.dll",
            "name": "EVERYTHING_SDK_PATH"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server-everything-search",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c6f8403f-30d0-45d2-b7c3-95a6cb61c4b4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c6f8403f-30d0-45d2-b7c3-95a6cb61c4b4"
      }
    }
  },
  {
    "name": "io.github.haris-musa/excel-mcp-server",
    "description": "A Model Context Protocol server for Excel file manipulation",
    "status": "active",
    "repository": {
      "url": "https://github.com/haris-musa/excel-mcp-server",
      "source": "github",
      "id": "931365873"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "environmentVariables": [
          {
            "description": "/path/to/excel/files",
            "name": "EXCEL_FILES_PATH"
          }
        ],
        "registryType": "pypi",
        "identifier": "excel-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2a5c04e4-0526-492b-aa98-49896e033b74",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2a5c04e4-0526-492b-aa98-49896e033b74"
      }
    }
  },
  {
    "name": "io.github.rishijatia/fantasy-pl-mcp",
    "description": "Fantasy Premier League MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/rishijatia/fantasy-pl-mcp",
      "source": "github",
      "id": "948676369"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.4",
        "registryType": "pypi",
        "identifier": "fpl-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f1da402e-a006-4364-a100-5131eb05b579",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f1da402e-a006-4364-a100-5131eb05b579"
      }
    }
  },
  {
    "name": "io.github.fastnai/mcp-fastn",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/fastnai/mcp-fastn",
      "source": "github",
      "id": "950266465"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "fastn-server.py",
            "default": "fastn-server.py",
            "type": "positional",
            "valueHint": "fastn-server.py"
          }
        ],
        "registryType": "npm",
        "identifier": "fastn",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3d7c6822-88bd-4569-a099-1e58b9b365b0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3d7c6822-88bd-4569-a099-1e58b9b365b0"
      }
    }
  },
  {
    "name": "io.github.stefanoamorelli/fred-mcp-server",
    "description": "Open-source MCP Server for the Federal Reserve Economic Data",
    "status": "active",
    "repository": {
      "url": "https://github.com/stefanoamorelli/fred-mcp-server",
      "source": "github",
      "id": "981791515"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.3",
        "environmentVariables": [
          {
            "description": "<YOUR_API_KEY>",
            "name": "FRED_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "fred-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "2382172a-b26a-40fc-adee-f82132b56edc",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "2382172a-b26a-40fc-adee-f82132b56edc"
      }
    }
  },
  {
    "name": "io.github.zcaceres/fetch-mcp",
    "description": "A flexible HTTP fetching Model Context Protocol server.",
    "status": "active",
    "repository": {
      "url": "https://github.com/zcaceres/fetch-mcp",
      "source": "github",
      "id": "905004409"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "pypi",
        "identifier": "fetch",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c2f4ab61-b279-4cb9-932d-5f60bcd1534a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c2f4ab61-b279-4cb9-932d-5f60bcd1534a"
      }
    }
  },
  {
    "name": "io.github.glips/figma-context-mcp",
    "description": "MCP server to provide Figma layout information to AI coding agents like Cursor",
    "status": "active",
    "repository": {
      "url": "https://github.com/GLips/Figma-Context-MCP",
      "source": "github",
      "id": "931892749"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.2",
        "packageArguments": [
          {
            "description": "Figma API Key flag",
            "isRequired": true,
            "format": "string",
            "value": "YOUR-KEY",
            "default": "YOUR-KEY",
            "type": "named",
            "name": "--figma-api-key",
            "valueHint": "YOUR-KEY"
          },
          {
            "description": "stdio mode",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--stdio"
          }
        ],
        "registryType": "npm",
        "identifier": "figma-developer-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e61c643c-ec01-483c-a586-20f87ab6280e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e61c643c-ec01-483c-a586-20f87ab6280e"
      }
    }
  },
  {
    "name": "io.github.gannonh/firebase-mcp",
    "description": "\ud83d\udd25 Model Context Protocol (MCP) server for Firebase.",
    "status": "active",
    "repository": {
      "url": "https://github.com/gannonh/firebase-mcp",
      "source": "github",
      "id": "945181573"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.4.9",
        "registryType": "npm",
        "identifier": "@gannonh/firebase-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d7a1d303-082e-477d-8ab5-9d65dc0117d9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d7a1d303-082e-477d-8ab5-9d65dc0117d9"
      }
    }
  },
  {
    "name": "io.github.vrknetha/mcp-server-firecrawl",
    "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
    "status": "active",
    "repository": {
      "url": "https://github.com/mendableai/firecrawl-mcp-server",
      "source": "github",
      "id": "899407931"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.9.0",
        "registryType": "npm",
        "identifier": "firecrawl-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3947e186-beb0-4372-8f74-045047dacebd",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3947e186-beb0-4372-8f74-045047dacebd"
      }
    }
  },
  {
    "name": "io.github.sunsetcoder/flightradar24-mcp-server",
    "description": "Model Context Protocol server for Flight Tracking",
    "status": "active",
    "repository": {
      "url": "https://github.com/sunsetcoder/flightradar24-mcp-server",
      "source": "github",
      "id": "903070998"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "FR24_API_KEY"
          },
          {
            "description": "https://fr24api.flightradar24.com",
            "name": "FR24_API_URL"
          }
        ],
        "registryType": "npm",
        "identifier": "flightradar24-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "50b7ab52-c3d0-40bc-b342-38fa93da54ff",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "50b7ab52-c3d0-40bc-b342-38fa93da54ff"
      }
    }
  },
  {
    "name": "io.github.kukapay/freqtrade-mcp",
    "description": "An MCP server that integrates with the Freqtrade cryptocurrency trading bot.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/freqtrade-mcp",
      "source": "github",
      "id": "954056822"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "freqtrade-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "573c235f-93d7-45a3-9f23-b1166a660c97",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "573c235f-93d7-45a3-9f23-b1166a660c97"
      }
    }
  },
  {
    "name": "io.github.mfydev/ghost-mcp",
    "description": "A Model Context Protocol (MCP) server for interacting with Ghost CMS through LLM interfaces like Claude. Allow you to control your Ghost blog by simply asking Claude etc.",
    "status": "active",
    "repository": {
      "url": "https://github.com/MFYDev/ghost-mcp",
      "source": "github",
      "id": "930747221"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "https://yourblog.com",
            "name": "GHOST_API_URL"
          },
          {
            "description": "your_admin_api_key",
            "name": "GHOST_ADMIN_API_KEY"
          },
          {
            "description": "v5.0",
            "name": "GHOST_API_VERSION"
          }
        ],
        "registryType": "npm",
        "identifier": "@fanyangmeng/ghost-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e4927319-b643-498e-935f-51bad4e30381",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e4927319-b643-498e-935f-51bad4e30381"
      }
    }
  },
  {
    "name": "io.github.ko1ynnky/github-actions-mcp-server",
    "description": "GitHub Actions Model Context Protocol Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/ko1ynnky/github-actions-mcp-server",
      "source": "github",
      "id": "951937740"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "<path-to-mcp-server>/dist/index.js",
            "isRequired": true,
            "format": "string",
            "value": "<path-to-mcp-server>/dist/index.js",
            "default": "<path-to-mcp-server>/dist/index.js",
            "type": "positional",
            "valueHint": "<path-to-mcp-server>/dist/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "<YOUR_TOKEN>",
            "name": "GITHUB_PERSONAL_ACCESS_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "github-actions-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "fa6d267b-a797-42b7-9510-5abc3c518f3e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "fa6d267b-a797-42b7-9510-5abc3c518f3e"
      }
    }
  },
  {
    "name": "io.github.ddukbg/github-enterprise-mcp",
    "description": "github-enterprise-mcp",
    "status": "active",
    "repository": {
      "url": "https://github.com/containerelic/github-enterprise-mcp",
      "source": "github",
      "id": "953844812"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.3.0",
        "environmentVariables": [
          {
            "description": "https://github.your-company.com/api/v3",
            "name": "GITHUB_ENTERPRISE_URL"
          },
          {
            "description": "your_github_token",
            "name": "GITHUB_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "@ddukbg/github-enterprise-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "cc190d52-686a-4286-812d-c4542161203d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "cc190d52-686a-4286-812d-c4542161203d"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/gmail-mcp-server",
    "description": "A Model Context Protocol (MCP) server for Gmail integration in Claude Desktop with auto authentication support. This server enables AI assistants to manage Gmail through natural language interactions.",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/Gmail-MCP-Server",
      "source": "github",
      "id": "908415894"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.9",
        "registryType": "npm",
        "identifier": "@gongrzhe/server-gmail-autoauth-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "36ad8cdb-408e-4110-827b-8d6a0a0f94bb",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "36ad8cdb-408e-4110-827b-8d6a0a0f94bb"
      }
    }
  },
  {
    "name": "io.github.baryhuang/mcp-headless-gmail",
    "description": "A MCP (Model Context Protocol) server that provides get, send Gmails without local credential or token setup.",
    "status": "active",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-headless-gmail",
      "source": "github",
      "id": "951719324"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Recipient email address",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--recipient",
            "valueHint": "recipient@example.com"
          },
          {
            "description": "Email subject",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--subject",
            "valueHint": "Hello from MCP Gmail"
          },
          {
            "description": "Plain text email body",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--text-body",
            "valueHint": "This is a test email sent via MCP Gmail server"
          },
          {
            "description": "HTML email body",
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--html-body",
            "valueHint": "<p>This is a <strong>test email</strong> sent via MCP Gmail server</p>"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_access_token",
            "name": "google_access_token"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-headless-gmail",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "83932f7e-8c4d-475b-b03b-f30bc31793d3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "83932f7e-8c4d-475b-b03b-f30bc31793d3"
      }
    }
  },
  {
    "name": "io.github.hichana/goalstory-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/hichana/goalstory-mcp",
      "source": "github",
      "id": "911416763"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.3",
        "registryType": "npm",
        "identifier": "goalstory-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "21242e10-3373-40a3-9119-e4d075b7c27e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "21242e10-3373-40a3-9119-e4d075b7c27e"
      }
    }
  },
  {
    "name": "io.github.goat-sdk/goat",
    "description": "The leading agentic finance toolkit for AI agents",
    "status": "active",
    "repository": {
      "url": "https://github.com/goat-sdk/goat",
      "source": "github",
      "id": "894659403"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "npm",
        "identifier": "goat-repo",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6e61849a-2312-4c76-a9d0-0a4b84a7795e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6e61849a-2312-4c76-a9d0-0a4b84a7795e"
      }
    }
  },
  {
    "name": "io.github.coding-solo/godot-mcp",
    "description": "MCP server for interfacing with Godot game engine. Provides tools for launching the editor, running projects, and capturing debug output.",
    "status": "active",
    "repository": {
      "url": "https://github.com/Coding-Solo/godot-mcp",
      "source": "github",
      "id": "939648665"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "true",
            "name": "DEBUG"
          }
        ],
        "registryType": "oci",
        "identifier": "godot-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "8663db3e-ad80-4805-8032-11a3f303b5fc",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "8663db3e-ad80-4805-8032-11a3f303b5fc"
      }
    }
  },
  {
    "name": "io.github.mark3labs/mcp-filesystem-server",
    "description": "Go server implementing Model Context Protocol (MCP) for filesystem operations.",
    "status": "active",
    "repository": {
      "url": "https://github.com/mark3labs/mcp-filesystem-server",
      "source": "github",
      "id": "895547074"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.11.1",
        "packageArguments": [
          {
            "description": "Run container image",
            "isRequired": true,
            "format": "string",
            "value": "ghcr.io/mark3labs/mcp-filesystem-server:latest",
            "default": "ghcr.io/mark3labs/mcp-filesystem-server:latest",
            "type": "positional",
            "valueHint": "ghcr.io/mark3labs/mcp-filesystem-server:latest"
          },
          {
            "description": "Allowed directory path",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/allowed/directory",
            "default": "/path/to/allowed/directory",
            "type": "positional",
            "valueHint": "/path/to/allowed/directory"
          }
        ],
        "registryType": "oci",
        "identifier": "mark3labs/mcp-filesystem-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "93c84b33-4392-41b2-85be-764e5f39da74",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "93c84b33-4392-41b2-85be-764e5f39da74"
      }
    }
  },
  {
    "name": "io.github.vectorinstitute/mcp-goodnews",
    "description": "A simple MCP application that delivers curated positive and uplifting news stories.",
    "status": "active",
    "repository": {
      "url": "https://github.com/VectorInstitute/mcp-goodnews",
      "source": "github",
      "id": "950810099"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Path to the source directory",
            "isRequired": true,
            "format": "string",
            "value": "<absolute-path-to-cloned-repo>/mcp-goodnews/src/mcp_goodnews",
            "default": "<absolute-path-to-cloned-repo>/mcp-goodnews/src/mcp_goodnews",
            "type": "named",
            "name": "--directory",
            "valueHint": "<absolute-path-to-cloned-repo>/mcp-goodnews/src/mcp_goodnews"
          },
          {
            "description": "Python script to start the server",
            "isRequired": true,
            "format": "string",
            "value": "server.py",
            "default": "server.py",
            "type": "positional",
            "valueHint": "server.py"
          }
        ],
        "environmentVariables": [
          {
            "description": "<newsapi-api-key>",
            "name": "NEWS_API_KEY"
          },
          {
            "description": "<cohere-api-key>",
            "name": "COHERE_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-goodnews",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "91c0fc60-7dc9-4095-a05a-9f816738df67",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "91c0fc60-7dc9-4095-a05a-9f816738df67"
      }
    }
  },
  {
    "name": "io.github.v-3/google-calendar",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/v-3/google-calendar",
      "source": "github",
      "id": "906921955"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "pypi",
        "identifier": "googlecalendar",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "165ef95f-bfb3-4b08-b523-d17748fdfe31",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "165ef95f-bfb3-4b08-b523-d17748fdfe31"
      }
    }
  },
  {
    "name": "io.github.nspady/google-calendar-mcp",
    "description": "MCP integration for Google Calendar to manage events.",
    "status": "active",
    "repository": {
      "url": "https://github.com/nspady/google-calendar-mcp",
      "source": "github",
      "id": "903584784"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.0",
        "registryType": "pypi",
        "identifier": "google-calendar-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6543c44a-7ad6-4f9e-bf7e-9f8f969934bf",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6543c44a-7ad6-4f9e-bf7e-9f8f969934bf"
      }
    }
  },
  {
    "name": "io.github.adenot/mcp-google-search",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/adenot/mcp-google-search",
      "source": "github",
      "id": "925498825"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "registryType": "npm",
        "identifier": "@adenot/mcp-google-search",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d5076249-cb9d-4c5e-ae2e-544779ec1a04",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d5076249-cb9d-4c5e-ae2e-544779ec1a04"
      }
    }
  },
  {
    "name": "io.github.xing5/mcp-google-sheets",
    "description": "This MCP server integrates with your Google Drive and Google Sheets, to enable creating and modifying spreadsheets.",
    "status": "active",
    "repository": {
      "url": "https://github.com/xing5/mcp-google-sheets",
      "source": "github",
      "id": "952831973"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.5.1",
        "packageArguments": [
          {
            "description": "Positional argument for script to run",
            "isRequired": true,
            "format": "string",
            "value": "mcp-google-sheets",
            "default": "mcp-google-sheets",
            "type": "positional",
            "valueHint": "mcp-google-sheets"
          }
        ],
        "environmentVariables": [
          {
            "description": "/full/path/to/cloned/mcp-google-sheets/service-account-key.json",
            "name": "SERVICE_ACCOUNT_PATH"
          },
          {
            "description": "your_shared_folder_id_here",
            "name": "DRIVE_FOLDER_ID"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-google-sheets",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "69ae0fdb-713d-4f8e-bf8e-d214e79fa295",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "69ae0fdb-713d-4f8e-bf8e-d214e79fa295"
      }
    }
  },
  {
    "name": "io.github.rohans2/mcp-google-sheets",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/rohans2/mcp-google-sheets",
      "source": "github",
      "id": "975908174"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.4.1",
        "packageArguments": [
          {
            "description": "Budget Q2",
            "isRequired": true,
            "format": "string",
            "value": "Budget Q2",
            "default": "Budget Q2",
            "type": "positional",
            "valueHint": "Budget Q2"
          }
        ],
        "registryType": "pypi",
        "identifier": "backend",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b1051584-3b09-49af-a97f-a92b47861ed1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b1051584-3b09-49af-a97f-a92b47861ed1"
      }
    }
  },
  {
    "name": "io.github.ubie-oss/mcp-vertexai-search",
    "description": "A MCP server for Vertex AI Search",
    "status": "active",
    "repository": {
      "url": "https://github.com/ubie-oss/mcp-vertexai-search",
      "source": "github",
      "id": "934580342"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "mcp-vertexai-search",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "07ccf835-680a-42b4-bf0b-db28367519ee",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "07ccf835-680a-42b4-bf0b-db28367519ee"
      }
    }
  },
  {
    "name": "io.github.hannesj/mcp-graphql-schema",
    "description": "GraphQL Schema Model Context Protocol Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/hannesj/mcp-graphql-schema",
      "source": "github",
      "id": "947826694"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "packageArguments": [
          {
            "description": "/ABSOLUTE/PATH/TO/schema.graphqls",
            "isRequired": true,
            "format": "string",
            "value": "/ABSOLUTE/PATH/TO/schema.graphqls",
            "default": "/ABSOLUTE/PATH/TO/schema.graphqls",
            "type": "positional",
            "valueHint": "/ABSOLUTE/PATH/TO/schema.graphqls"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-graphql-schema",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7461c9c2-108f-46c1-8f35-6206ec509267",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7461c9c2-108f-46c1-8f35-6206ec509267"
      }
    }
  },
  {
    "name": "io.github.horizondatawave/hdw-mcp-server",
    "description": "A Model Context Protocol (MCP) server that provides comprehensive access to LinkedIn data and functionalities using the HorizonDataWave API, enabling not only data retrieval but also robust management of user accounts.",
    "status": "active",
    "repository": {
      "url": "https://github.com/horizondatawave/hdw-mcp-server",
      "source": "github",
      "id": "947522686"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "environmentVariables": [
          {
            "description": "YOUR_HD_W_ACCESS_TOKEN",
            "name": "HDW_ACCESS_TOKEN"
          },
          {
            "description": "YOUR_HD_W_ACCOUNT_ID",
            "name": "HDW_ACCOUNT_ID"
          }
        ],
        "registryType": "npm",
        "identifier": "@horizondatawave/mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0f4331b9-9229-49c4-b41c-5c254b610daa",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0f4331b9-9229-49c4-b41c-5c254b610daa"
      }
    }
  },
  {
    "name": "io.github.heurist-network/heurist-mesh-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/heurist-network/heurist-mesh-mcp-server",
      "source": "github",
      "id": "948277357"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "mesh-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "97174daf-db12-40ac-bab2-1c4255ce1741",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "97174daf-db12-40ac-bab2-1c4255ce1741"
      }
    }
  },
  {
    "name": "io.github.syucream/holaspirit-mcp-server",
    "description": "A MCP server that accesses to Holaspirit",
    "status": "active",
    "repository": {
      "url": "https://github.com/syucream/holaspirit-mcp-server",
      "source": "github",
      "id": "915876793"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "environmentVariables": [
          {
            "description": "<your token>",
            "name": "HOLASPIRIT_API_TOKEN"
          },
          {
            "description": "<your org id>",
            "name": "HOLASPIRIT_ORGANIZATION_ID"
          }
        ],
        "registryType": "npm",
        "identifier": "holaspirit-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "fffcda50-ddc1-4357-a9bf-b7022f86c582",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "fffcda50-ddc1-4357-a9bf-b7022f86c582"
      }
    }
  },
  {
    "name": "io.github.tevonsb/homeassistant-mcp",
    "description": "A MCP server for Home Assistant",
    "status": "active",
    "repository": {
      "url": "https://github.com/tevonsb/homeassistant-mcp",
      "source": "github",
      "id": "902220777"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "homeassistant-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b87405fe-1aae-4a7a-a4d7-cd0b5f267ad8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b87405fe-1aae-4a7a-a4d7-cd0b5f267ad8"
      }
    }
  },
  {
    "name": "io.github.voska/hass-mcp",
    "description": "Home Assistant MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/voska/hass-mcp",
      "source": "github",
      "id": "949564493"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "--rm",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "-e HA_URL",
            "isRequired": true,
            "format": "string",
            "value": "HA_URL",
            "default": "HA_URL",
            "type": "named",
            "name": "-e",
            "valueHint": "HA_URL"
          },
          {
            "description": "-e HA_TOKEN",
            "isRequired": true,
            "format": "string",
            "value": "HA_TOKEN",
            "default": "HA_TOKEN",
            "type": "named",
            "name": "-e",
            "valueHint": "HA_TOKEN"
          },
          {
            "description": "voska/hass-mcp",
            "isRequired": true,
            "format": "string",
            "value": "voska/hass-mcp",
            "default": "voska/hass-mcp",
            "type": "positional",
            "valueHint": "voska/hass-mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "http://homeassistant.local:8123",
            "name": "HA_URL"
          },
          {
            "description": "YOUR_LONG_LIVED_TOKEN",
            "name": "HA_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "hass-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "67c71178-8632-4d67-abad-c28f6e58c87f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "67c71178-8632-4d67-abad-c28f6e58c87f"
      }
    }
  },
  {
    "name": "io.github.buryhuang/mcp-hubspot",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to interact with HubSpot CRM data, providing built-in vector storage and caching mechanisms help overcome HubSpot API limitations while improving response times.",
    "status": "active",
    "repository": {
      "url": "https://github.com/peakmojo/mcp-hubspot",
      "source": "github",
      "id": "908899631"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "packageArguments": [
          {
            "description": "Attach stdin even if not attached",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i",
            "valueHint": "-i"
          },
          {
            "description": "Remove container after exit",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "Set HUBSPOT_ACCESS_TOKEN environment variable in the container",
            "isRequired": true,
            "format": "string",
            "value": "HUBSPOT_ACCESS_TOKEN=your_token",
            "default": "HUBSPOT_ACCESS_TOKEN=your_token",
            "type": "named",
            "name": "-e",
            "valueHint": "HUBSPOT_ACCESS_TOKEN=your_token"
          },
          {
            "description": "Optional persistent storage for state files",
            "format": "string",
            "value": "/path/to/storage:/storage",
            "default": "/path/to/storage:/storage",
            "type": "named",
            "name": "-v",
            "valueHint": "/path/to/storage:/storage"
          },
          {
            "description": "Docker image to run",
            "isRequired": true,
            "format": "string",
            "value": "buryhuang/mcp-hubspot:latest",
            "default": "buryhuang/mcp-hubspot:latest",
            "type": "positional",
            "valueHint": "buryhuang/mcp-hubspot:latest"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-hubspot",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "aef75131-e237-4b91-a2b8-c0f416d3618f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "aef75131-e237-4b91-a2b8-c0f416d3618f"
      }
    }
  },
  {
    "name": "io.github.evalstate/mcp-hfspace",
    "description": "MCP Server to Use HuggingFace spaces, easy configuration and Claude Desktop mode. ",
    "status": "active",
    "repository": {
      "url": "https://github.com/evalstate/mcp-hfspace",
      "source": "github",
      "id": "898049335"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.5.4",
        "packageArguments": [
          {
            "description": "--work-dir=~/mcp-files/ or x:/temp/mcp-files/",
            "isRequired": true,
            "format": "string",
            "value": "~/mcp-files/ or x:/temp/mcp-files/",
            "default": "~/mcp-files/ or x:/temp/mcp-files/",
            "type": "named",
            "name": "--work-dir",
            "valueHint": "~/mcp-files/ or x:/temp/mcp-files/"
          },
          {
            "description": "--HF_TOKEN=HF_{optional token}",
            "isRequired": true,
            "format": "string",
            "value": "HF_{optional token}",
            "default": "HF_{optional token}",
            "type": "named",
            "name": "--HF_TOKEN",
            "valueHint": "HF_{optional token}"
          },
          {
            "description": "Qwen/Qwen2-72B-Instruct",
            "isRequired": true,
            "format": "string",
            "value": "Qwen/Qwen2-72B-Instruct",
            "default": "Qwen/Qwen2-72B-Instruct",
            "type": "positional",
            "valueHint": "Qwen/Qwen2-72B-Instruct"
          },
          {
            "description": "black-forest-labs/FLUX.1-schnell",
            "isRequired": true,
            "format": "string",
            "value": "black-forest-labs/FLUX.1-schnell",
            "default": "black-forest-labs/FLUX.1-schnell",
            "type": "positional",
            "valueHint": "black-forest-labs/FLUX.1-schnell"
          },
          {
            "description": "space/example/specific-endpint",
            "isRequired": true,
            "format": "string",
            "value": "space/example/specific-endpint",
            "default": "space/example/specific-endpint",
            "type": "positional",
            "valueHint": "space/example/specific-endpint"
          }
        ],
        "registryType": "npm",
        "identifier": "@llmindset/mcp-hfspace",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "532d7690-7a65-470f-81da-2ba3042bee05",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "532d7690-7a65-470f-81da-2ba3042bee05"
      }
    }
  },
  {
    "name": "io.github.mektigboy/server-hyperliquid",
    "description": "MCP Hyperliquid (https://app.hyperliquid.xyz) server",
    "status": "active",
    "repository": {
      "url": "https://github.com/mektigboy/server-hyperliquid",
      "source": "github",
      "id": "943734921"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "registryType": "npm",
        "identifier": "@mektigboy/server-hyperliquid",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0d57edf7-3fbb-42b4-aa9e-b255e7d6f8fa",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0d57edf7-3fbb-42b4-aa9e-b255e7d6f8fa"
      }
    }
  },
  {
    "name": "io.github.iflytek/ifly-workflow-mcp-server",
    "description": "This a simple implementation of an MCP server using iFlytek. It enables calling iFlytek workflows through MCP tools.",
    "status": "active",
    "repository": {
      "url": "https://github.com/iflytek/ifly-workflow-mcp-server",
      "source": "github",
      "id": "953998052"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "--from git+https://github.com/iflytek/ifly-workflow-mcp-server",
            "isRequired": true,
            "format": "string",
            "value": "git+https://github.com/iflytek/ifly-workflow-mcp-server",
            "default": "git+https://github.com/iflytek/ifly-workflow-mcp-server",
            "type": "named",
            "name": "--from",
            "valueHint": "git+https://github.com/iflytek/ifly-workflow-mcp-server"
          },
          {
            "description": "ifly_workflow_mcp_server",
            "isRequired": true,
            "format": "string",
            "value": "ifly_workflow_mcp_server",
            "default": "ifly_workflow_mcp_server",
            "type": "positional",
            "valueHint": "ifly_workflow_mcp_server"
          }
        ],
        "environmentVariables": [
          {
            "description": "/Users/hygao1024/Projects/config.yaml",
            "name": "CONFIG_PATH"
          }
        ],
        "registryType": "oci",
        "identifier": "ifly-workflow-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6a9b532e-61df-4d4d-a898-25d66aa60315",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6a9b532e-61df-4d4d-a898-25d66aa60315"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/image-generation-mcp-server",
    "description": "This MCP server provides image generation capabilities using the Replicate Flux model.",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/Image-Generation-MCP-Server",
      "source": "github",
      "id": "937552153"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "environmentVariables": [
          {
            "description": "your-replicate-api-token",
            "name": "REPLICATE_API_TOKEN"
          },
          {
            "description": "alternative-model-name",
            "name": "MODEL"
          }
        ],
        "registryType": "npm",
        "identifier": "@gongrzhe/image-gen-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5bf6d045-dc83-4b51-858f-eb9c3403087f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5bf6d045-dc83-4b51-858f-eb9c3403087f"
      }
    }
  },
  {
    "name": "io.github.idoru/influxdb-mcp-server",
    "description": "An MCP Server for querying InfluxDB",
    "status": "active",
    "repository": {
      "url": "https://github.com/idoru/influxdb-mcp-server",
      "source": "github",
      "id": "946415795"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "environmentVariables": [
          {
            "description": "your_token",
            "name": "INFLUXDB_TOKEN"
          },
          {
            "description": "http://localhost:8086",
            "name": "INFLUXDB_URL"
          },
          {
            "description": "your_org",
            "name": "INFLUXDB_ORG"
          }
        ],
        "registryType": "npm",
        "identifier": "influxdb-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d78df157-559d-4e87-af1f-0dcbfe703a23",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d78df157-559d-4e87-af1f-0dcbfe703a23"
      }
    }
  },
  {
    "name": "io.github.sergehuber/inoyu-mcp-unomi-server",
    "description": "An implementation of Anthropic's Model Context Protocol for the Apache Unomi CDP",
    "status": "active",
    "repository": {
      "url": "https://github.com/sergehuber/inoyu-mcp-unomi-server",
      "source": "github",
      "id": "896936323"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "npm",
        "identifier": "@inoyu/mcp-unomi-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "601ee7e9-e0db-470e-80e5-f1509cddf6d7",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "601ee7e9-e0db-470e-80e5-f1509cddf6d7"
      }
    }
  },
  {
    "name": "io.github.raoulbia-ai/mcp-server-for-intercom",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/raoulbia-ai/mcp-server-for-intercom",
      "source": "github",
      "id": "945565923"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "your_intercom_api_token",
            "name": "INTERCOM_ACCESS_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-for-intercom",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1967f4e6-f229-4d5f-a648-9bdc67d39da8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1967f4e6-f229-4d5f-a648-9bdc67d39da8"
      }
    }
  },
  {
    "name": "io.github.inditextech/mcp-server-simulator-ios-idb",
    "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators through natural language commands.",
    "status": "active",
    "repository": {
      "url": "https://github.com/InditexTech/mcp-server-simulator-ios-idb",
      "source": "github",
      "id": "950568971"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "registryType": "oci",
        "identifier": "mcp-server-simulator-ios-idb",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b9fa6e10-c6f4-424d-b289-469d49decaaf",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b9fa6e10-c6f4-424d-b289-469d49decaaf"
      }
    }
  },
  {
    "name": "io.github.ferrislucas/iterm-mcp",
    "description": "A Model Context Protocol server that executes commands in the current iTerm session - useful for REPL and CLI assistance",
    "status": "active",
    "repository": {
      "url": "https://github.com/ferrislucas/iterm-mcp",
      "source": "github",
      "id": "914173426"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.2.5",
        "registryType": "npm",
        "identifier": "iterm-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "dcac9b0e-b18c-4570-947c-7a6d351b02df",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "dcac9b0e-b18c-4570-947c-7a6d351b02df"
      }
    }
  },
  {
    "name": "io.github.rishabkoul/iterm-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/rishabkoul/iTerm-MCP-Server",
      "source": "github",
      "id": "953500133"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.4",
        "registryType": "npm",
        "identifier": "iterm_mcp_server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "add3f73d-394b-4b99-b255-8d9d89db84c2",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "add3f73d-394b-4b99-b255-8d9d89db84c2"
      }
    }
  },
  {
    "name": "io.github.qainsights/jmeter-mcp-server",
    "description": "\u2728 JMeter Meets AI Workflows: Introducing the JMeter MCP Server! \ud83e\udd2f ",
    "status": "active",
    "repository": {
      "url": "https://github.com/QAInsights/jmeter-mcp-server",
      "source": "github",
      "id": "956608147"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "jmeter_server.py",
            "default": "jmeter_server.py",
            "type": "positional",
            "valueHint": "jmeter_server.py"
          }
        ],
        "registryType": "oci",
        "identifier": "jmeter-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d0f30dc9-bc11-43f8-9b61-034e2bec78d5",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d0f30dc9-bc11-43f8-9b61-034e2bec78d5"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/json-mcp-server",
    "description": "JSON handling and processing mcp server",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/JSON-MCP-Server",
      "source": "github",
      "id": "907849216"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.3",
        "registryType": "npm",
        "identifier": "@gongrzhe/server-json-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7e73a81a-e914-4cf7-aff2-482d0047e8dd",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7e73a81a-e914-4cf7-aff2-482d0047e8dd"
      }
    }
  },
  {
    "name": "io.github.kukapay/jupiter-mcp",
    "description": "An MCP server for executing token swaps on the Solana blockchain using Jupiter's new Ultra API.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/jupiter-mcp",
      "source": "github",
      "id": "952976727"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "packageArguments": [
          {
            "description": "Jupiter MCP server entry file",
            "isRequired": true,
            "format": "string",
            "value": "path/to/jupiter-mcp/server/index.js",
            "default": "path/to/jupiter-mcp/server/index.js",
            "type": "positional",
            "valueHint": "path/to/jupiter-mcp/server/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "solana rpc url you can access",
            "name": "SOLANA_RPC_URL"
          },
          {
            "description": "your private key",
            "name": "PRIVATE_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "jupiter-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "243a8c0e-4bb7-4932-9d7c-8e8229306295",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "243a8c0e-4bb7-4932-9d7c-8e8229306295"
      }
    }
  },
  {
    "name": "io.github.christophenglisch/keycloak-model-context-protocol",
    "description": "MCP server implementation for Keycloak user management. Enables AI-powered administration of Keycloak users and realms through the Model Context Protocol (MCP). Seamlessly integrates with Claude Desktop and other MCP clients for automated user operations.",
    "status": "active",
    "repository": {
      "url": "https://github.com/ChristophEnglisch/keycloak-model-context-protocol",
      "source": "github",
      "id": "912825504"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.2",
        "packageArguments": [
          {
            "description": "Second positional argument to the command",
            "isRequired": true,
            "format": "string",
            "value": "path/to/dist/index.js",
            "default": "path/to/dist/index.js",
            "type": "positional",
            "valueHint": "path/to/dist/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "http://localhost:8080",
            "name": "KEYCLOAK_URL"
          },
          {
            "description": "admin",
            "name": "KEYCLOAK_ADMIN"
          },
          {
            "description": "admin",
            "name": "KEYCLOAK_ADMIN_PASSWORD"
          }
        ],
        "registryType": "npm",
        "identifier": "keycloak-model-context-protocol",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ac8e4d2b-da97-4a40-934b-1c516b4250fe",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ac8e4d2b-da97-4a40-934b-1c516b4250fe"
      }
    }
  },
  {
    "name": "io.github.kiwamizamurai/mcp-kibela-server",
    "description": "MCP server implementation for Kibela API integration",
    "status": "active",
    "repository": {
      "url": "https://github.com/kiwamizamurai/mcp-kibela-server",
      "source": "github",
      "id": "925867194"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.0",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "--rm",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "-e KIBELA_TEAM",
            "isRequired": true,
            "format": "string",
            "value": "KIBELA_TEAM",
            "default": "KIBELA_TEAM",
            "type": "named",
            "name": "-e",
            "valueHint": "KIBELA_TEAM"
          },
          {
            "description": "-e KIBELA_TOKEN",
            "isRequired": true,
            "format": "string",
            "value": "KIBELA_TOKEN",
            "default": "KIBELA_TOKEN",
            "type": "named",
            "name": "-e",
            "valueHint": "KIBELA_TOKEN"
          },
          {
            "description": "mcp-kibela-server",
            "isRequired": true,
            "format": "string",
            "value": "mcp-kibela-server",
            "default": "mcp-kibela-server",
            "type": "positional"
          }
        ],
        "environmentVariables": [
          {
            "description": "YOUR_TEAM_NAME",
            "name": "KIBELA_TEAM"
          },
          {
            "description": "YOUR_TOKEN",
            "name": "KIBELA_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "@kiwamizamurai/mcp-kibela-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "984ee65a-dec0-4a75-b21b-2efbcd9600bd",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "984ee65a-dec0-4a75-b21b-2efbcd9600bd"
      }
    }
  },
  {
    "name": "io.github.kong/mcp-konnect",
    "description": "A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.",
    "status": "active",
    "repository": {
      "url": "https://github.com/Kong/mcp-konnect",
      "source": "github",
      "id": "944084760"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "kpat_api_key_here",
            "name": "KONNECT_ACCESS_TOKEN"
          },
          {
            "description": "us",
            "name": "KONNECT_REGION"
          }
        ],
        "registryType": "oci",
        "identifier": "kong-konnect-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "86a12728-3ab9-4a69-a447-bcb67957a5f7",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "86a12728-3ab9-4a69-a447-bcb67957a5f7"
      }
    }
  },
  {
    "name": "io.github.flux159/mcp-server-kubernetes",
    "description": "MCP Server for kubernetes management commands",
    "status": "active",
    "repository": {
      "url": "https://github.com/Flux159/mcp-server-kubernetes",
      "source": "github",
      "id": "900130551"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.6.2",
        "registryType": "pypi",
        "identifier": "mcp-server-kubernetes",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6a4d324e-7d12-495c-b72c-fe5803363af1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6a4d324e-7d12-495c-b72c-fe5803363af1"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/langflow-doc-qa-server",
    "description": "A Model Context Protocol server for document Q&A powered by Langflow . It demonstrates core MCP concepts by providing a simple interface to query documents through a Langflow backend.",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/Langflow-DOC-QA-SERVER",
      "source": "github",
      "id": "937522079"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "http://127.0.0.1:7860/api/v1/run/480ec7b3-29d2-4caa-b03b-e74118f35fac",
            "name": "API_ENDPOINT"
          }
        ],
        "registryType": "oci",
        "identifier": "doc-qa-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3c265bda-03e4-4e46-bceb-437a1b02f431",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3c265bda-03e4-4e46-bceb-437a1b02f431"
      }
    }
  },
  {
    "name": "io.github.syucream/lightdash-mcp-server",
    "description": "A MCP(Model Context Protocol) server that accesses to Lightdash",
    "status": "active",
    "repository": {
      "url": "https://github.com/syucream/lightdash-mcp-server",
      "source": "github",
      "id": "910751536"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.11",
        "environmentVariables": [
          {
            "description": "<your PAT>",
            "name": "LIGHTDASH_API_KEY"
          },
          {
            "description": "https://<your base url>",
            "name": "LIGHTDASH_API_URL"
          }
        ],
        "registryType": "npm",
        "identifier": "lightdash-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "17c2c7f2-20f2-424f-8466-b164ed19ddef",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "17c2c7f2-20f2-424f-8466-b164ed19ddef"
      }
    }
  },
  {
    "name": "io.github.tritlo/lsp-mcp",
    "description": "An MCP server that lets you interact with LSP servers",
    "status": "active",
    "repository": {
      "url": "https://github.com/Tritlo/lsp-mcp",
      "source": "github",
      "id": "952869992"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "packageArguments": [
          {
            "description": "debug",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "debug",
            "valueHint": "debug"
          }
        ],
        "registryType": "oci",
        "identifier": "lsp-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "32f876df-1f34-40d7-aed8-0431b32d5091",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "32f876df-1f34-40d7-aed8-0431b32d5091"
      }
    }
  },
  {
    "name": "io.github.tacticlaunch/mcp-linear",
    "description": "MCP server that enables AI assistants to interact with Linear project management system through natural language, allowing users to retrieve, create, and update issues, projects, and teams.",
    "status": "active",
    "repository": {
      "url": "https://github.com/tacticlaunch/mcp-linear",
      "source": "github",
      "id": "953530564"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.9",
        "environmentVariables": [
          {
            "description": "<YOUR_TOKEN>",
            "name": "LINEAR_API_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "@tacticlaunch/mcp-linear",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a4a1013a-5789-4020-9a16-eda6c453aba7",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a4a1013a-5789-4020-9a16-eda6c453aba7"
      }
    }
  },
  {
    "name": "io.github.jerhadf/linear-mcp-server",
    "description": "A server that integrates Linear's project management system with the Model Context Protocol (MCP) to allow LLMs to interact with Linear.",
    "status": "active",
    "repository": {
      "url": "https://github.com/jerhadf/linear-mcp-server",
      "source": "github",
      "id": "898106797"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "your_linear_api_key_here",
            "name": "LINEAR_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "linear-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a0e6ce8a-15eb-4776-b9de-a4bb3c7e4730",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a0e6ce8a-15eb-4776-b9de-a4bb3c7e4730"
      }
    }
  },
  {
    "name": "io.github.run-llama/mcp-server-llamacloud",
    "description": "A MCP server connecting to managed indexes on LlamaCloud",
    "status": "active",
    "repository": {
      "url": "https://github.com/run-llama/mcp-server-llamacloud",
      "source": "github",
      "id": "898328533"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "packageArguments": [
          {
            "description": "Index to be used (first occurrence)",
            "isRequired": true,
            "format": "string",
            "value": "10k-SEC-Tesla",
            "default": "10k-SEC-Tesla",
            "type": "named",
            "name": "--index",
            "valueHint": "10k-SEC-Tesla"
          },
          {
            "description": "Description for index (first occurrence)",
            "isRequired": true,
            "format": "string",
            "value": "10k SEC documents from 2023 for Tesla",
            "default": "10k SEC documents from 2023 for Tesla",
            "type": "named",
            "name": "--description",
            "valueHint": "10k SEC documents from 2023 for Tesla"
          },
          {
            "description": "Index to be used (second occurrence)",
            "isRequired": true,
            "format": "string",
            "value": "10k-SEC-Apple",
            "default": "10k-SEC-Apple",
            "type": "named",
            "name": "--index",
            "valueHint": "10k-SEC-Apple"
          },
          {
            "description": "Description for index (second occurrence)",
            "isRequired": true,
            "format": "string",
            "value": "10k SEC documents from 2023 for Apple",
            "default": "10k SEC documents from 2023 for Apple",
            "type": "named",
            "name": "--description",
            "valueHint": "10k SEC documents from 2023 for Apple"
          }
        ],
        "environmentVariables": [
          {
            "description": "<YOUR_PROJECT_NAME>",
            "name": "LLAMA_CLOUD_PROJECT_NAME"
          },
          {
            "description": "<YOUR_API_KEY>",
            "name": "LLAMA_CLOUD_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@llamaindex/mcp-server-llamacloud",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6cfb4c39-82bb-4b43-94a5-1f50ebd10c71",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6cfb4c39-82bb-4b43-94a5-1f50ebd10c71"
      }
    }
  },
  {
    "name": "io.github.cyberchitta/llm-context.py",
    "description": "Share code with LLMs via Model Context Protocol or clipboard. Rule-based customization enables easy switching between different tasks (like code review and documentation). Includes smart code outlining.",
    "status": "active",
    "repository": {
      "url": "https://github.com/cyberchitta/llm-context.py",
      "source": "github",
      "id": "789457378"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.3.2",
        "packageArguments": [
          {
            "description": "Named argument --from with value llm-context",
            "isRequired": true,
            "format": "string",
            "value": "llm-context",
            "default": "llm-context",
            "type": "named",
            "name": "--from",
            "valueHint": "llm-context"
          }
        ],
        "registryType": "pypi",
        "identifier": "llm-context",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b9f04c6e-0d22-4f17-af83-ccde8b03e4e8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b9f04c6e-0d22-4f17-af83-ccde8b03e4e8"
      }
    }
  },
  {
    "name": "io.github.carterlasalle/mac_messages_mcp",
    "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.",
    "status": "active",
    "repository": {
      "url": "https://github.com/carterlasalle/mac_messages_mcp",
      "source": "github",
      "id": "947677712"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.6.6",
        "registryType": "pypi",
        "identifier": "mac-messages-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e7e51609-0d23-4d96-8063-d136bd993c93",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e7e51609-0d23-4d96-8063-d136bd993c93"
      }
    }
  },
  {
    "name": "io.github.abel9851/mcp-server-mariadb",
    "description": "An mcp server that provides read-only access to MariaDB.",
    "status": "active",
    "repository": {
      "url": "https://github.com/abel9851/mcp-server-mariadb",
      "source": "github",
      "id": "934896960"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "packageArguments": [
          {
            "description": "--directory /YOUR/SOURCE/PATH/mcp-server-mariadb/src/mcp_server_mariadb",
            "isRequired": true,
            "format": "string",
            "value": "/YOUR/SOURCE/PATH/mcp-server-mariadb/src/mcp_server_mariadb",
            "default": "/YOUR/SOURCE/PATH/mcp-server-mariadb/src/mcp_server_mariadb",
            "type": "named",
            "name": "--directory",
            "valueHint": "/YOUR/SOURCE/PATH/mcp-server-mariadb/src/mcp_server_mariadb"
          },
          {
            "description": "server.py",
            "isRequired": true,
            "format": "string",
            "value": "server.py",
            "default": "server.py",
            "type": "positional",
            "valueHint": "server.py"
          }
        ],
        "environmentVariables": [
          {
            "description": "127.0.0.1",
            "name": "MARIADB_HOST"
          },
          {
            "description": "USER",
            "name": "MARIADB_USER"
          },
          {
            "description": "PASSWORD",
            "name": "MARIADB_PASSWORD"
          },
          {
            "description": "DATABASE",
            "name": "MARIADB_DATABASE"
          },
          {
            "description": "3306",
            "name": "MARIADB_PORT"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server-mariadb",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "8197c60c-08c6-4d90-9d63-e64bf48ab6e4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "8197c60c-08c6-4d90-9d63-e64bf48ab6e4"
      }
    }
  },
  {
    "name": "io.github.liuyoshio/mcp-compass",
    "description": "MCP Discovery & Recommendation Service - Find the right MCP server for your needs",
    "status": "active",
    "repository": {
      "url": "https://github.com/liuyoshio/mcp-compass",
      "source": "github",
      "id": "908868990"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.7",
        "registryType": "npm",
        "identifier": "@liuyoshio/mcp-compass",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e4578522-e426-44f4-818c-68784f2a3038",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e4578522-e426-44f4-818c-68784f2a3038"
      }
    }
  },
  {
    "name": "io.github.tesla0225/mcp-create",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/tesla0225/mcp-create",
      "source": "github",
      "id": "945265954"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "npm",
        "identifier": "mcp-create",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "84bda3c9-65ce-45f2-898f-6e370718b43d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "84bda3c9-65ce-45f2-898f-6e370718b43d"
      }
    }
  },
  {
    "name": "io.github.anaisbetts/mcp-installer",
    "description": "An MCP server that installs other MCP servers for you",
    "status": "active",
    "repository": {
      "url": "https://github.com/anaisbetts/mcp-installer",
      "source": "github",
      "id": "894640711"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.5.0",
        "registryType": "npm",
        "identifier": "@anaisbetts/mcp-installer",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9f5885d3-fe18-483d-b7b2-f507b2f37ccb",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9f5885d3-fe18-483d-b7b2-f507b2f37ccb"
      }
    }
  },
  {
    "name": "io.github.strowk/mcp-k8s-go",
    "description": "MCP server connecting to Kubernetes",
    "status": "active",
    "repository": {
      "url": "https://github.com/strowk/mcp-k8s-go",
      "source": "github",
      "id": "896738164"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.5.0",
        "packageArguments": [
          {
            "description": "Mounts ~/.kube/config into container",
            "isRequired": true,
            "format": "string",
            "value": "~/.kube/config:/home/nonroot/.kube/config",
            "default": "~/.kube/config:/home/nonroot/.kube/config",
            "type": "named",
            "name": "-v",
            "valueHint": "~/.kube/config:/home/nonroot/.kube/config"
          },
          {
            "description": "Removes container after exit",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "Docker image to run",
            "isRequired": true,
            "format": "string",
            "value": "mcpk8s/server:latest",
            "default": "mcpk8s/server:latest",
            "type": "positional",
            "valueHint": "mcpk8s/server:latest"
          }
        ],
        "registryType": "oci",
        "identifier": "strowk/mcp-k8s-go",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a59a162f-d811-4344-bf53-606a74bb50c6",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a59a162f-d811-4344-bf53-606a74bb50c6"
      }
    }
  },
  {
    "name": "io.github.sparfenyuk/mcp-proxy",
    "description": "A bridge between Streamable HTTP and stdio MCP transports",
    "status": "active",
    "repository": {
      "url": "https://github.com/sparfenyuk/mcp-proxy",
      "source": "github",
      "id": "908734690"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.6.0",
        "registryType": "pypi",
        "identifier": "mcp-proxy",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5b01e888-7245-46a6-8747-d6f9ca374c43",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5b01e888-7245-46a6-8747-d6f9ca374c43"
      }
    }
  },
  {
    "name": "io.github.lciesielski/mcp-salesforce-example",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/lciesielski/mcp-salesforce-example",
      "source": "github",
      "id": "957204688"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "pypi",
        "identifier": "mcp-salesforce",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3ec2249d-2ed3-45d2-8b52-185abfa918ac",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3ec2249d-2ed3-45d2-8b52-185abfa918ac"
      }
    }
  },
  {
    "name": "io.github.mem0ai/mem0-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/mem0ai/mem0-mcp",
      "source": "github",
      "id": "934683195"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "mem0-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4f189cdd-04a5-47f6-b87b-7d38cc82e625",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4f189cdd-04a5-47f6-b87b-7d38cc82e625"
      }
    }
  },
  {
    "name": "io.github.ariadng/metatrader-mcp-server",
    "description": "Model Context Protocol (MCP) to enable AI LLMs to trade using MetaTrader platform",
    "status": "active",
    "repository": {
      "url": "https://github.com/ariadng/metatrader-mcp-server",
      "source": "github",
      "id": "963828488"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.8",
        "packageArguments": [
          {
            "description": "<YOUR_MT5_LOGIN>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_MT5_LOGIN>",
            "default": "<YOUR_MT5_LOGIN>",
            "type": "named",
            "name": "--login",
            "valueHint": "<YOUR_MT5_LOGIN>"
          },
          {
            "description": "<YOUR_MT5_PASSWORD>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_MT5_PASSWORD>",
            "default": "<YOUR_MT5_PASSWORD>",
            "type": "named",
            "name": "--password",
            "valueHint": "<YOUR_MT5_PASSWORD>"
          },
          {
            "description": "<YOUR_MT5_SERVER>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_MT5_SERVER>",
            "default": "<YOUR_MT5_SERVER>",
            "type": "named",
            "name": "--server",
            "valueHint": "<YOUR_MT5_SERVER>"
          }
        ],
        "registryType": "pypi",
        "identifier": "metatrader-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b3dbb84c-3e48-4cbc-a581-bb9ebe133cb4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b3dbb84c-3e48-4cbc-a581-bb9ebe133cb4"
      }
    }
  },
  {
    "name": "io.github.metricool/mcp-metricool",
    "description": "This is a Multi-Agent Collaboration Protocol (MCP) server for interacting with the Metricool API. It allows AI agents to access and analyze social media metrics and campaign data from your Metricool account.",
    "status": "active",
    "repository": {
      "url": "https://github.com/metricool/mcp-metricool",
      "source": "github",
      "id": "967888435"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.0",
        "environmentVariables": [
          {
            "description": "<METRICOOL_USER_TOKEN>",
            "name": "METRICOOL_USER_TOKEN"
          },
          {
            "description": "<METRICOOL_USER_ID>",
            "name": "METRICOOL_USER_ID"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-metricool",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "091ef217-8e6d-4e06-8cb9-bc5ffe5467b1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "091ef217-8e6d-4e06-8cb9-bc5ffe5467b1"
      }
    }
  },
  {
    "name": "io.github.jexinsam/mssql_mcp_server",
    "description": "A Model Context Protocol (MCP) server facilitating secure interactions with MSSQL databases.",
    "status": "active",
    "repository": {
      "url": "https://github.com/JexinSam/mssql_mcp_server",
      "source": "github",
      "id": "924542723"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "packageArguments": [
          {
            "description": "Directory path for the MCP server",
            "isRequired": true,
            "format": "string",
            "value": "path/to/mssql_mcp_server",
            "default": "path/to/mssql_mcp_server",
            "type": "named",
            "name": "--directory",
            "valueHint": "path/to/mssql_mcp_server"
          },
          {
            "description": "MCP server module name to run",
            "isRequired": true,
            "format": "string",
            "value": "mssql_mcp_server",
            "default": "mssql_mcp_server",
            "type": "positional",
            "valueHint": "mssql_mcp_server"
          }
        ],
        "environmentVariables": [
          {
            "description": "mssql_driver",
            "name": "MSSQL_DRIVER"
          },
          {
            "description": "localhost",
            "name": "MSSQL_HOST"
          },
          {
            "description": "your_username",
            "name": "MSSQL_USER"
          },
          {
            "description": "your_password",
            "name": "MSSQL_PASSWORD"
          },
          {
            "description": "your_database",
            "name": "MSSQL_DATABASE"
          }
        ],
        "registryType": "pypi",
        "identifier": "mssql_mcp_server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "53290776-f4aa-488d-a10f-135a17645b02",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "53290776-f4aa-488d-a10f-135a17645b02"
      }
    }
  },
  {
    "name": "io.github.zcaceres/mcp-markdownify-server",
    "description": "A Model Context Protocol server for converting almost anything to Markdown",
    "status": "active",
    "repository": {
      "url": "https://github.com/zcaceres/markdownify-mcp",
      "source": "github",
      "id": "905450127"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "ocr",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4365781f-28ff-4865-aa7d-909678f6dbb4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4365781f-28ff-4865-aa7d-909678f6dbb4"
      }
    }
  },
  {
    "name": "io.github.jeff-nasseri/mikrotik-mcp",
    "description": "MCP server for Mikrotik",
    "status": "active",
    "repository": {
      "url": "https://github.com/jeff-nasseri/mikrotik-mcp",
      "source": "github",
      "id": "982172059"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.6",
        "packageArguments": [
          {
            "description": "Host to connect to",
            "isRequired": true,
            "format": "string",
            "value": "<HOST>",
            "default": "<HOST>",
            "type": "named",
            "name": "--host",
            "valueHint": "<HOST>"
          },
          {
            "description": "Username for authentication",
            "isRequired": true,
            "format": "string",
            "value": "<USERNAME>",
            "default": "<USERNAME>",
            "type": "named",
            "name": "--username",
            "valueHint": "<USERNAME>"
          },
          {
            "description": "Password for authentication",
            "isRequired": true,
            "format": "string",
            "value": "<PASSWORD>",
            "default": "<PASSWORD>",
            "type": "named",
            "name": "--password",
            "valueHint": "<PASSWORD>"
          },
          {
            "description": "Port to connect to",
            "isRequired": true,
            "format": "string",
            "value": "22",
            "default": "22",
            "type": "named",
            "name": "--port",
            "valueHint": "22"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server-mikrotik",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5ebda83c-f2b3-4b14-ba72-13d940fa940a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5ebda83c-f2b3-4b14-ba72-13d940fa940a"
      }
    }
  },
  {
    "name": "io.github.yuchenssr/mindmap-mcp-server",
    "description": "mindmap, mcp server, artifact",
    "status": "active",
    "repository": {
      "url": "https://github.com/YuChenSSR/mindmap-mcp-server",
      "source": "github",
      "id": "951261036"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "-v /path/to/output/folder:/output",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/output/folder:/output",
            "default": "/path/to/output/folder:/output",
            "type": "named",
            "name": "-v",
            "valueHint": "/path/to/output/folder:/output"
          }
        ],
        "registryType": "oci",
        "identifier": "mindmap-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7f9416dd-34cf-4f0d-bcfb-c87cbee3abf6",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7f9416dd-34cf-4f0d-bcfb-c87cbee3abf6"
      }
    }
  },
  {
    "name": "io.github.mobile-next/mobile-mcp",
    "description": "Model Context Protocol Server for Mobile Automation and Scraping (iOS, Android, Emulators, Simulators and Physical Devices)",
    "status": "active",
    "repository": {
      "url": "https://github.com/mobile-next/mobile-mcp",
      "source": "github",
      "id": "956657893"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.17",
        "registryType": "npm",
        "identifier": "@mobilenext/mobile-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6fefc93f-3f03-47b0-9f42-21d5a5841490",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6fefc93f-3f03-47b0-9f42-21d5a5841490"
      }
    }
  },
  {
    "name": "io.github.kiliczsh/mcp-mongo-server",
    "description": "A Model Context Protocol Server for MongoDB",
    "status": "active",
    "repository": {
      "url": "https://github.com/kiliczsh/mcp-mongo-server",
      "source": "github",
      "id": "898654014"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.3.0",
        "packageArguments": [
          {
            "description": "MongoDB connection string",
            "isRequired": true,
            "format": "string",
            "value": "mongodb://muhammed:kilic@localhost:27017/database",
            "default": "mongodb://muhammed:kilic@localhost:27017/database",
            "type": "positional",
            "valueHint": "mongodb://muhammed:kilic@localhost:27017/database"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-mongo-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b61a2d2e-db6c-47b4-9437-7edc8525d063",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b61a2d2e-db6c-47b4-9437-7edc8525d063"
      }
    }
  },
  {
    "name": "io.github.furey/mongodb-lens",
    "description": "\ud83c\udf43\ud83d\udd0e MongoDB Lens: Full Featured MCP Server for MongoDB Databases",
    "status": "active",
    "repository": {
      "url": "https://github.com/furey/mongodb-lens",
      "source": "github",
      "id": "945309383"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "9.1.4",
        "registryType": "npm",
        "identifier": "mongodb-lens",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b4970e5b-1259-4ff9-a40a-c570f27d0930",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b4970e5b-1259-4ff9-a40a-c570f27d0930"
      }
    }
  },
  {
    "name": "io.github.sakce/mcp-server-monday",
    "description": "MCP Server to interact with Monday.com boards and items",
    "status": "active",
    "repository": {
      "url": "https://github.com/sakce/mcp-server-monday",
      "source": "github",
      "id": "936547010"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.9",
        "registryType": "pypi",
        "identifier": "mcp-server-monday",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ac665c5c-e1de-4686-9012-5ac101186a31",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ac665c5c-e1de-4686-9012-5ac101186a31"
      }
    }
  },
  {
    "name": "io.github.yanmxa/multicluster-mcp-server",
    "description": "The gateway for GenAI systems to interact with multiple Kubernetes clusters through the MCP",
    "status": "active",
    "repository": {
      "url": "https://github.com/yanmxa/multicluster-mcp-server",
      "source": "github",
      "id": "940456029"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "registryType": "pypi",
        "identifier": "multicluster-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "55ba52cd-8e0a-4bcb-9a96-1658f2d713e0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "55ba52cd-8e0a-4bcb-9a96-1658f2d713e0"
      }
    }
  },
  {
    "name": "io.github.yuchenssr/multi-ai-advisor-mcp",
    "description": "council of models for decision",
    "status": "active",
    "repository": {
      "url": "https://github.com/YuChenSSR/multi-ai-advisor-mcp",
      "source": "github",
      "id": "954021177"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "oci",
        "identifier": "multi-model-advisor",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "abcce212-b3e1-4741-a8b3-86c95c276fb1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "abcce212-b3e1-4741-a8b3-86c95c276fb1"
      }
    }
  },
  {
    "name": "io.github.benborla/mcp-server-mysql",
    "description": "A Model Context Protocol server that provides read-only access to MySQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.",
    "status": "active",
    "repository": {
      "url": "https://github.com/benborla/mcp-server-mysql",
      "source": "github",
      "id": "900806525"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "2.0.0",
        "packageArguments": [
          {
            "description": "Path to the MCP server MySQL entry point.",
            "isRequired": true,
            "format": "string",
            "value": "/full/path/to/mcp-server-mysql/dist/index.js",
            "default": "/full/path/to/mcp-server-mysql/dist/index.js",
            "type": "positional",
            "valueHint": "/full/path/to/mcp-server-mysql/dist/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "127.0.0.1",
            "name": "MYSQL_HOST"
          },
          {
            "description": "3306",
            "name": "MYSQL_PORT"
          },
          {
            "description": "root",
            "name": "MYSQL_USER"
          },
          {
            "description": "your_password",
            "name": "MYSQL_PASS"
          },
          {
            "description": "your_database",
            "name": "MYSQL_DB"
          }
        ],
        "registryType": "npm",
        "identifier": "@benborla29/mcp-server-mysql",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "22fbb4c3-d5fd-4191-af7a-c78686cc6123",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "22fbb4c3-d5fd-4191-af7a-c78686cc6123"
      }
    }
  },
  {
    "name": "io.github.designcomputer/mysql_mcp_server",
    "description": "A Model Context Protocol (MCP) server that enables secure interaction with MySQL databases",
    "status": "active",
    "repository": {
      "url": "https://github.com/designcomputer/mysql_mcp_server",
      "source": "github",
      "id": "898128804"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.2",
        "packageArguments": [
          {
            "description": "Specify the origin of the package",
            "isRequired": true,
            "format": "string",
            "value": "mysql-mcp-server",
            "default": "mysql-mcp-server",
            "type": "named",
            "name": "--from",
            "valueHint": "mysql-mcp-server"
          },
          {
            "description": "Name of the MCP server executable",
            "isRequired": true,
            "format": "string",
            "value": "mysql_mcp_server",
            "default": "mysql_mcp_server",
            "type": "positional",
            "valueHint": "mysql_mcp_server"
          }
        ],
        "environmentVariables": [
          {
            "description": "localhost",
            "name": "MYSQL_HOST"
          },
          {
            "description": "3306",
            "name": "MYSQL_PORT"
          },
          {
            "description": "your_username",
            "name": "MYSQL_USER"
          },
          {
            "description": "your_password",
            "name": "MYSQL_PASSWORD"
          },
          {
            "description": "your_database",
            "name": "MYSQL_DATABASE"
          }
        ],
        "registryType": "pypi",
        "identifier": "mysql_mcp_server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "56577627-939e-4f31-8c96-654586538eb5",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "56577627-939e-4f31-8c96-654586538eb5"
      }
    }
  },
  {
    "name": "io.github.leonardsellem/n8n-mcp-server",
    "description": "MCP server that provides tools and resources for interacting with n8n API",
    "status": "active",
    "repository": {
      "url": "https://github.com/leonardsellem/n8n-mcp-server",
      "source": "github",
      "id": "947387660"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Positional argument providing absolute path to the built index.js file",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/your/cloned/n8n-mcp-server/build/index.js",
            "default": "/path/to/your/cloned/n8n-mcp-server/build/index.js",
            "type": "positional",
            "valueHint": "/path/to/your/cloned/n8n-mcp-server/build/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "http://your-n8n-instance:5678/api/v1",
            "name": "N8N_API_URL"
          },
          {
            "description": "YOUR_N8N_API_KEY",
            "name": "N8N_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "n8n-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "309e2634-8163-47c9-951e-1cfec85e701b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "309e2634-8163-47c9-951e-1cfec85e701b"
      }
    }
  },
  {
    "name": "io.github.programcomputer/nasa-mcp-server",
    "description": "A Model Context Protocol (MCP) server for NASA APIs, providing a standardized interface for AI models to interact with NASA's vast array of data sources.",
    "status": "active",
    "repository": {
      "url": "https://github.com/ProgramComputer/NASA-MCP-server",
      "source": "github",
      "id": "943596518"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.12",
        "packageArguments": [
          {
            "description": "Comma-separated list",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "T2M,PRECTOTCORR,WS10M",
            "valueHint": "T2M,PRECTOTCORR,WS10M"
          },
          {
            "description": "Community identifier",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "re",
            "valueHint": "re"
          },
          {
            "description": "Latitude",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "40.7128",
            "valueHint": "40.7128"
          },
          {
            "description": "Longitude",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-74.0060",
            "valueHint": "-74.0060"
          },
          {
            "description": "Start date (YYYYMMDD)",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "20220101",
            "valueHint": "20220101"
          },
          {
            "description": "End date (YYYYMMDD)",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "20220107",
            "valueHint": "20220107"
          }
        ],
        "registryType": "npm",
        "identifier": "@programcomputer/nasa-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6a44b030-46c7-4390-adf2-2a75652dee27",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6a44b030-46c7-4390-adf2-2a75652dee27"
      }
    }
  },
  {
    "name": "io.github.stefanoamorelli/nasdaq-data-link-mcp",
    "description": "A Nasdaq Data Link MCP (Model Context Protocol) Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/stefanoamorelli/nasdaq-data-link-mcp",
      "source": "github",
      "id": "957599131"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "packageArguments": [
          {
            "description": "investment_company_type argument",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "investment_company_type",
            "valueHint": "N-1A"
          }
        ],
        "registryType": "pypi",
        "identifier": "nasdaq-data-link-mcp-os",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9326c18e-b2fb-4012-a170-cdd5753f0b1e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9326c18e-b2fb-4012-a170-cdd5753f0b1e"
      }
    }
  },
  {
    "name": "io.github.kyrietangsheng/mcp-server-nationalparks",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/KyrieTangSheng/mcp-server-nationalparks",
      "source": "github",
      "id": "951713109"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "YOUR_NPS_API_KEY",
            "name": "NPS_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-server-nationalparks",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "010904ec-6e39-4bdc-878a-75a6e79d0500",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "010904ec-6e39-4bdc-878a-75a6e79d0500"
      }
    }
  },
  {
    "name": "io.github.pfldy2850/py-mcp-naver",
    "description": "python MCP NAVER",
    "status": "active",
    "repository": {
      "url": "https://github.com/pfldy2850/py-mcp-naver",
      "source": "github",
      "id": "951863489"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.5",
        "registryType": "pypi",
        "identifier": "mcp-naver",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f10c234b-cf64-4dc2-9e38-5f57e53aeecb",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f10c234b-cf64-4dc2-9e38-5f57e53aeecb"
      }
    }
  },
  {
    "name": "io.github.taidgh-robinson/nba-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/Taidgh-Robinson/nba-mcp-server",
      "source": "github",
      "id": "971505657"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "mcp-server-nba",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9c7c309a-fb3c-4099-b461-0ca725c9083b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9c7c309a-fb3c-4099-b461-0ca725c9083b"
      }
    }
  },
  {
    "name": "io.github.r-huijts/ns-mcp-server",
    "description": "A Model Context Protocol (MCP) server that provides access to NS (Dutch Railways) travel information through Claude AI. This server enables Claude to fetch real-time train travel information and disruptions using the official Dutch NS API.",
    "status": "active",
    "repository": {
      "url": "https://github.com/r-huijts/ns-mcp-server",
      "source": "github",
      "id": "898429869"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.6",
        "packageArguments": [
          {
            "description": "/path/to/ns-server/build/index.js",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/ns-server/build/index.js",
            "default": "/path/to/ns-server/build/index.js",
            "type": "positional",
            "valueHint": "/path/to/ns-server/build/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "NS_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "ns-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "afcff9a2-a4ed-457f-80fb-8bdd1948771a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "afcff9a2-a4ed-457f-80fb-8bdd1948771a"
      }
    }
  },
  {
    "name": "io.github.da-okazaki/mcp-neo4j-server",
    "description": "mcp-neo4j-server",
    "status": "active",
    "repository": {
      "url": "https://github.com/da-okazaki/mcp-neo4j-server",
      "source": "github",
      "id": "912380178"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "environmentVariables": [
          {
            "description": "bolt://localhost:7687",
            "name": "NEO4J_URI"
          },
          {
            "description": "neo4j",
            "name": "NEO4J_USERNAME"
          },
          {
            "description": "your-password",
            "name": "NEO4J_PASSWORD"
          }
        ],
        "registryType": "npm",
        "identifier": "@alanse/mcp-neo4j-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b4c38c39-7381-49fa-b7b4-75e2604ed93d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b4c38c39-7381-49fa-b7b4-75e2604ed93d"
      }
    }
  },
  {
    "name": "io.github.bigcodegen/mcp-neovim-server",
    "description": "Control Neovim using Model Context Protocol (MCP) and the official neovim/node-client JavaScript library",
    "status": "active",
    "repository": {
      "url": "https://github.com/bigcodegen/mcp-neovim-server",
      "source": "github",
      "id": "907120691"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.2",
        "environmentVariables": [
          {
            "description": "true",
            "name": "ALLOW_SHELL_COMMANDS"
          },
          {
            "description": "/tmp/nvim",
            "name": "NVIM_SOCKET_PATH"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-neovim-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d9d7e246-d3f4-4214-aa79-fe1981c73c2e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d9d7e246-d3f4-4214-aa79-fe1981c73c2e"
      }
    }
  },
  {
    "name": "io.github.kocierik/mcp-nomad",
    "description": " A nomad MCP Server (modelcontextprotocol) ",
    "status": "active",
    "repository": {
      "url": "https://github.com/kocierik/mcp-nomad",
      "source": "github",
      "id": "969499680"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.5",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "--rm",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "-e NOMAD_ADDR=http://172.17.0.1:4646",
            "isRequired": true,
            "format": "string",
            "value": "NOMAD_ADDR=http://172.17.0.1:4646",
            "default": "NOMAD_ADDR=http://172.17.0.1:4646",
            "type": "named",
            "name": "-e",
            "valueHint": "NOMAD_ADDR=http://172.17.0.1:4646"
          },
          {
            "description": "-e NOMAD_TOKEN=secret-token-acl-optional",
            "isRequired": true,
            "format": "string",
            "value": "NOMAD_TOKEN=secret-token-acl-optional",
            "default": "NOMAD_TOKEN=secret-token-acl-optional",
            "type": "named",
            "name": "-e",
            "valueHint": "NOMAD_TOKEN=secret-token-acl-optional"
          },
          {
            "description": "kocierik/mcpnomad-server:latest",
            "isRequired": true,
            "format": "string",
            "value": "kocierik/mcpnomad-server:latest",
            "default": "kocierik/mcpnomad-server:latest",
            "type": "positional",
            "valueHint": "kocierik/mcpnomad-server:latest"
          }
        ],
        "registryType": "oci",
        "identifier": "kocierik/mcp-nomad",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6ebc1c16-ea8d-44eb-958c-74f3f0531058",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6ebc1c16-ea8d-44eb-958c-74f3f0531058"
      }
    }
  },
  {
    "name": "io.github.suekou/mcp-notion-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/suekou/mcp-notion-server",
      "source": "github",
      "id": "896417211"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.2.4",
        "packageArguments": [
          {
            "description": "your-built-file-path",
            "isRequired": true,
            "format": "string",
            "value": "your-built-file-path",
            "default": "your-built-file-path",
            "type": "positional",
            "valueHint": "your-built-file-path"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-integration-token",
            "name": "NOTION_API_TOKEN"
          },
          {
            "description": "true",
            "name": "NOTION_MARKDOWN_CONVERSION"
          }
        ],
        "registryType": "npm",
        "identifier": "@suekou/mcp-notion-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e9a5215c-6485-462f-b086-6e97f0466b30",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e9a5215c-6485-462f-b086-6e97f0466b30"
      }
    }
  },
  {
    "name": "io.github.v-3/notion-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/v-3/notion-server",
      "source": "github",
      "id": "904087475"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "your_notion_api_key_here",
            "name": "NOTION_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "notionmcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1455eb68-3cf0-4cc3-a8ee-fd729a00acd3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1455eb68-3cf0-4cc3-a8ee-fd729a00acd3"
      }
    }
  },
  {
    "name": "io.github.teddyzxcv/ntfy-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/teddyzxcv/ntfy-mcp",
      "source": "github",
      "id": "950853704"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Path to the main entry point for ntfy-mcp",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/ntfy-mcp/build/index.js",
            "default": "/path/to/ntfy-mcp/build/index.js",
            "type": "positional",
            "valueHint": "/path/to/ntfy-mcp/build/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "<your topic name>",
            "name": "NTFY_TOPIC"
          }
        ],
        "registryType": "npm",
        "identifier": "ntfy-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "dd3f5299-5869-43ec-89a8-77e25e6a157e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "dd3f5299-5869-43ec-89a8-77e25e6a157e"
      }
    }
  },
  {
    "name": "io.github.gitmotion/ntfy-me-mcp",
    "description": "An ntfy MCP server for sending/fetching ntfy notifications to any/self-hosted ntfy.sh server from AI Agents \ud83d\udce4 (supports secure token auth & more - use with npx or docker!)",
    "status": "active",
    "repository": {
      "url": "https://github.com/gitmotion/ntfy-me-mcp",
      "source": "github",
      "id": "964136538"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.3.3",
        "environmentVariables": [
          {
            "description": "your-topic-name",
            "name": "NTFY_TOPIC"
          }
        ],
        "registryType": "npm",
        "identifier": "ntfy-me-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ba368d1c-d64d-4ecd-9bde-72304d69c4d1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ba368d1c-d64d-4ecd-9bde-72304d69c4d1"
      }
    }
  },
  {
    "name": "io.github.calclavia/mcp-obsidian",
    "description": "A connector for Claude Desktop to read and search an Obsidian vault.",
    "status": "active",
    "repository": {
      "url": "https://github.com/smithery-ai/mcp-obsidian",
      "source": "github",
      "id": "895882011"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Path to Obsidian vault",
            "isRequired": true,
            "format": "string",
            "value": "${input:vaultPath}",
            "default": "${input:vaultPath}",
            "type": "positional",
            "valueHint": "${input:vaultPath}"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-obsidian",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ab58cca1-94ad-42d8-be13-980556ac552b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ab58cca1-94ad-42d8-be13-980556ac552b"
      }
    }
  },
  {
    "name": "io.github.stevenstavrakis/obsidian-mcp",
    "description": "A simple MCP server for Obsidian",
    "status": "active",
    "repository": {
      "url": "https://github.com/StevenStavrakis/obsidian-mcp",
      "source": "github",
      "id": "906827503"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.6",
        "packageArguments": [
          {
            "description": "/path/to/your/vault",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/your/vault",
            "default": "/path/to/your/vault",
            "type": "positional",
            "valueHint": "/path/to/your/vault"
          },
          {
            "description": "/path/to/your/vault2",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/your/vault2",
            "default": "/path/to/your/vault2",
            "type": "positional",
            "valueHint": "/path/to/your/vault2"
          }
        ],
        "registryType": "pypi",
        "identifier": "obsidian-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "752ef535-2865-4d95-bcc5-647a7be83f74",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "752ef535-2865-4d95-bcc5-647a7be83f74"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/office-powerpoint-mcp-server",
    "description": "A MCP (Model Context Protocol) server for PowerPoint manipulation using python-pptx. This server provides tools for creating, editing, and manipulating PowerPoint presentations through the MCP protocol.",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/Office-PowerPoint-MCP-Server",
      "source": "github",
      "id": "954558050"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Named argument --from with value office-powerpoint-mcp-server",
            "isRequired": true,
            "format": "string",
            "value": "office-powerpoint-mcp-server",
            "default": "office-powerpoint-mcp-server",
            "type": "named",
            "name": "--from",
            "valueHint": "office-powerpoint-mcp-server"
          },
          {
            "description": "Positional argument ppt_mcp_server",
            "isRequired": true,
            "format": "string",
            "value": "ppt_mcp_server",
            "default": "ppt_mcp_server",
            "type": "positional",
            "valueHint": "ppt_mcp_server"
          }
        ],
        "registryType": "pypi",
        "identifier": "office-powerpoint-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d3194c4f-b73a-40b2-9170-0e6e8ee713c0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d3194c4f-b73a-40b2-9170-0e6e8ee713c0"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/office-word-mcp-server",
    "description": "A Model Context Protocol (MCP) server for creating, reading, and manipulating Microsoft Word documents. This server enables AI assistants to work with Word documents through a standardized interface, providing rich document editing capabilities.",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/Office-Word-MCP-Server",
      "source": "github",
      "id": "954434732"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.3",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "word_mcp_server",
            "default": "word_mcp_server",
            "type": "positional",
            "valueHint": "word_mcp_server"
          }
        ],
        "registryType": "pypi",
        "identifier": "office-word-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4d3dba83-9775-4b5a-9de7-f18f7263460c",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4d3dba83-9775-4b5a-9de7-f18f7263460c"
      }
    }
  },
  {
    "name": "io.github.kapilduraphe/okta-mcp-server",
    "description": "Okta MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/kapilduraphe/okta-mcp-server",
      "source": "github",
      "id": "932923739"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "https://your-domain.okta.com",
            "name": "OKTA_ORG_URL"
          },
          {
            "description": "your-api-token",
            "name": "OKTA_API_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "okta-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "618671cb-8783-47c7-a81c-164f5f9e2cc1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "618671cb-8783-47c7-a81c-164f5f9e2cc1"
      }
    }
  },
  {
    "name": "io.github.conechoai/openai-websearch-mcp",
    "description": "openai websearch tool as mcp server",
    "status": "active",
    "repository": {
      "url": "https://github.com/ConechoAI/openai-websearch-mcp",
      "source": "github",
      "id": "947082641"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.0",
        "packageArguments": [
          {
            "description": "Run Python module openai_websearch_mcp",
            "isRequired": true,
            "format": "string",
            "value": "openai_websearch_mcp",
            "default": "openai_websearch_mcp",
            "type": "named",
            "name": "-m",
            "valueHint": "openai_websearch_mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-api-key-here",
            "name": "OPENAI_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "openai-websearch-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "531956a8-df6a-4edd-bb72-36c284c1d7c8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "531956a8-df6a-4edd-bb72-36c284c1d7c8"
      }
    }
  },
  {
    "name": "io.github.snaggle-ai/openapi-mcp-server",
    "description": "Allow AI to wade through complex OpenAPIs using Simple Language",
    "status": "active",
    "repository": {
      "url": "https://github.com/janwilmake/openapi-mcp-server",
      "source": "github",
      "id": "900049352"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "2.0.3",
        "registryType": "pypi",
        "identifier": "openapi-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "47685d63-d574-4311-b823-c0ddc29d8514",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "47685d63-d574-4311-b823-c0ddc29d8514"
      }
    }
  },
  {
    "name": "io.github.baryhuang/mcp-server-any-openapi",
    "description": "A MCP server that enables Claude to discover and call any API endpoint through semantic search. Intelligently chunks OpenAPI specifications to handle large API documentation, with built-in request execution capabilities. Perfect for integrating private APIs with Claude Desktop.",
    "status": "active",
    "repository": {
      "url": "https://github.com/baryhuang/mcp-server-any-openapi",
      "source": "github",
      "id": "929659341"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Run in interactive mode",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "Automatically remove the container when it exits",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "Set environment variable OPENAPI_JSON_DOCS_URL",
            "isRequired": true,
            "format": "string",
            "value": "OPENAPI_JSON_DOCS_URL=https://api.example.com/openapi.json",
            "default": "OPENAPI_JSON_DOCS_URL=https://api.example.com/openapi.json",
            "type": "named",
            "name": "-e",
            "valueHint": "OPENAPI_JSON_DOCS_URL=https://api.example.com/openapi.json"
          },
          {
            "description": "Set environment variable MCP_API_PREFIX",
            "isRequired": true,
            "format": "string",
            "value": "MCP_API_PREFIX=finance",
            "default": "MCP_API_PREFIX=finance",
            "type": "named",
            "name": "-e",
            "valueHint": "MCP_API_PREFIX=finance"
          },
          {
            "description": "Set environment variable GLOBAL_TOOL_PROMPT",
            "isRequired": true,
            "format": "string",
            "value": "GLOBAL_TOOL_PROMPT='Access to insights apis for ACME Financial Services abc.com .",
            "default": "GLOBAL_TOOL_PROMPT='Access to insights apis for ACME Financial Services abc.com .",
            "type": "named",
            "name": "-e",
            "valueHint": "GLOBAL_TOOL_PROMPT='Access to insights apis for ACME Financial Services abc.com ."
          },
          {
            "description": "Docker image name and tag",
            "isRequired": true,
            "format": "string",
            "value": "buryhuang/mcp-server-any-openapi:latest",
            "default": "buryhuang/mcp-server-any-openapi:latest",
            "type": "positional",
            "valueHint": "buryhuang/mcp-server-any-openapi:latest"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-any-openapi",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c52271b3-e48e-4896-b5a2-2ff93189b339",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c52271b3-e48e-4896-b5a2-2ff93189b339"
      }
    }
  },
  {
    "name": "io.github.hannesj/mcp-openapi-schema",
    "description": "OpenAPI Schema Model Context Protocol Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/hannesj/mcp-openapi-schema",
      "source": "github",
      "id": "947937745"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "packageArguments": [
          {
            "description": "The OpenAPI specification file to be used",
            "isRequired": true,
            "format": "string",
            "value": "/ABSOLUTE/PATH/TO/openapi.yaml",
            "default": "/ABSOLUTE/PATH/TO/openapi.yaml",
            "type": "positional",
            "valueHint": "/ABSOLUTE/PATH/TO/openapi.yaml"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-openapi-schema",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7d68a487-bc40-4783-a2eb-1c9107fc26a4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7d68a487-bc40-4783-a2eb-1c9107fc26a4"
      }
    }
  },
  {
    "name": "io.github.spathodea-network/opencti-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/Spathodea-Network/opencti-mcp",
      "source": "github",
      "id": "909539706"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Positional argument for package execution",
            "isRequired": true,
            "format": "string",
            "value": "path/to/opencti-server/build/index.js",
            "default": "path/to/opencti-server/build/index.js",
            "type": "positional",
            "valueHint": "path/to/opencti-server/build/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "${OPENCTI_URL}",
            "name": "OPENCTI_URL"
          },
          {
            "description": "${OPENCTI_TOKEN}",
            "name": "OPENCTI_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "opencti-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c01d9a66-7a37-4f66-870d-38829c0047ea",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c01d9a66-7a37-4f66-870d-38829c0047ea"
      }
    }
  },
  {
    "name": "io.github.asusevski/opendota-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/asusevski/opendota-mcp-server",
      "source": "github",
      "id": "941719334"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "packageArguments": [
          {
            "description": "bash",
            "isRequired": true,
            "format": "string",
            "value": "bash",
            "default": "bash",
            "type": "positional",
            "valueHint": "bash"
          },
          {
            "description": "-c",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-c",
            "valueHint": "-c"
          },
          {
            "description": "cd ~/opendota-mcp-server && source .venv/bin/activate && python src/opendota_server/server.py",
            "isRequired": true,
            "format": "string",
            "value": "cd ~/opendota-mcp-server && source .venv/bin/activate && python src/opendota_server/server.py",
            "default": "cd ~/opendota-mcp-server && source .venv/bin/activate && python src/opendota_server/server.py",
            "type": "positional",
            "valueHint": "cd ~/opendota-mcp-server && source .venv/bin/activate && python src/opendota_server/server.py"
          }
        ],
        "registryType": "oci",
        "identifier": "opendota-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a81b1d9e-c1a5-4848-a3f5-350ea2872ae3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a81b1d9e-c1a5-4848-a3f5-350ea2872ae3"
      }
    }
  },
  {
    "name": "io.github.shanejonas/openrpc-mpc-server",
    "description": "A Model Context Protocol (MCP) server that provides JSON-RPC functionality through OpenRPC.",
    "status": "active",
    "repository": {
      "url": "https://github.com/shanejonas/openrpc-mpc-server",
      "source": "github",
      "id": "897678596"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "registryType": "npm",
        "identifier": "openrpc-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9c804dd3-4283-4a5b-a34e-6f1c7065b671",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9c804dd3-4283-4a5b-a34e-6f1c7065b671"
      }
    }
  },
  {
    "name": "io.github.open-strategy-partners/osp_marketing_tools",
    "description": "A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' core writing and product marketing techniques.",
    "status": "active",
    "repository": {
      "url": "https://github.com/open-strategy-partners/osp_marketing_tools",
      "source": "github",
      "id": "917730483"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Specifies the source repository",
            "isRequired": true,
            "format": "string",
            "value": "git+https://github.com/open-strategy-partners/osp_marketing_tools@main",
            "default": "git+https://github.com/open-strategy-partners/osp_marketing_tools@main",
            "type": "named",
            "name": "--from",
            "valueHint": "git+https://github.com/open-strategy-partners/osp_marketing_tools@main"
          }
        ],
        "registryType": "oci",
        "identifier": "osp-marketing-tools",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0d8b287c-6023-4809-a5ba-963c5612efa2",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0d8b287c-6023-4809-a5ba-963c5612efa2"
      }
    }
  },
  {
    "name": "io.github.vortiago/mcp-outline",
    "description": "A Model Context Protocol (MCP) server enabling AI assistants to interact with Outline documentation services.",
    "status": "active",
    "repository": {
      "url": "https://github.com/Vortiago/mcp-outline",
      "source": "github",
      "id": "953087223"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.2",
        "registryType": "pypi",
        "identifier": "mcp-outline",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "d6801d4f-2f27-4e67-8b70-10754b48ff0d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "d6801d4f-2f27-4e67-8b70-10754b48ff0d"
      }
    }
  },
  {
    "name": "io.github.kukapay/pancakeswap-poolspy-mcp",
    "description": "An MCP server that tracks newly created liquidity pools on Pancake Swap",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/pancakeswap-poolspy-mcp",
      "source": "github",
      "id": "949792903"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Specify directory to run from",
            "isRequired": true,
            "format": "string",
            "value": "path/to/pancakeswap-poolspy-mcp",
            "default": "path/to/pancakeswap-poolspy-mcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "path/to/pancakeswap-poolspy-mcp"
          },
          {
            "description": "Python script to execute",
            "isRequired": true,
            "format": "string",
            "value": "main.py",
            "default": "main.py",
            "type": "positional",
            "valueHint": "main.py"
          }
        ],
        "environmentVariables": [
          {
            "description": "your api key from The Graph",
            "name": "THEGRAPH_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "pancakeswap-poolspy-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "925a5d1d-ab12-44bd-9297-a20bdde6ec68",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "925a5d1d-ab12-44bd-9297-a20bdde6ec68"
      }
    }
  },
  {
    "name": "io.github.vivekvells/mcp-pandoc",
    "description": "MCP server for document format conversion using pandoc.",
    "status": "active",
    "repository": {
      "url": "https://github.com/vivekVells/mcp-pandoc",
      "source": "github",
      "id": "900427746"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.3.3",
        "registryType": "pypi",
        "identifier": "mcp-pandoc",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a0f6fd01-5eb2-4aca-b4a6-c67eb6e0c5da",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a0f6fd01-5eb2-4aca-b4a6-c67eb6e0c5da"
      }
    }
  },
  {
    "name": "io.github.sv/mcp-paradex-py",
    "description": "Connect AI agents to the Paradex trading platform. Retrieve market data, manage accounts, and execute trades seamlessly. Enhance your trading experience with automated tools and real-time insights.",
    "status": "active",
    "repository": {
      "url": "https://github.com/sv/mcp-paradex-py",
      "source": "github",
      "id": "944258239"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "--from mcpdoc",
            "isRequired": true,
            "format": "string",
            "value": "mcpdoc",
            "default": "mcpdoc",
            "type": "named",
            "name": "--from",
            "valueHint": "mcpdoc"
          },
          {
            "description": "mcpdoc",
            "isRequired": true,
            "format": "string",
            "value": "mcpdoc",
            "default": "mcpdoc",
            "type": "positional",
            "valueHint": "mcpdoc"
          },
          {
            "description": "--urls Paradex:https://docs.paradex.trade/llms.txt",
            "isRequired": true,
            "format": "string",
            "value": "Paradex:https://docs.paradex.trade/llms.txt",
            "default": "Paradex:https://docs.paradex.trade/llms.txt",
            "type": "named",
            "name": "--urls",
            "valueHint": "Paradex:https://docs.paradex.trade/llms.txt"
          },
          {
            "description": "--transport stdio",
            "isRequired": true,
            "format": "string",
            "value": "stdio",
            "default": "stdio",
            "type": "named",
            "name": "--transport",
            "valueHint": "stdio"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-paradex",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "038a3024-c319-4a07-bd7f-9cf699cfebf1",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "038a3024-c319-4a07-bd7f-9cf699cfebf1"
      }
    }
  },
  {
    "name": "io.github.hungryrobot1/mcp-pif",
    "description": "A MCP implementation of the personal intelligence framework (PIF)",
    "status": "active",
    "repository": {
      "url": "https://github.com/hungryrobot1/MCP-PIF",
      "source": "github",
      "id": "923899029"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "oci",
        "identifier": "mcp-pif",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "dd586d17-4a7e-4658-92df-8cf6b58bff4d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "dd586d17-4a7e-4658-92df-8cf6b58bff4d"
      }
    }
  },
  {
    "name": "io.github.sirmews/mcp-pinecone",
    "description": "Model Context Protocol server to allow for reading and writing from Pinecone. Rudimentary RAG",
    "status": "active",
    "repository": {
      "url": "https://github.com/sirmews/mcp-pinecone",
      "source": "github",
      "id": "900184645"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.8",
        "packageArguments": [
          {
            "description": "Index name for the Pinecone database.",
            "isRequired": true,
            "format": "string",
            "value": "{your-index-name}",
            "default": "{your-index-name}",
            "type": "named",
            "name": "--index-name",
            "valueHint": "{your-index-name}"
          },
          {
            "description": "API key for authenticating with Pinecone.",
            "isRequired": true,
            "format": "string",
            "value": "{your-secret-api-key}",
            "default": "{your-secret-api-key}",
            "type": "named",
            "name": "--api-key",
            "valueHint": "{your-secret-api-key}"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-pinecone",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "23b81af0-3e03-47b8-a310-c9b07bebd547",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "23b81af0-3e03-47b8-a310-c9b07bebd547"
      }
    }
  },
  {
    "name": "io.github.felores/placid-mcp-server",
    "description": "Generate image and video creatives using Placid.app templates in MCP compatible hosts",
    "status": "active",
    "repository": {
      "url": "https://github.com/felores/placid-mcp-server",
      "source": "github",
      "id": "915853970"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.7.0",
        "registryType": "npm",
        "identifier": "@felores/placid-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "cfe44c73-8b61-48c9-9d7f-b28e98d23b5b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "cfe44c73-8b61-48c9-9d7f-b28e98d23b5b"
      }
    }
  },
  {
    "name": "io.github.kelvin6365/plane-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/kelvin6365/plane-mcp-server",
      "source": "github",
      "id": "953147035"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "plane-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "dd8073c5-c7c4-42c1-a0d7-cad8089de750",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "dd8073c5-c7c4-42c1-a0d7-cad8089de750"
      }
    }
  },
  {
    "name": "io.github.executeautomation/mcp-playwright",
    "description": "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More \ud83d\udd0c",
    "status": "active",
    "repository": {
      "url": "https://github.com/executeautomation/mcp-playwright",
      "source": "github",
      "id": "898077246"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.5",
        "registryType": "npm",
        "identifier": "@executeautomation/playwright-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "328e3069-005e-4179-add1-c13b18db4102",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "328e3069-005e-4179-add1-c13b18db4102"
      }
    }
  },
  {
    "name": "io.github.shannonlal/mcp-postman",
    "description": "MCP Server for running Postman Collections with Newman",
    "status": "active",
    "repository": {
      "url": "https://github.com/shannonlal/mcp-postman",
      "source": "github",
      "id": "910565083"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.2",
        "registryType": "npm",
        "identifier": "mcp-postman",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "503a5c73-c147-4b2c-90d3-292378268706",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "503a5c73-c147-4b2c-90d3-292378268706"
      }
    }
  },
  {
    "name": "io.github.allen-munsch/mcp-prefect",
    "description": "https://pypi.org/project/mcp-prefect/0.1.0/",
    "status": "active",
    "repository": {
      "url": "https://github.com/allen-munsch/mcp-prefect",
      "source": "github",
      "id": "956317848"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "registryType": "pypi",
        "identifier": "mcp-prefect",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "94872987-6992-4fec-ab4b-9ef5311b3108",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "94872987-6992-4fec-ab4b-9ef5311b3108"
      }
    }
  },
  {
    "name": "io.github.kenjihikmatullah/productboard-mcp",
    "description": "Integrate the Productboard API into agentic workflows via MCP",
    "status": "active",
    "repository": {
      "url": "https://github.com/kenjihikmatullah/productboard-mcp",
      "source": "github",
      "id": "939104710"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "environmentVariables": [
          {
            "description": "<YOUR_TOKEN>",
            "name": "PRODUCTBOARD_ACCESS_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "productboard-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "00613acb-73e2-4f93-8b96-296df17316c8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "00613acb-73e2-4f93-8b96-296df17316c8"
      }
    }
  },
  {
    "name": "io.github.pab1it0/prometheus-mcp-server",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Prometheus metrics through standardized interfaces.",
    "status": "active",
    "repository": {
      "url": "https://github.com/pab1it0/prometheus-mcp-server",
      "source": "github",
      "id": "951416232"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Automatically remove the container when it exits.",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "Keep STDIN open even if not attached.",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i",
            "valueHint": "-i"
          },
          {
            "description": "Set environment variable PROMETHEUS_URL inside the container.",
            "isRequired": true,
            "format": "string",
            "value": "PROMETHEUS_URL",
            "default": "PROMETHEUS_URL",
            "type": "named",
            "name": "-e",
            "valueHint": "PROMETHEUS_URL"
          },
          {
            "description": "Set environment variable PROMETHEUS_USERNAME inside the container.",
            "isRequired": true,
            "format": "string",
            "value": "PROMETHEUS_USERNAME",
            "default": "PROMETHEUS_USERNAME",
            "type": "named",
            "name": "-e",
            "valueHint": "PROMETHEUS_USERNAME"
          },
          {
            "description": "Set environment variable PROMETHEUS_PASSWORD inside the container.",
            "isRequired": true,
            "format": "string",
            "value": "PROMETHEUS_PASSWORD",
            "default": "PROMETHEUS_PASSWORD",
            "type": "named",
            "name": "-e",
            "valueHint": "PROMETHEUS_PASSWORD"
          }
        ],
        "environmentVariables": [
          {
            "description": "http://your-prometheus-server:9090",
            "name": "PROMETHEUS_URL"
          },
          {
            "description": "your_username",
            "name": "PROMETHEUS_USERNAME"
          },
          {
            "description": "your_password",
            "name": "PROMETHEUS_PASSWORD"
          }
        ],
        "registryType": "oci",
        "identifier": "prometheus_mcp_server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "cf42caa8-50d1-489d-aa3c-3e8432efe9e2",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "cf42caa8-50d1-489d-aa3c-3e8432efe9e2"
      }
    }
  },
  {
    "name": "io.github.sssjiang/pubchem_mcp_server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/sssjiang/pubchem_mcp_server",
      "source": "github",
      "id": "955038120"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.5",
        "registryType": "pypi",
        "identifier": "pubchem_mcp_server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "68966508-9094-4eb5-9588-ff7456d6c1ce",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "68966508-9094-4eb5-9588-ff7456d6c1ce"
      }
    }
  },
  {
    "name": "io.github.dogukanakkaya/pulumi-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/dogukanakkaya/pulumi-mcp-server",
      "source": "github",
      "id": "951615631"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "-i",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i",
            "valueHint": "-i"
          },
          {
            "description": "--rm",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "--name pulumi-mcp-server",
            "isRequired": true,
            "format": "string",
            "value": "pulumi-mcp-server",
            "default": "pulumi-mcp-server",
            "type": "named",
            "name": "--name",
            "valueHint": "pulumi-mcp-server"
          },
          {
            "description": "-e PULUMI_ACCESS_TOKEN",
            "isRequired": true,
            "format": "string",
            "value": "PULUMI_ACCESS_TOKEN",
            "default": "PULUMI_ACCESS_TOKEN",
            "type": "named",
            "name": "-e",
            "valueHint": "PULUMI_ACCESS_TOKEN"
          },
          {
            "description": "dogukanakkaya/pulumi-mcp-server",
            "isRequired": true,
            "format": "string",
            "value": "dogukanakkaya/pulumi-mcp-server",
            "default": "dogukanakkaya/pulumi-mcp-server",
            "type": "positional",
            "valueHint": "dogukanakkaya/pulumi-mcp-server"
          }
        ],
        "environmentVariables": [
          {
            "description": "${YOUR_TOKEN}",
            "name": "PULUMI_ACCESS_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "pulumi-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4f9043b6-e17a-494e-89d4-52c3f39999ac",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4f9043b6-e17a-494e-89d4-52c3f39999ac"
      }
    }
  },
  {
    "name": "io.github.djannot/puppeteer-vision-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/djannot/puppeteer-vision-mcp",
      "source": "github",
      "id": "982891249"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "npm",
        "identifier": "puppeteer-vision-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7997496a-c366-4949-9ca7-6741bcfdf2a0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7997496a-c366-4949-9ca7-6741bcfdf2a0"
      }
    }
  },
  {
    "name": "io.github.ashiknesin/pushover-mcp",
    "description": "A MCP implementation for sending notifications via Pushover",
    "status": "active",
    "repository": {
      "url": "https://github.com/AshikNesin/pushover-mcp",
      "source": "github",
      "id": "943326406"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "start",
            "isRequired": true,
            "format": "string",
            "value": "start",
            "default": "start",
            "type": "positional",
            "valueHint": "start"
          },
          {
            "description": "--token YOUR_TOKEN",
            "isRequired": true,
            "format": "string",
            "value": "YOUR_TOKEN",
            "default": "YOUR_TOKEN",
            "type": "named",
            "name": "--token",
            "valueHint": "YOUR_TOKEN"
          },
          {
            "description": "--user YOUR_USER",
            "isRequired": true,
            "format": "string",
            "value": "YOUR_USER",
            "default": "YOUR_USER",
            "type": "named",
            "name": "--user",
            "valueHint": "YOUR_USER"
          }
        ],
        "registryType": "npm",
        "identifier": "pushover-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "61ffe82e-5288-4af8-a45f-9a0907c941de",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "61ffe82e-5288-4af8-a45f-9a0907c941de"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/quickchart-mcp-server",
    "description": "A Model Context Protocol server for generating charts using QuickChart.io  . It allows you to create various types of charts through MCP tools.",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/Quickchart-MCP-Server",
      "source": "github",
      "id": "937569492"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.6",
        "registryType": "npm",
        "identifier": "@gongrzhe/quickchart-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "904d15ba-e312-4dec-88b6-f52c1077bc96",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "904d15ba-e312-4dec-88b6-f52c1077bc96"
      }
    }
  },
  {
    "name": "io.github.66julienmartin/mcp-server-qwen_max",
    "description": "MCP server for Qwen Max model",
    "status": "active",
    "repository": {
      "url": "https://github.com/66julienmartin/MCP-server-Qwen_Max",
      "source": "github",
      "id": "927217229"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "your-api-key-here",
            "name": "DASHSCOPE_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "qwen_max",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "92c66a82-172a-45e6-92a4-ee6a053e95e6",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "92c66a82-172a-45e6-92a4-ee6a053e95e6"
      }
    }
  },
  {
    "name": "io.github.apify/mcp-server-rag-web-browser",
    "description": "A MCP Server for the RAG Web Browser Actor",
    "status": "active",
    "repository": {
      "url": "https://github.com/apify/mcp-server-rag-web-browser",
      "source": "github",
      "id": "899577906"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "registryType": "npm",
        "identifier": "@apify/mcp-server-rag-web-browser",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "abcd869f-0159-408c-8965-9dbcc8c2d001",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "abcd869f-0159-408c-8965-9dbcc8c2d001"
      }
    }
  },
  {
    "name": "io.github.hiromitsusasaki/raindrop-io-mcp-server",
    "description": "An integration that allows LLMs to interact with Raindrop.io bookmarks using the Model Context Protocol (MCP).",
    "status": "active",
    "repository": {
      "url": "https://github.com/hiromitsusasaki/raindrop-io-mcp-server",
      "source": "github",
      "id": "914932138"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "PATH_TO_BUILD/index.js",
            "isRequired": true,
            "format": "string",
            "value": "PATH_TO_BUILD/index.js",
            "default": "PATH_TO_BUILD/index.js",
            "type": "positional",
            "valueHint": "PATH_TO_BUILD/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_access_token_here",
            "name": "RAINDROP_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "raindrop-io-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ddfb0c36-c116-4333-a62e-c9447d699b6e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ddfb0c36-c116-4333-a62e-c9447d699b6e"
      }
    }
  },
  {
    "name": "io.github.dschuler36/reaper-mcp-server",
    "description": "An MCP Server for interacting with Reaper projects.",
    "status": "active",
    "repository": {
      "url": "https://github.com/dschuler36/reaper-mcp-server",
      "source": "github",
      "id": "917958763"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "reaper-mcp-server",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c214300b-5fcc-48fb-ad3a-bb2d14b0403d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c214300b-5fcc-48fb-ad3a-bb2d14b0403d"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/redis-mcp-server",
    "description": "A Redis MCP server (pushed to https://github.com/modelcontextprotocol/servers/tree/main/src/redis) implementation for interacting with Redis databases. This server enables LLMs to interact with Redis key-value stores through a set of standardized tools.",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/REDIS-MCP-Server",
      "source": "github",
      "id": "907849235"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Docker image to run",
            "isRequired": true,
            "format": "string",
            "value": "mcp/redis",
            "default": "mcp/redis",
            "type": "positional",
            "valueHint": "mcp/redis"
          },
          {
            "description": "Redis server connection string",
            "isRequired": true,
            "format": "string",
            "value": "redis://host.docker.internal:6379",
            "default": "redis://host.docker.internal:6379",
            "type": "positional",
            "valueHint": "host.docker.internal:6379"
          }
        ],
        "registryType": "oci",
        "identifier": "@gongrzhe/server-redis-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "01129bff-3d65-4e3d-8e82-6f2f269f818c",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "01129bff-3d65-4e3d-8e82-6f2f269f818c"
      }
    }
  },
  {
    "name": "io.github.prajwalnayak7/mcp-server-redis",
    "description": "MCP server to interact with Redis Server, AWS Memory DB, etc for caching or other use-cases where in-memory and key-value based storage is appropriate",
    "status": "active",
    "repository": {
      "url": "https://github.com/prajwalnayak7/mcp-server-redis",
      "source": "github",
      "id": "925879641"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "mcp-server-redis",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "8f234bf9-d65f-4406-bed6-f8217adee4c9",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "8f234bf9-d65f-4406-bed6-f8217adee4c9"
      }
    }
  },
  {
    "name": "io.github.skydeckai/mcp-server-rememberizer",
    "description": "An MCP Server to enable global access to Rememberizer",
    "status": "active",
    "repository": {
      "url": "https://github.com/skydeckai/mcp-server-rememberizer",
      "source": "github",
      "id": "901090359"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.5",
        "environmentVariables": [
          {
            "description": "your_rememberizer_api_token",
            "name": "REMEMBERIZER_API_TOKEN"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp-server-rememberizer",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "b5ee338d-655b-4067-9e17-f1bfc442a1eb",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "b5ee338d-655b-4067-9e17-f1bfc442a1eb"
      }
    }
  },
  {
    "name": "io.github.deepfates/mcp-replicate",
    "description": "Model Context Protocol server for Replicate's API",
    "status": "active",
    "repository": {
      "url": "https://github.com/deepfates/mcp-replicate",
      "source": "github",
      "id": "913589706"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "environmentVariables": [
          {
            "description": "your_token_here",
            "name": "REPLICATE_API_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-replicate",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ab0a0d85-7031-4eb0-bd01-5db69fb8c667",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ab0a0d85-7031-4eb0-bd01-5db69fb8c667"
      }
    }
  },
  {
    "name": "io.github.xxxbrian/mcp-rquest",
    "description": "A MCP server providing realistic browser-like HTTP request capabilities with accurate TLS/JA3/JA4 fingerprints for bypassing anti-bot measures. It also supports converting PDF and HTML documents to Markdown for easier processing by LLMs.",
    "status": "active",
    "repository": {
      "url": "https://github.com/xxxbrian/mcp-rquest",
      "source": "github",
      "id": "950863558"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.13",
        "registryType": "pypi",
        "identifier": "mcp-rquest",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0c43f128-7589-4ce6-9382-5399ba24bebd",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0c43f128-7589-4ce6-9382-5399ba24bebd"
      }
    }
  },
  {
    "name": "io.github.r-huijts/rijksmuseum-mcp",
    "description": "Rijksmuseum MCP integration for artwork exploration and analysis",
    "status": "active",
    "repository": {
      "url": "https://github.com/r-huijts/rijksmuseum-mcp",
      "source": "github",
      "id": "907496920"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.4",
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "RIJKSMUSEUM_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-server-rijksmuseum",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6a64a548-c36c-400f-b43c-4d977aa1e482",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6a64a548-c36c-400f-b43c-4d977aa1e482"
      }
    }
  },
  {
    "name": "io.github.jifrozen0110/mcp-riot",
    "description": "League of Legends MCP Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/jifrozen0110/mcp-riot",
      "source": "github",
      "id": "967790464"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "riot",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "87e2c1e7-4fdb-436f-b52c-af683f63fb1b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "87e2c1e7-4fdb-436f-b52c-af683f63fb1b"
      }
    }
  },
  {
    "name": "io.github.smn2gnt/mcp-salesforce",
    "description": "MCP Salesforce connector",
    "status": "active",
    "repository": {
      "url": "https://github.com/smn2gnt/MCP-Salesforce",
      "source": "github",
      "id": "904538810"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "registryType": "pypi",
        "identifier": "mcp-salesforce-connector",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0e45cb5a-5b45-47f3-8b5e-12bdf88d176a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0e45cb5a-5b45-47f3-8b5e-12bdf88d176a"
      }
    }
  },
  {
    "name": "io.github.adityak74/mcp-scholarly",
    "description": "A MCP server to search for accurate academic articles.",
    "status": "active",
    "repository": {
      "url": "https://github.com/adityak74/mcp-scholarly",
      "source": "github",
      "id": "910698593"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "pypi",
        "identifier": "mcp-scholarly",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f43b2576-74d3-4b79-b9d0-0c5816835369",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f43b2576-74d3-4b79-b9d0-0c5816835369"
      }
    }
  },
  {
    "name": "io.github.cyberchitta/scrapling-fetch-mcp",
    "description": "Helps AI assistants access text content from bot-protected websites. MCP server that fetches HTML/markdown from sites with anti-automation measures using Scrapling.",
    "status": "active",
    "repository": {
      "url": "https://github.com/cyberchitta/scrapling-fetch-mcp",
      "source": "github",
      "id": "947737843"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.6",
        "registryType": "pypi",
        "identifier": "scrapling-fetch-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "874336ad-3dfa-467f-8356-3de7d8b2b93d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "874336ad-3dfa-467f-8356-3de7d8b2b93d"
      }
    }
  },
  {
    "name": "io.github.ihor-sokoliuk/mcp-searxng",
    "description": "MCP Server for SearXNG",
    "status": "active",
    "repository": {
      "url": "https://github.com/ihor-sokoliuk/mcp-searxng",
      "source": "github",
      "id": "907172461"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.6",
        "packageArguments": [
          {
            "description": "Run an image",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i",
            "valueHint": "-i"
          },
          {
            "description": "Remove container after run",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "Set environment variable in container",
            "isRequired": true,
            "format": "string",
            "value": "SEARXNG_URL",
            "default": "SEARXNG_URL",
            "type": "named",
            "name": "-e",
            "valueHint": "SEARXNG_URL"
          }
        ],
        "environmentVariables": [
          {
            "description": "YOUR_SEARXNG_INSTANCE_URL",
            "name": "SEARXNG_URL"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-searxng",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "02cdb980-1dcd-4345-a8d1-d3f3f522d04b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "02cdb980-1dcd-4345-a8d1-d3f3f522d04b"
      }
    }
  },
  {
    "name": "io.github.stefanoamorelli/sec-edgar-mcp",
    "description": "A Model Context Protocol (MCP) Server for SEC EDGAR",
    "status": "active",
    "repository": {
      "url": "https://github.com/stefanoamorelli/sec-edgar-mcp",
      "source": "github",
      "id": "958733763"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.1",
        "registryType": "pypi",
        "identifier": "sec-edgar-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "8d526532-7125-4b3c-b180-901914ead390",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "8d526532-7125-4b3c-b180-901914ead390"
      }
    }
  },
  {
    "name": "io.github.geli2001/shopify-mcp",
    "description": "MCP server for Shopify api, usable on mcp clients such as Anthropic's Claude and Cursor IDE",
    "status": "active",
    "repository": {
      "url": "https://github.com/GeLi2001/shopify-mcp",
      "source": "github",
      "id": "958329576"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.5",
        "packageArguments": [
          {
            "description": "--accessToken <YOUR_ACCESS_TOKEN>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_ACCESS_TOKEN>",
            "default": "<YOUR_ACCESS_TOKEN>",
            "type": "named",
            "name": "--accessToken",
            "valueHint": "<YOUR_ACCESS_TOKEN>"
          },
          {
            "description": "--domain <YOUR_SHOP>.myshopify.com",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_SHOP>.myshopify.com",
            "default": "<YOUR_SHOP>.myshopify.com",
            "type": "named",
            "name": "--domain",
            "valueHint": "<YOUR_SHOP>.myshopify.com"
          }
        ],
        "registryType": "npm",
        "identifier": "shopify-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "fcde90d4-5b99-4262-8101-7a507bf05915",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "fcde90d4-5b99-4262-8101-7a507bf05915"
      }
    }
  },
  {
    "name": "io.github.dvcrn/mcp-server-siri-shortcuts",
    "description": "MCP for calling Siri Shorcuts from LLMs",
    "status": "active",
    "repository": {
      "url": "https://github.com/dvcrn/mcp-server-siri-shortcuts",
      "source": "github",
      "id": "938652536"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "npm",
        "identifier": "mcp-server-siri-shortcuts",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "fbef362d-ba4b-4708-8579-332d2a57582d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "fbef362d-ba4b-4708-8579-332d2a57582d"
      }
    }
  },
  {
    "name": "io.github.isaacwasserman/mcp-snowflake-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/isaacwasserman/mcp-snowflake-server",
      "source": "github",
      "id": "903050511"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.4.0",
        "packageArguments": [
          {
            "description": "--python=3.12",
            "isRequired": true,
            "format": "string",
            "value": "3.12",
            "default": "3.12",
            "type": "named",
            "name": "--python",
            "valueHint": "3.12"
          },
          {
            "description": "--directory /absolute/path/to/mcp_snowflake_server",
            "isRequired": true,
            "format": "string",
            "value": "/absolute/path/to/mcp_snowflake_server",
            "default": "/absolute/path/to/mcp_snowflake_server",
            "type": "named",
            "name": "--directory",
            "valueHint": "/absolute/path/to/mcp_snowflake_server"
          },
          {
            "description": "mcp_snowflake_server",
            "isRequired": true,
            "format": "string",
            "value": "mcp_snowflake_server",
            "default": "mcp_snowflake_server",
            "type": "positional",
            "valueHint": "mcp_snowflake_server"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp_snowflake_server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "61942e80-99c9-4856-90c8-5a11ac76ade5",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "61942e80-99c9-4856-90c8-5a11ac76ade5"
      }
    }
  },
  {
    "name": "io.github.szeider/mcp-solver",
    "description": "Model Context Protocol (MCP) server for constraint optimization and solving\"",
    "status": "active",
    "repository": {
      "url": "https://github.com/szeider/mcp-solver",
      "source": "github",
      "id": "903561149"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "3.2.0",
        "registryType": "pypi",
        "identifier": "mcp-solver",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "523175e8-6767-4387-af85-a46f256a6390",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "523175e8-6767-4387-af85-a46f256a6390"
      }
    }
  },
  {
    "name": "io.github.yeonupark/mcp-soccer-data",
    "description": "An MCP server that provides real-time football data based on the SoccerDataAPI.",
    "status": "active",
    "repository": {
      "url": "https://github.com/yeonupark/mcp-soccer-data",
      "source": "github",
      "id": "966702385"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "mcp-soccer-data",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "387ef1e6-0e4c-43ea-9416-bf3b399a3c76",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "387ef1e6-0e4c-43ea-9416-bf3b399a3c76"
      }
    }
  },
  {
    "name": "io.github.sendaifun/solana-agent-kit",
    "description": "connect any ai agents to solana protocols",
    "status": "active",
    "repository": {
      "url": "https://github.com/sendaifun/solana-agent-kit",
      "source": "github",
      "id": "889798967"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "2.0.3",
        "registryType": "npm",
        "identifier": "solana-agent-kit",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f25f6cdb-0623-4a04-bac2-f1b26331b432",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f25f6cdb-0623-4a04-bac2-f1b26331b432"
      }
    }
  },
  {
    "name": "io.github.varunneal/spotify-mcp",
    "description": "MCP to connect your LLM with Spotify.",
    "status": "active",
    "repository": {
      "url": "https://github.com/varunneal/spotify-mcp",
      "source": "github",
      "id": "896675928"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "packageArguments": [
          {
            "description": "Set the working directory",
            "isRequired": true,
            "format": "string",
            "value": "/path/to/spotify_mcp",
            "default": "/path/to/spotify_mcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "/path/to/spotify_mcp"
          },
          {
            "description": "Program to run",
            "isRequired": true,
            "format": "string",
            "value": "spotify-mcp",
            "default": "spotify-mcp",
            "type": "positional",
            "valueHint": "spotify-mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "YOUR_CLIENT_ID",
            "name": "SPOTIFY_CLIENT_ID"
          },
          {
            "description": "YOUR_CLIENT_SECRET",
            "name": "SPOTIFY_CLIENT_SECRET"
          },
          {
            "description": "http://127.0.0.1:8080/callback",
            "name": "SPOTIFY_REDIRECT_URI"
          }
        ],
        "registryType": "pypi",
        "identifier": "spotify-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "20c38c50-831e-478a-9f52-064d3ad8a6ce",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "20c38c50-831e-478a-9f52-064d3ad8a6ce"
      }
    }
  },
  {
    "name": "io.github.r-huijts/strava-mcp",
    "description": "A Model Context Protocol (MCP) server that connects to Strava API, providing tools to access Strava data through LLMs",
    "status": "active",
    "repository": {
      "url": "https://github.com/r-huijts/strava-mcp",
      "source": "github",
      "id": "961429605"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "registryType": "pypi",
        "identifier": "strava-mcp-server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "09a2ecf8-1774-490e-8542-2b25a6445a58",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "09a2ecf8-1774-490e-8542-2b25a6445a58"
      }
    }
  },
  {
    "name": "io.github.atharvagupta2003/mcp-stripe",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/atharvagupta2003/mcp-stripe",
      "source": "github",
      "id": "928410809"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "charge_id argument",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "charge_id",
            "valueHint": "ch_abc123"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-stripe",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "e532ff07-269a-47fb-98ad-6315d7081ccb",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "e532ff07-269a-47fb-98ad-6315d7081ccb"
      }
    }
  },
  {
    "name": "io.github.sonnylazuardi/cursor-talk-to-figma-mcp",
    "description": "Cursor Talk To Figma MCP",
    "status": "active",
    "repository": {
      "url": "https://github.com/sonnylazuardi/cursor-talk-to-figma-mcp",
      "source": "github",
      "id": "949523404"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.1",
        "registryType": "npm",
        "identifier": "cursor-talk-to-figma-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9826cb7a-bc6f-41d9-b9b7-f76f781c1eca",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9826cb7a-bc6f-41d9-b9b7-f76f781c1eca"
      }
    }
  },
  {
    "name": "io.github.laksh-star/mcp-server-tmdb",
    "description": "MCP Server with TMDB",
    "status": "active",
    "repository": {
      "url": "https://github.com/Laksh-star/mcp-server-tmdb",
      "source": "github",
      "id": "901420381"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "TMDB_API_KEY"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-tmdb",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ff2b0e88-9426-4aa1-bfb1-165cc810344f",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ff2b0e88-9426-4aa1-bfb1-165cc810344f"
      }
    }
  },
  {
    "name": "io.github.ramxx/mcp-tavily",
    "description": "An MCP server for Tavily's search API",
    "status": "active",
    "repository": {
      "url": "https://github.com/RamXX/mcp-tavily",
      "source": "github",
      "id": "896967375"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.8",
        "packageArguments": [
          {
            "description": "Python module execution: -m mcp_server_tavily",
            "isRequired": true,
            "format": "string",
            "value": "mcp_server_tavily",
            "default": "mcp_server_tavily",
            "type": "named",
            "name": "-m",
            "valueHint": "mcp_server_tavily"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "TAVILY_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "mcp_tavily",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "bdeb1cca-49ce-476a-87a2-f27c30b086bd",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "bdeb1cca-49ce-476a-87a2-f27c30b086bd"
      }
    }
  },
  {
    "name": "io.github.arturborycki/mcp-teradata",
    "description": "MCP Server for Teradata database",
    "status": "active",
    "repository": {
      "url": "https://github.com/arturborycki/mcp-teradata",
      "source": "github",
      "id": "970353793"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "teradata-mcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "cb9e2dc2-e335-4271-8e8d-5aff43cd389b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "cb9e2dc2-e335-4271-8e8d-5aff43cd389b"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/terminal-controller-mcp",
    "description": "A Model Context Protocol (MCP) server that enables secure terminal command execution, directory navigation, and file system operations through a standardized interface.",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/terminal-controller-mcp",
      "source": "github",
      "id": "938867662"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.8",
        "packageArguments": [
          {
            "description": "Positional module argument to run the module terminal_controller with python",
            "isRequired": true,
            "format": "string",
            "value": "terminal_controller",
            "default": "terminal_controller",
            "type": "named",
            "name": "-m",
            "valueHint": "terminal_controller"
          }
        ],
        "registryType": "pypi",
        "identifier": "terminal-controller",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6275eefc-3f97-4a30-85ca-9678de62bdcf",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6275eefc-3f97-4a30-85ca-9678de62bdcf"
      }
    }
  },
  {
    "name": "io.github.geli2001/tft-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/GeLi2001/tft-mcp-server",
      "source": "github",
      "id": "957763921"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.3",
        "packageArguments": [
          {
            "description": "<YOUR_RIOT_API_KEY>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_RIOT_API_KEY>",
            "default": "<YOUR_RIOT_API_KEY>",
            "type": "named",
            "name": "--apiKey",
            "valueHint": "<YOUR_RIOT_API_KEY>"
          },
          {
            "description": "<YOUR_GAME_NAME>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_GAME_NAME>",
            "default": "<YOUR_GAME_NAME>",
            "type": "named",
            "name": "--gameName",
            "valueHint": "<YOUR_GAME_NAME>"
          },
          {
            "description": "<YOUR_TAG_LINE>",
            "isRequired": true,
            "format": "string",
            "value": "<YOUR_TAG_LINE>",
            "default": "<YOUR_TAG_LINE>",
            "type": "named",
            "name": "--tagLine",
            "valueHint": "<YOUR_TAG_LINE>"
          }
        ],
        "registryType": "npm",
        "identifier": "mcp-server-tft",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1aa1e801-80d9-4ea1-80c2-e7d037ce98e3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1aa1e801-80d9-4ea1-80c2-e7d037ce98e3"
      }
    }
  },
  {
    "name": "io.github.kukapay/thegraph-mcp",
    "description": "An MCP server that powers AI agents with indexed blockchain data from The Graph.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/thegraph-mcp",
      "source": "github",
      "id": "952738950"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Specifies the directory to run the application from",
            "isRequired": true,
            "format": "string",
            "value": "path/to/thegraph-mcp",
            "default": "path/to/thegraph-mcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "path/to/thegraph-mcp"
          },
          {
            "description": "Main python file to execute",
            "isRequired": true,
            "format": "string",
            "value": "main.py",
            "default": "main.py",
            "type": "positional",
            "valueHint": "main.py"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "THEGRAPH_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "thegraph-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ea41dc54-96fd-41db-90ec-92a1a45e7151",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ea41dc54-96fd-41db-90ec-92a1a45e7151"
      }
    }
  },
  {
    "name": "io.github.delorenj/mcp-server-ticketmaster",
    "description": "A Ticketmaster MCP server that provides query capabilites from the Discovery API",
    "status": "active",
    "repository": {
      "url": "https://github.com/delorenj/mcp-server-ticketmaster",
      "source": "github",
      "id": "918433694"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.5",
        "environmentVariables": [
          {
            "description": "your-api-key-here",
            "name": "TICKETMASTER_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@delorenj/mcp-server-ticketmaster",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7f7268e0-670a-4630-83da-acc1090264c3",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7f7268e0-670a-4630-83da-acc1090264c3"
      }
    }
  },
  {
    "name": "io.github.alexarevalo9/ticktick-mcp-server",
    "description": "A Model Context Protocol (MCP) server designed to integrate with the TickTick task management platform, enabling intelligent context-aware task operations and automation.",
    "status": "active",
    "repository": {
      "url": "https://github.com/alexarevalo9/ticktick-mcp-server",
      "source": "github",
      "id": "957668156"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.9",
        "packageArguments": [
          {
            "description": "Run container in interactive mode",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i",
            "valueHint": "-i"
          },
          {
            "description": "Automatically remove the container when it exits",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm",
            "valueHint": "--rm"
          },
          {
            "description": "Set the TICKTICK_CLIENT_ID environment variable in the container",
            "isRequired": true,
            "format": "string",
            "value": "TICKTICK_CLIENT_ID",
            "default": "TICKTICK_CLIENT_ID",
            "type": "named",
            "name": "-e",
            "valueHint": "TICKTICK_CLIENT_ID"
          },
          {
            "description": "Set the TICKTICK_CLIENT_SECRET environment variable in the container",
            "isRequired": true,
            "format": "string",
            "value": "TICKTICK_CLIENT_SECRET",
            "default": "TICKTICK_CLIENT_SECRET",
            "type": "named",
            "name": "-e",
            "valueHint": "TICKTICK_CLIENT_SECRET"
          },
          {
            "description": "Set the TICKTICK_ACCESS_TOKEN environment variable in the container",
            "isRequired": true,
            "format": "string",
            "value": "TICKTICK_ACCESS_TOKEN",
            "default": "TICKTICK_ACCESS_TOKEN",
            "type": "named",
            "name": "-e",
            "valueHint": "TICKTICK_ACCESS_TOKEN"
          },
          {
            "description": "Docker image name",
            "isRequired": true,
            "format": "string",
            "value": "mcp/ticktick",
            "default": "mcp/ticktick",
            "type": "positional",
            "valueHint": "mcp/ticktick"
          }
        ],
        "environmentVariables": [
          {
            "description": "<YOUR_CLIENT_ID>",
            "name": "TICKTICK_CLIENT_ID"
          },
          {
            "description": "<YOUR_CLIENT_SECRET>",
            "name": "TICKTICK_CLIENT_SECRET"
          },
          {
            "description": "<YOUR_ACCESS_TOKEN>",
            "name": "TICKTICK_ACCESS_TOKEN"
          }
        ],
        "registryType": "oci",
        "identifier": "@alexarevalo.ai/mcp-server-ticktick",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5c1709d9-3f57-4dbd-a727-5ce383a59c32",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5c1709d9-3f57-4dbd-a727-5ce383a59c32"
      }
    }
  },
  {
    "name": "io.github.abhiz123/todoist-mcp-server",
    "description": "MCP server for Todoist integration enabling natural language task management with Claude",
    "status": "active",
    "repository": {
      "url": "https://github.com/abhiz123/todoist-mcp-server",
      "source": "github",
      "id": "898075293"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "your_api_token_here",
            "name": "TODOIST_API_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "@abhiz123/todoist-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "f79220af-20c6-4d21-b4f6-13f176b7f1d8",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "f79220af-20c6-4d21-b4f6-13f176b7f1d8"
      }
    }
  },
  {
    "name": "io.github.kukapay/token-minter-mcp",
    "description": "An MCP server providing tools for AI agents to mint ERC-20 tokens across multiple blockchains.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/token-minter-mcp",
      "source": "github",
      "id": "951336068"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "packageArguments": [
          {
            "description": "Path to the server entry point",
            "isRequired": true,
            "format": "string",
            "value": "path/to/token-minter-mcp/server/index.js",
            "default": "path/to/token-minter-mcp/server/index.js",
            "type": "positional",
            "valueHint": "path/to/token-minter-mcp/server/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your infura key",
            "name": "INFURA_KEY"
          },
          {
            "description": "your private key",
            "name": "PRIVATE_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "token-minter-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "10bb9deb-9384-4e4d-935e-9d830015a43e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "10bb9deb-9384-4e4d-935e-9d830015a43e"
      }
    }
  },
  {
    "name": "io.github.kukapay/token-revoke-mcp",
    "description": "An MCP server for checking and revoking ERC-20 token allowances across multiple blockchains.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/token-revoke-mcp",
      "source": "github",
      "id": "956577908"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "your moralis api key",
            "name": "MORALIS_API_KEY"
          },
          {
            "description": "your wallet private key",
            "name": "PRIVATE_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "token-revoke-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4bd856fc-761e-43e3-9236-7b996b6b7ec7",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4bd856fc-761e-43e3-9236-7b996b6b7ec7"
      }
    }
  },
  {
    "name": "io.github.suhail-ak-s/mcp-typesense-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/suhail-ak-s/mcp-typesense-server",
      "source": "github",
      "id": "940089654"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "The Typesense server host",
            "isRequired": true,
            "format": "string",
            "value": "your-typesense-host",
            "default": "your-typesense-host",
            "type": "named",
            "name": "--host",
            "valueHint": "your-typesense-host"
          },
          {
            "description": "The Typesense server port",
            "isRequired": true,
            "format": "string",
            "value": "8108",
            "default": "8108",
            "type": "named",
            "name": "--port",
            "valueHint": "8108"
          },
          {
            "description": "The Typesense server protocol",
            "isRequired": true,
            "format": "string",
            "value": "http",
            "default": "http",
            "type": "named",
            "name": "--protocol",
            "valueHint": "http"
          },
          {
            "description": "The Typesense API key",
            "isRequired": true,
            "format": "string",
            "value": "your-api-key",
            "default": "your-api-key",
            "type": "named",
            "name": "--api-key",
            "valueHint": "your-api-key"
          }
        ],
        "registryType": "npm",
        "identifier": "typesense-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a038d159-c51e-49ef-aa02-c794e8a5cb94",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a038d159-c51e-49ef-aa02-c794e8a5cb94"
      }
    }
  },
  {
    "name": "io.github.gongrzhe/travel-planner-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/GongRzhe/TRAVEL-PLANNER-MCP-Server",
      "source": "github",
      "id": "907849260"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "environmentVariables": [
          {
            "description": "your_google_maps_api_key",
            "name": "GOOGLE_MAPS_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@gongrzhe/server-travelplanner-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "7d8aa739-c9c6-4afd-991b-cf425be475db",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "7d8aa739-c9c6-4afd-991b-cf425be475db"
      }
    }
  },
  {
    "name": "io.github.kukapay/uniswap-poolspy-mcp",
    "description": "An MCP server that tracks newly created liquidity pools on Uniswap across nine blockchain networks.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/uniswap-poolspy-mcp",
      "source": "github",
      "id": "950939450"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "run main.py",
            "default": "run main.py",
            "type": "positional",
            "valueHint": "main.py"
          }
        ],
        "environmentVariables": [
          {
            "description": "your api key from The Graph",
            "name": "THEGRAPH_API_KEY"
          }
        ],
        "registryType": "pypi",
        "identifier": "uniswap-poolspy-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1ff3b09d-5c19-4254-849f-34244dc6ee88",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1ff3b09d-5c19-4254-849f-34244dc6ee88"
      }
    }
  },
  {
    "name": "io.github.kukapay/uniswap-trader-mcp",
    "description": "An MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.",
    "status": "active",
    "repository": {
      "url": "https://github.com/kukapay/uniswap-trader-mcp",
      "source": "github",
      "id": "952312114"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "packageArguments": [
          {
            "description": "Path to main entry file",
            "isRequired": true,
            "format": "string",
            "value": "path/to/uniswap-trader-mcp/server/index.js",
            "default": "path/to/uniswap-trader-mcp/server/index.js",
            "type": "positional",
            "valueHint": "path/to/uniswap-trader-mcp/server/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your infura key",
            "name": "INFURA_KEY"
          },
          {
            "description": "your private key",
            "name": "WALLET_PRIVATE_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "uniswap-trader-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "1dd6d7a5-ba98-4fce-b4a4-d0541df84569",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "1dd6d7a5-ba98-4fce-b4a4-d0541df84569"
      }
    }
  },
  {
    "name": "io.github.ognis1205/mcp-server-unitycatalog",
    "description": "Unity Catalog AI Model Context Protocol Server",
    "status": "active",
    "repository": {
      "url": "https://github.com/ognis1205/mcp-server-unitycatalog",
      "source": "github",
      "id": "926414362"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Remove container after run",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "--rm"
          },
          {
            "description": "Keep STDIN open even if not attached",
            "isRequired": true,
            "format": "string",
            "value": "",
            "default": "",
            "type": "named",
            "name": "-i"
          },
          {
            "description": "Specify Unity Catalog server URL",
            "isRequired": true,
            "format": "string",
            "value": "<your unity catalog url>",
            "default": "<your unity catalog url>",
            "type": "named",
            "name": "--uc_server",
            "valueHint": "<your unity catalog url>"
          },
          {
            "description": "Specify Unity Catalog name",
            "isRequired": true,
            "format": "string",
            "value": "<your catalog name>",
            "default": "<your catalog name>",
            "type": "named",
            "name": "--uc_catalog",
            "valueHint": "<your catalog name>"
          },
          {
            "description": "Specify Unity Catalog schema name",
            "isRequired": true,
            "format": "string",
            "value": "<your schema name>",
            "default": "<your schema name>",
            "type": "named",
            "name": "--uc_schema",
            "valueHint": "<your schema name>"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-unitycatalog",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "51d74701-2a57-476f-a5ed-75a93be58f42",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "51d74701-2a57-476f-a5ed-75a93be58f42"
      }
    }
  },
  {
    "name": "io.github.codergamester/mcp-unity",
    "description": "MCP Server to integrate Unity Editor game engine with different AI Model clients (e.g. Claude Desktop, Windsurf, Cursor)",
    "status": "active",
    "repository": {
      "url": "https://github.com/CoderGamester/mcp-unity",
      "source": "github",
      "id": "948148972"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.2",
        "registryType": "oci",
        "identifier": "com.gamelovers.mcp-unity",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3cccaee3-1b35-4a97-bc23-d1a8603aa366",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3cccaee3-1b35-4a97-bc23-d1a8603aa366"
      }
    }
  },
  {
    "name": "io.github.quazaai/unitymcpintegration",
    "description": "Enable AI Agents to Control Unity",
    "status": "active",
    "repository": {
      "url": "https://github.com/quazaai/UnityMCPIntegration",
      "source": "github",
      "id": "950083186"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "environmentVariables": [
          {
            "description": "5010",
            "name": "MCP_WEBSOCKET_PORT"
          }
        ],
        "registryType": "oci",
        "identifier": "com.quaza.unitymcp",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "162d7f33-0f96-47d7-980b-361fb0ddc381",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "162d7f33-0f96-47d7-980b-361fb0ddc381"
      }
    }
  },
  {
    "name": "io.github.isaacwasserman/mcp-vegalite-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/isaacwasserman/mcp-vegalite-server",
      "source": "github",
      "id": "902526658"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.1",
        "registryType": "oci",
        "identifier": "mcp-server-vegalite",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "aa301cee-889b-4606-b66b-fd9dc1e77817",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "aa301cee-889b-4606-b66b-fd9dc1e77817"
      }
    }
  },
  {
    "name": "io.github.burningion/video-editing-mcp",
    "description": "MCP Interface for Video Jungle",
    "status": "active",
    "repository": {
      "url": "https://github.com/burningion/video-editing-mcp",
      "source": "github",
      "id": "898031405"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.25",
        "packageArguments": [
          {
            "description": "Directory to use",
            "isRequired": true,
            "format": "string",
            "value": "/Users/<PATH_TO>/video-jungle-mcp",
            "default": "/Users/<PATH_TO>/video-jungle-mcp",
            "type": "named",
            "name": "--directory",
            "valueHint": "/Users/<PATH_TO>/video-jungle-mcp"
          },
          {
            "description": "Script or module name",
            "isRequired": true,
            "format": "string",
            "value": "video-editor-mcp",
            "default": "video-editor-mcp",
            "type": "positional",
            "valueHint": "video-editor-mcp"
          },
          {
            "description": "API Key input",
            "isRequired": true,
            "format": "string",
            "value": "<YOURAPIKEY>",
            "default": "<YOURAPIKEY>",
            "type": "positional",
            "valueHint": "<YOURAPIKEY>"
          }
        ],
        "environmentVariables": [
          {
            "description": "1",
            "name": "LOAD_PHOTOS_DB"
          }
        ],
        "registryType": "pypi",
        "identifier": "video-editor-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "6b136dc5-ffcf-41b0-bf5f-e5dff5d47981",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "6b136dc5-ffcf-41b0-bf5f-e5dff5d47981"
      }
    }
  },
  {
    "name": "io.github.mfukushim/map-traveler-mcp",
    "description": "Virtual traveler library for MCP",
    "status": "active",
    "repository": {
      "url": "https://github.com/mfukushim/map-traveler-mcp",
      "source": "github",
      "id": "911417007"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.77",
        "environmentVariables": [
          {
            "description": "http://192.168.1.100:8188",
            "name": "comfy_url"
          },
          {
            "description": "C:\\Documents\\t2itest.json",
            "name": "comfy_workflow_t2i"
          },
          {
            "description": "C:\\Documents\\i2itest.json",
            "name": "comfy_workflow_i2i"
          },
          {
            "description": "ckpt_name='animagineXL40_v40.safetensors',denoise=0.65",
            "name": "comfy_params"
          }
        ],
        "registryType": "npm",
        "identifier": "@mfukushim/map-traveler-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "8b5bb45d-a025-4e7b-a185-dbb5e349af32",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "8b5bb45d-a025-4e7b-a185-dbb5e349af32"
      }
    }
  },
  {
    "name": "io.github.dinghuazhou/sample-mcp-server-tos",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/dinghuazhou/sample-mcp-server-tos",
      "source": "github",
      "id": "947289080"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "Git repository URL with subdirectory parameter",
            "isRequired": true,
            "format": "string",
            "value": "git+https://github.com/volcengine/ai-app-lab#subdirectory=mcp/server/mcp_server_tos",
            "default": "git+https://github.com/volcengine/ai-app-lab#subdirectory=mcp/server/mcp_server_tos",
            "type": "positional",
            "valueHint": "git+https://github.com/volcengine/ai-app-lab#subdirectory=mcp/server/mcp_server_tos"
          },
          {
            "description": "Server entry point",
            "isRequired": true,
            "format": "string",
            "value": "mcp-server-tos",
            "default": "mcp-server-tos",
            "type": "positional",
            "valueHint": "mcp-server-tos"
          }
        ],
        "environmentVariables": [
          {
            "description": "your ak",
            "name": "VOLC_ACCESSKEY"
          },
          {
            "description": "your sk",
            "name": "VOLC_SECRETKEY"
          },
          {
            "description": "tos region",
            "name": "REGION"
          },
          {
            "description": "tos endpoint",
            "name": "TOS_ENDPOINT"
          },
          {
            "description": "your security token",
            "name": "SECURITY_TOKEN"
          },
          {
            "description": "your specific bucket",
            "name": "TOS_BUCKET"
          }
        ],
        "registryType": "oci",
        "identifier": "mcp-server-tos",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5f14d558-f478-43b5-8dde-20c9997f196a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5f14d558-f478-43b5-8dde-20c9997f196a"
      }
    }
  },
  {
    "name": "io.github.kapilduraphe/webflow-mcp-server",
    "description": "Webflow MCP server",
    "status": "active",
    "repository": {
      "url": "https://github.com/kapilduraphe/webflow-mcp-server",
      "source": "github",
      "id": "935070409"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "Path to the entry point script",
            "isRequired": true,
            "format": "string",
            "value": "/ABSOLUTE/PATH/TO/YOUR/build/index.js",
            "default": "/ABSOLUTE/PATH/TO/YOUR/build/index.js",
            "type": "positional",
            "valueHint": "/ABSOLUTE/PATH/TO/YOUR/build/index.js"
          }
        ],
        "environmentVariables": [
          {
            "description": "your-api-token",
            "name": "WEBFLOW_API_TOKEN"
          }
        ],
        "registryType": "npm",
        "identifier": "webflow-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c7876b07-1fe3-4006-a104-93ef9f9e1669",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c7876b07-1fe3-4006-a104-93ef9f9e1669"
      }
    }
  },
  {
    "name": "io.github.bharathvaj-ganesan/whois-mcp",
    "description": "MCP Server for whois lookups.",
    "status": "active",
    "repository": {
      "url": "https://github.com/bharathvaj-ganesan/whois-mcp",
      "source": "github",
      "id": "943452732"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "registryType": "npm",
        "identifier": "@bharathvaj/whois-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "5f5a497c-673d-4988-b86b-c3bcaaf1a317",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "5f5a497c-673d-4988-b86b-c3bcaaf1a317"
      }
    }
  },
  {
    "name": "io.github.zzaebok/mcp-wikidata",
    "description": "A server implementation for Wikidata API using the Model Context Protocol (MCP).",
    "status": "active",
    "repository": {
      "url": "https://github.com/zzaebok/mcp-wikidata",
      "source": "github",
      "id": "959274715"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "mcp-wikidata",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "02b79b89-cce8-4401-aa1f-255b01587266",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "02b79b89-cce8-4401-aa1f-255b01587266"
      }
    }
  },
  {
    "name": "io.github.simonb97/win-cli-mcp-server",
    "description": "Model Context Protocol server for secure command-line interactions on Windows systems",
    "status": "active",
    "repository": {
      "url": "https://github.com/SimonB97/win-cli-mcp-server",
      "source": "github",
      "id": "898475770"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.0",
        "registryType": "npm",
        "identifier": "@simonb97/server-win-cli",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a8a08cbd-074f-49ba-8f98-3ef8583cc93b",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a8a08cbd-074f-49ba-8f98-3ef8583cc93b"
      }
    }
  },
  {
    "name": "io.github.anshumax/world_bank_mcp_server",
    "description": "An implementation of the Model Context Protocol for the World Bank open data API",
    "status": "active",
    "repository": {
      "url": "https://github.com/anshumax/world_bank_mcp_server",
      "source": "github",
      "id": "911984754"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "description": "The directory to use",
            "isRequired": true,
            "format": "string",
            "value": "path/to/world_bank_mcp_server",
            "default": "path/to/world_bank_mcp_server",
            "type": "named",
            "name": "--directory",
            "valueHint": "path/to/world_bank_mcp_server"
          },
          {
            "description": "The server script/module to execute",
            "isRequired": true,
            "format": "string",
            "value": "world_bank_mcp_server",
            "default": "world_bank_mcp_server",
            "type": "positional",
            "valueHint": "world_bank_mcp_server"
          }
        ],
        "registryType": "pypi",
        "identifier": "world_bank_mcp_server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "4e6fc5a4-eecb-46e4-a3ce-4310cbb8c3f4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "4e6fc5a4-eecb-46e4-a3ce-4310cbb8c3f4"
      }
    }
  },
  {
    "name": "io.github.enescinr/twitter-mcp",
    "description": "A Model Context Protocol server allows to interact with Twitter, enabling posting tweets and searching Twitter.",
    "status": "active",
    "repository": {
      "url": "https://github.com/EnesCinr/twitter-mcp",
      "source": "github",
      "id": "901627660"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "environmentVariables": [
          {
            "description": "your_api_key_here",
            "name": "API_KEY"
          },
          {
            "description": "your_api_secret_key_here",
            "name": "API_SECRET_KEY"
          },
          {
            "description": "your_access_token_here",
            "name": "ACCESS_TOKEN"
          },
          {
            "description": "your_access_token_secret_here",
            "name": "ACCESS_TOKEN_SECRET"
          }
        ],
        "registryType": "npm",
        "identifier": "@enescinar/twitter-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "ccb9aa0c-bbf5-46e6-a5f0-a5b4c11d519a",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "ccb9aa0c-bbf5-46e6-a5f0-a5b4c11d519a"
      }
    }
  },
  {
    "name": "io.github.vidhupv/x-mcp",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/vidhupv/x-mcp",
      "source": "github",
      "id": "898698501"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "packageArguments": [
          {
            "isRequired": true,
            "format": "string",
            "value": "x-mcp",
            "default": "x-mcp",
            "type": "positional",
            "valueHint": "x-mcp"
          }
        ],
        "environmentVariables": [
          {
            "description": "your_api_key",
            "name": "TWITTER_API_KEY"
          },
          {
            "description": "your_api_secret",
            "name": "TWITTER_API_SECRET"
          },
          {
            "description": "your_access_token",
            "name": "TWITTER_ACCESS_TOKEN"
          },
          {
            "description": "your_access_token_secret",
            "name": "TWITTER_ACCESS_TOKEN_SECRET"
          }
        ],
        "registryType": "pypi",
        "identifier": "x-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a24e506b-b16b-412d-b806-fcf7e39b4549",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a24e506b-b16b-412d-b806-fcf7e39b4549"
      }
    }
  },
  {
    "name": "io.github.shenghaiwang/xcodebuild",
    "description": "MCP tool for building Xcode iOS workspace/project and feeding back error to LLMs.",
    "status": "active",
    "repository": {
      "url": "https://github.com/ShenghaiWang/xcodebuild",
      "source": "github",
      "id": "941391898"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.10.0",
        "registryType": "pypi",
        "identifier": "mcpxcodebuild",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "bce1c06f-6325-418a-91e2-0ff2f6cf8ffc",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "bce1c06f-6325-418a-91e2-0ff2f6cf8ffc"
      }
    }
  },
  {
    "name": "io.github.john-zhang-dev/xero-mcp",
    "description": "A Model Context Protocol server allows Clients to interact with Xero",
    "status": "active",
    "repository": {
      "url": "https://github.com/john-zhang-dev/xero-mcp",
      "source": "github",
      "id": "950380608"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.3.0",
        "environmentVariables": [
          {
            "description": "YOUR_CLIENT_ID",
            "name": "XERO_CLIENT_ID"
          },
          {
            "description": "YOUR_CLIENT_SECRET",
            "name": "XERO_CLIENT_SECRET"
          },
          {
            "description": "http://localhost:5000/callback",
            "name": "XERO_REDIRECT_URI"
          }
        ],
        "registryType": "npm",
        "identifier": "xero-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "aeca0d6b-ed78-4634-a29a-6d08f71de2b6",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "aeca0d6b-ed78-4634-a29a-6d08f71de2b6"
      }
    }
  },
  {
    "name": "io.github.xgenerationlab/xiyan_mcp_server",
    "description": "A Model Context Protocol (MCP) server that enables natural language queries to databases",
    "status": "active",
    "repository": {
      "url": "https://github.com/XGenerationLab/xiyan_mcp_server",
      "source": "github",
      "id": "947753431"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.5",
        "registryType": "pypi",
        "identifier": "xiyan_mcp_server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "a33de229-5e89-468d-aa2a-570b0f6e3dfa",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "a33de229-5e89-468d-aa2a-570b0f6e3dfa"
      }
    }
  },
  {
    "name": "io.github.apeyroux/mcp-xmind",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/apeyroux/mcp-xmind",
      "source": "github",
      "id": "902421970"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.1.1",
        "packageArguments": [
          {
            "description": "/Users/alex/XMind",
            "isRequired": true,
            "format": "string",
            "value": "/Users/alex/XMind",
            "default": "/Users/alex/XMind",
            "type": "positional",
            "valueHint": "/Users/alex/XMind"
          }
        ],
        "registryType": "npm",
        "identifier": "@41px/mcp-xmind",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "cd63d589-6f0e-4d2d-8c9c-b6857f48cc62",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "cd63d589-6f0e-4d2d-8c9c-b6857f48cc62"
      }
    }
  },
  {
    "name": "io.github.chuckbryan/ynabmcpserver",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/ChuckBryan/ynabmcpserver",
      "source": "github",
      "id": "982820266"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.0.0",
        "registryType": "oci",
        "identifier": "ynabmcpserver",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c859bceb-143a-43dc-84e6-8ad8f707fcb0",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c859bceb-143a-43dc-84e6-8ad8f707fcb0"
      }
    }
  },
  {
    "name": "io.github.zubeidhendricks/youtube-mcp-server",
    "description": "MCP Server for YouTube API, enabling video management, Shorts creation, and advanced analytics",
    "status": "active",
    "repository": {
      "url": "https://github.com/ZubeidHendricks/youtube-mcp-server",
      "source": "github",
      "id": "909607678"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "environmentVariables": [
          {
            "description": "${input:apiKey}",
            "name": "YOUTUBE_API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "zubeid-youtube-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "0278fd92-a009-4a47-a6df-5f77db37e6ab",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "0278fd92-a009-4a47-a6df-5f77db37e6ab"
      }
    }
  },
  {
    "name": "io.github.prathamesh0901/zoom-mcp-server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/Prathamesh0901/zoom-mcp-server",
      "source": "github",
      "id": "978843359"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "environmentVariables": [
          {
            "description": "Your Zoom Account ID",
            "name": "ZOOM_ACCOUNT_ID"
          },
          {
            "description": "Your Zoom Client ID",
            "name": "ZOOM_CLIENT_ID"
          },
          {
            "description": "Your Zoom Client Secret",
            "name": "ZOOM_CLIENT_SECRET"
          }
        ],
        "registryType": "npm",
        "identifier": "@prathamesh0901/zoom-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "be45349a-793d-44d9-b2c6-6d4a30785a18",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "be45349a-793d-44d9-b2c6-6d4a30785a18"
      }
    }
  },
  {
    "name": "io.github.isdaniel/mcp_weather_server",
    "description": "",
    "status": "active",
    "repository": {
      "url": "https://github.com/isdaniel/mcp_weather_server",
      "source": "github",
      "id": "949740349"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.1",
        "registryType": "pypi",
        "identifier": "mcp_weather_server",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "17829ab3-ae45-4fdd-95dc-4bb82a75752d",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "17829ab3-ae45-4fdd-95dc-4bb82a75752d"
      }
    }
  },
  {
    "name": "io.github.zcaceres/easy-mcp",
    "description": "Absurdly easy Model Context Protocol Servers in Typescript",
    "status": "active",
    "repository": {
      "url": "https://github.com/zcaceres/easy-mcp",
      "source": "github",
      "id": "908705399"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.1",
        "registryType": "npm",
        "identifier": "easy-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c636fa7e-796e-40a3-bdfc-52d7f4b82db4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c636fa7e-796e-40a3-bdfc-52d7f4b82db4"
      }
    }
  },
  {
    "name": "io.github.tadata-org/fastapi_mcp",
    "description": "Expose your FastAPI endpoints as Model Context Protocol (MCP) tools, with Auth!",
    "status": "active",
    "repository": {
      "url": "https://github.com/tadata-org/fastapi_mcp",
      "source": "github",
      "id": "944976593"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.3.3",
        "registryType": "pypi",
        "identifier": "fastapi-mcp",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9297bbe7-81bc-4a7c-97ba-fcaaf8c7a626",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9297bbe7-81bc-4a7c-97ba-fcaaf8c7a626"
      }
    }
  },
  {
    "name": "io.github.punkpeye/fastmcp",
    "description": "A TypeScript framework for building MCP servers.",
    "status": "active",
    "repository": {
      "url": "https://github.com/punkpeye/fastmcp",
      "source": "github",
      "id": "908799323"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.0.0",
        "packageArguments": [
          {
            "description": "/PATH/TO/YOUR_PROJECT/src/index.ts",
            "isRequired": true,
            "format": "string",
            "value": "/PATH/TO/YOUR_PROJECT/src/index.ts",
            "default": "/PATH/TO/YOUR_PROJECT/src/index.ts",
            "type": "positional",
            "valueHint": "/PATH/TO/YOUR_PROJECT/src/index.ts"
          }
        ],
        "environmentVariables": [
          {
            "description": "value",
            "name": "YOUR_ENV_VAR"
          }
        ],
        "registryType": "npm",
        "identifier": "fastmcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "c978017d-b94a-4d0c-a46e-5395cb94a67e",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "c978017d-b94a-4d0c-a46e-5395cb94a67e"
      }
    }
  },
  {
    "name": "io.github.mcpdotdirect/template-mcp-server",
    "description": "Template to quickly set up your own MCP server ",
    "status": "active",
    "repository": {
      "url": "https://github.com/mcpdotdirect/template-mcp-server",
      "source": "github",
      "id": "946258129"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "2.0.1",
        "packageArguments": [
          {
            "description": "start",
            "isRequired": true,
            "format": "string",
            "value": "start",
            "default": "start",
            "type": "positional",
            "valueHint": "start"
          }
        ],
        "environmentVariables": [
          {
            "description": "development",
            "name": "NODE_ENV"
          }
        ],
        "registryType": "npm",
        "identifier": "@mcpdotdirect/create-mcp-server",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "816a9400-2e2b-4697-8fbb-2a22fd81de74",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "816a9400-2e2b-4697-8fbb-2a22fd81de74"
      }
    }
  },
  {
    "name": "io.github.marimo-team/codemirror-mcp",
    "description": "CodeMirror extension to hook up a Model Context Provider (MCP)",
    "status": "active",
    "repository": {
      "url": "https://github.com/marimo-team/codemirror-mcp",
      "source": "github",
      "id": "914149601"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.2",
        "environmentVariables": [
          {
            "description": "${input:apiKey}",
            "name": "API_KEY"
          }
        ],
        "registryType": "npm",
        "identifier": "@marimo-team/codemirror-mcp",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "bdcb0c25-b41c-4e61-ad25-89e5ddb35dcc",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "bdcb0c25-b41c-4e61-ad25-89e5ddb35dcc"
      }
    }
  },
  {
    "name": "io.github.wong2/mcp-cli",
    "description": "A CLI inspector for the Model Context Protocol",
    "status": "active",
    "repository": {
      "url": "https://github.com/wong2/mcp-cli",
      "source": "github",
      "id": "898806068"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "1.10.0",
        "registryType": "npm",
        "identifier": "@wong2/mcp-cli",
        "registryBaseUrl": "https://registry.npmjs.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "29cf2977-4a42-44f0-8e62-f92ca8391412",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "29cf2977-4a42-44f0-8e62-f92ca8391412"
      }
    }
  },
  {
    "name": "io.github.pathintegral-institute/mcpm.sh",
    "description": "CLI MCP package manager & registry for all platforms and all clients. Search & configure MCP servers. Advanced Router & Profile features.",
    "status": "active",
    "repository": {
      "url": "https://github.com/pathintegral-institute/mcpm.sh",
      "source": "github",
      "id": "952463457"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "2.7.1",
        "registryType": "pypi",
        "identifier": "mcpm",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "963aac9c-4999-4ce6-93c9-43d4b2de16bb",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "963aac9c-4999-4ce6-93c9-43d4b2de16bb"
      }
    }
  },
  {
    "name": "io.github.zueai/mcp-manager",
    "description": "simple web ui to manage mcp (model context protocol) servers in the claude app",
    "status": "active",
    "repository": {
      "url": "https://github.com/zueai/mcp-manager",
      "source": "github",
      "id": "900260982"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.9",
        "registryType": "pypi",
        "identifier": "mcp-manager",
        "registryBaseUrl": "https://pypi.org",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "3288499d-b820-45c9-8abf-60c050c5c741",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "3288499d-b820-45c9-8abf-60c050c5c741"
      }
    }
  },
  {
    "name": "io.github.jeamee/mcphub-desktop",
    "description": "Desktop APP for Discover and Install MCP Servers",
    "status": "active",
    "repository": {
      "url": "https://github.com/Jeamee/MCPHub-Desktop",
      "source": "github",
      "id": "898806615"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.2.1",
        "registryType": "oci",
        "identifier": "mcphub-desktop",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "9f38c975-9a2a-484f-8173-562153f515e4",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "9f38c975-9a2a-484f-8173-562153f515e4"
      }
    }
  },
  {
    "name": "io.github.chatmcp/mcp-directory",
    "description": "directory for Awesome MCP Servers",
    "status": "active",
    "repository": {
      "url": "https://github.com/chatmcp/mcpso",
      "source": "github",
      "id": "899309258"
    },
    "version": "0.0.1-seed",
    "packages": [
      {
        "version": "0.1.0",
        "registryType": "oci",
        "identifier": "navfast",
        "registryBaseUrl": "https://docker.io",
        "transport": {
          "type": "stdio"
        }
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/official": {
        "serverId": "53bef572-b137-447a-bb2f-9fdd37926619",
        "isLatest": true,
        "publishedAt": "0001-01-01T00:00:00Z",
        "updatedAt": "0001-01-01T00:00:00Z",
        "versionId": "53bef572-b137-447a-bb2f-9fdd37926619"
      }
    }
  }
]
